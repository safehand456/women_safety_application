// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/services/haptic_feedback.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__haptic_feedback_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  var haptic_feedback = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/services/haptic_feedback.dart"];
  haptic_feedback.HapticFeedback = class HapticFeedback extends core.Object {
    static vibrate() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncvibrate = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "HapticFeedback.vibrate"), t$36asyncvibrate, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncvibrate, t$completer);
    }
    static lightImpact() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asynclightImpact = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "HapticFeedback.vibrate", "HapticFeedbackType.lightImpact"), t$36asynclightImpact, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asynclightImpact, t$completer);
    }
    static mediumImpact() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncmediumImpact = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "HapticFeedback.vibrate", "HapticFeedbackType.mediumImpact"), t$36asyncmediumImpact, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncmediumImpact, t$completer);
    }
    static heavyImpact() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncheavyImpact = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "HapticFeedback.vibrate", "HapticFeedbackType.heavyImpact"), t$36asyncheavyImpact, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncheavyImpact, t$completer);
    }
    static selectionClick() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncselectionClick = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "HapticFeedback.vibrate", "HapticFeedbackType.selectionClick"), t$36asyncselectionClick, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncselectionClick, t$completer);
    }
  };
  (haptic_feedback.HapticFeedback.new = function() {
    ;
  }).prototype = haptic_feedback.HapticFeedback.prototype;
  dart.addRtiResources(haptic_feedback.HapticFeedback, ["flutter__src__services__haptic_feedback|HapticFeedback"]);
  dart.setStaticMethodSignature(haptic_feedback.HapticFeedback, () => ['vibrate', 'lightImpact', 'mediumImpact', 'heavyImpact', 'selectionClick']);
  dart.setLibraryUri(haptic_feedback.HapticFeedback, I[0]);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"async|Future":{"Future.T":"1"}}'));
  dart.trackLibraries("packages/flutter/src/services/haptic_feedback.dart", {
    "package:flutter/src/services/haptic_feedback.dart": haptic_feedback
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["haptic_feedback.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;oCAmBsB;;;;;;;cAClB;uCAAqB,AAAS,kHAAmB;;;;AACnD;;;YAFoB;IAEpB;;oCASoB;;;;;;;cAClB;uCAAqB,AAAS,kHAC5B,0BACA;;;;AAEJ;;;YALoB;IAKpB;;oCASoB;;;;;;;cAClB;uCAAqB,AAAS,kHAC5B,0BACA;;;;AAEJ;;;YALoB;IAKpB;;oCAUoB;;;;;;;cAClB;uCAAqB,AAAS,kHAC5B,0BACA;;;;AAEJ;;;YALoB;IAKpB;;oCAQoB;;;;;;;cAClB;uCAAqB,AAAS,kHAC5B,0BACA;;;;AAEJ;;;YALoB;IAKpB;;;;EACF","file":"../../../../../../../../../../packages/flutter/src/services/haptic_feedback.dart.lib.js"}');
  // Exports:
  return {
    src__services__haptic_feedback: haptic_feedback
  };
}));

//# sourceMappingURL=haptic_feedback.dart.lib.js.map
