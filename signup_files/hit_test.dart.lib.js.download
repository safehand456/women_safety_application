// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/gestures/hit_test.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/vector_math/vector_math_64.dart'], (function load__packages__flutter__src__gestures__hit_test_dart(dart_sdk, packages__flutter__src__foundation___platform_web$46dart, packages__vector_math__vector_math_64$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const diagnostics = packages__flutter__src__foundation___platform_web$46dart.src__foundation__diagnostics;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  var hit_test = Object.create(dart.library);
  var $isEmpty = dartx.isEmpty;
  var $last = dartx.last;
  var $add = dartx.add;
  var $clear = dartx.clear;
  var $isNotEmpty = dartx.isNotEmpty;
  var $removeLast = dartx.removeLast;
  var $abs = dartx.abs;
  var $every = dartx.every;
  var $join = dartx.join;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:flutter/src/gestures/hit_test.dart",
    "package:vector_math/vector_math_64.dart",
    "dart:ui",
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/gestures/hit_test.dart",
    "dart:core"
  ];
  hit_test.HitTestable = class HitTestable extends core.Object {};
  (hit_test.HitTestable.new = function() {
    ;
  }).prototype = hit_test.HitTestable.prototype;
  dart.addRtiResources(hit_test.HitTestable, ["flutter__src__gestures__hit_test|HitTestable"]);
  dart.setLibraryUri(hit_test.HitTestable, I[0]);
  hit_test.HitTestDispatcher = class HitTestDispatcher extends core.Object {};
  (hit_test.HitTestDispatcher.new = function() {
    ;
  }).prototype = hit_test.HitTestDispatcher.prototype;
  dart.addRtiResources(hit_test.HitTestDispatcher, ["flutter__src__gestures__hit_test|HitTestDispatcher"]);
  dart.setLibraryUri(hit_test.HitTestDispatcher, I[0]);
  hit_test.HitTestTarget = class HitTestTarget extends core.Object {};
  (hit_test.HitTestTarget.new = function() {
    ;
  }).prototype = hit_test.HitTestTarget.prototype;
  dart.addRtiResources(hit_test.HitTestTarget, ["flutter__src__gestures__hit_test|HitTestTarget"]);
  dart.setLibraryUri(hit_test.HitTestTarget, I[0]);
  var target$ = dart.privateName(hit_test, "HitTestEntry.target");
  var _transform = dart.privateName(hit_test, "_transform");
  var _bind = dart.privateName(dart_rti, "_bind");
  var _eval = dart.privateName(dart_rti, "_eval");
  hit_test.HitTestEntry = class HitTestEntry extends core.Object {
    get target() {
      return this[target$];
    }
    set target(value) {
      super.target = value;
    }
    static ['_#new#tearOff'](T, target) {
      return new hit_test.HitTestEntry.new(dart_rti.instanceType(this)[_bind](T)[_eval]("flutter__src__gestures__hit_test|HitTestEntry<1>"), target);
    }
    toString() {
      return diagnostics.describeIdentity(this) + "(" + dart.str(this.target) + ")";
    }
    get transform() {
      return this[_transform];
    }
  };
  (hit_test.HitTestEntry.new = function(_ti, target) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_transform] = null;
    this[target$] = target;
    ;
  }).prototype = hit_test.HitTestEntry.prototype;
  dart.addRtiResources(hit_test.HitTestEntry, ["flutter__src__gestures__hit_test|HitTestEntry"]);
  dart.setGetterSignature(hit_test.HitTestEntry, () => dart.global.Object.setPrototypeOf({
    transform: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4?", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(hit_test.HitTestEntry))));
  dart.setLibraryUri(hit_test.HitTestEntry, I[0]);
  dart.setFieldSignature(hit_test.HitTestEntry, () => dart.global.Object.setPrototypeOf({
    target: {
      type: _ti => _ti[_eval]("HitTestEntry.T"),
      isConst: false,
      isFinal: true
    },
    [_transform]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(hit_test.HitTestEntry))));
  dart.defineExtensionMethods(hit_test.HitTestEntry, ['toString']);
  hit_test._TransformPart = class _TransformPart extends core.Object {};
  (hit_test._TransformPart.new = function() {
    ;
  }).prototype = hit_test._TransformPart.prototype;
  dart.addRtiResources(hit_test._TransformPart, ["flutter__src__gestures__hit_test|_TransformPart"]);
  dart.setLibraryUri(hit_test._TransformPart, I[0]);
  var matrix$ = dart.privateName(hit_test, "_MatrixTransformPart.matrix");
  hit_test._MatrixTransformPart = class _MatrixTransformPart extends hit_test._TransformPart {
    get matrix() {
      return this[matrix$];
    }
    set matrix(value) {
      super.matrix = value;
    }
    static ['_#new#tearOff'](matrix) {
      return new hit_test._MatrixTransformPart.new(matrix);
    }
    multiply(rhs) {
      return this.matrix.multiplied(rhs);
    }
  };
  (hit_test._MatrixTransformPart.new = function(matrix) {
    this[matrix$] = matrix;
    dart.global.Object.getPrototypeOf(hit_test._MatrixTransformPart).new.call(this);
    ;
  }).prototype = hit_test._MatrixTransformPart.prototype;
  dart.addRtiResources(hit_test._MatrixTransformPart, ["flutter__src__gestures__hit_test|_MatrixTransformPart"]);
  dart.setMethodSignature(hit_test._MatrixTransformPart, () => dart.global.Object.setPrototypeOf({
    multiply: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4(vector_math__vector_math_64|Matrix4)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(hit_test._MatrixTransformPart))));
  dart.setLibraryUri(hit_test._MatrixTransformPart, I[0]);
  dart.setFieldSignature(hit_test._MatrixTransformPart, () => dart.global.Object.setPrototypeOf({matrix: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(hit_test._MatrixTransformPart))));
  var offset$ = dart.privateName(hit_test, "_OffsetTransformPart.offset");
  hit_test._OffsetTransformPart = class _OffsetTransformPart extends hit_test._TransformPart {
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      super.offset = value;
    }
    static ['_#new#tearOff'](offset) {
      return new hit_test._OffsetTransformPart.new(offset);
    }
    multiply(rhs) {
      let t$360;
      t$360 = rhs.clone();
      return (() => {
        t$360.leftTranslate(this.offset.dx, this.offset.dy);
        return t$360;
      })();
    }
  };
  (hit_test._OffsetTransformPart.new = function(offset) {
    this[offset$] = offset;
    dart.global.Object.getPrototypeOf(hit_test._OffsetTransformPart).new.call(this);
    ;
  }).prototype = hit_test._OffsetTransformPart.prototype;
  dart.addRtiResources(hit_test._OffsetTransformPart, ["flutter__src__gestures__hit_test|_OffsetTransformPart"]);
  dart.setMethodSignature(hit_test._OffsetTransformPart, () => dart.global.Object.setPrototypeOf({
    multiply: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4(vector_math__vector_math_64|Matrix4)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(hit_test._OffsetTransformPart))));
  dart.setLibraryUri(hit_test._OffsetTransformPart, I[0]);
  dart.setFieldSignature(hit_test._OffsetTransformPart, () => dart.global.Object.setPrototypeOf({offset: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(hit_test._OffsetTransformPart))));
  var _path = dart.privateName(hit_test, "_path");
  var _transforms = dart.privateName(hit_test, "_transforms");
  var _localTransforms = dart.privateName(hit_test, "_localTransforms");
  var _globalizeTransforms = dart.privateName(hit_test, "_globalizeTransforms");
  var _lastTransform = dart.privateName(hit_test, "_lastTransform");
  var _debugVectorMoreOrLessEquals = dart.privateName(hit_test, "_debugVectorMoreOrLessEquals");
  hit_test.HitTestResult = class HitTestResult extends core.Object {
    static ['_#new#tearOff']() {
      return new hit_test.HitTestResult.new();
    }
    static ['_#wrap#tearOff'](result) {
      return new hit_test.HitTestResult.wrap(result);
    }
    get path() {
      return this[_path];
    }
    [_globalizeTransforms]() {
      if (this[_localTransforms][$isEmpty]) {
        return;
      }
      let last = this[_transforms][$last];
      for (let part of this[_localTransforms]) {
        last = part.multiply(last);
        this[_transforms][$add](last);
      }
      this[_localTransforms][$clear]();
    }
    get [_lastTransform]() {
      this[_globalizeTransforms]();
      if (!this[_localTransforms][$isEmpty]) dart.assertFailed(null, I[3], 168, 12, "_localTransforms.isEmpty");
      return this[_transforms][$last];
    }
    add(entry) {
      if (!(entry[_transform] == null)) dart.assertFailed(null, I[3], 178, 12, "entry._transform == null");
      entry[_transform] = this[_lastTransform];
      this[_path][$add](entry);
    }
    pushTransform(transform) {
      if (!(this[_debugVectorMoreOrLessEquals](transform.getRow(2), vector_math_64.Vector4.new(0.0, 0.0, 1.0, 0.0)) && this[_debugVectorMoreOrLessEquals](transform.getColumn(2), vector_math_64.Vector4.new(0.0, 0.0, 1.0, 0.0)))) dart.assertFailed("The third row and third column of a transform matrix for pointer " + "events must be Vector4(0, 0, 1, 0) to ensure that a transformed " + "point is directly under the pointing device. Did you forget to run the paint " + "matrix through PointerEvent.removePerspectiveTransform? " + "The provided matrix is:\n" + dart.str(transform), I[3], 214, 7, "_debugVectorMoreOrLessEquals(transform.getRow(2), Vector4(0, 0, 1, 0)) &&\r\n      _debugVectorMoreOrLessEquals(transform.getColumn(2), Vector4(0, 0, 1, 0))");
      this[_localTransforms][$add](new hit_test._MatrixTransformPart.new(transform));
    }
    pushOffset(offset) {
      this[_localTransforms][$add](new hit_test._OffsetTransformPart.new(offset));
    }
    popTransform() {
      if (this[_localTransforms][$isNotEmpty]) {
        this[_localTransforms][$removeLast]();
      } else {
        this[_transforms][$removeLast]();
      }
      if (!this[_transforms][$isNotEmpty]) dart.assertFailed(null, I[3], 275, 12, "_transforms.isNotEmpty");
    }
    [_debugVectorMoreOrLessEquals](a, b, opts) {
      let epsilon = opts && 'epsilon' in opts ? opts.epsilon : 1e-10;
      let result = true;
      if (!dart.fn(() => {
        let difference = a['-'](b);
        result = difference.storage[$every](dart.fn(component => component[$abs]() < epsilon, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|double)", true)));
        return true;
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[3], 280, 12, "() {\r\n      final Vector4 difference = a - b;\r\n      result = difference.storage.every((double component) => component.abs() < epsilon);\r\n      return true;\r\n    }()");
      return result;
    }
    toString() {
      return "HitTestResult(" + (this[_path][$isEmpty] ? "<empty path>" : this[_path][$join](", ")) + ")";
    }
  };
  (hit_test.HitTestResult.new = function() {
    this[_path] = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__gestures__hit_test|HitTestEntry<flutter__src__gestures__hit_test|HitTestTarget>>", true), []);
    this[_transforms] = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<vector_math__vector_math_64|Matrix4>", true), [vector_math_64.Matrix4.identity()]);
    this[_localTransforms] = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__gestures__hit_test|_TransformPart>", true), []);
    ;
  }).prototype = hit_test.HitTestResult.prototype;
  (hit_test.HitTestResult.wrap = function(result) {
    this[_path] = result[_path];
    this[_transforms] = result[_transforms];
    this[_localTransforms] = result[_localTransforms];
    ;
  }).prototype = hit_test.HitTestResult.prototype;
  dart.addRtiResources(hit_test.HitTestResult, ["flutter__src__gestures__hit_test|HitTestResult"]);
  dart.setMethodSignature(hit_test.HitTestResult, () => dart.global.Object.setPrototypeOf({
    [_globalizeTransforms]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__hit_test|HitTestEntry<flutter__src__gestures__hit_test|HitTestTarget>)", true),
    pushTransform: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(vector_math__vector_math_64|Matrix4)", true),
    pushOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(ui|Offset)", true),
    popTransform: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [_debugVectorMoreOrLessEquals]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(vector_math__vector_math_64|Vector4,vector_math__vector_math_64|Vector4{epsilon:core|double})", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(hit_test.HitTestResult))));
  dart.setGetterSignature(hit_test.HitTestResult, () => dart.global.Object.setPrototypeOf({
    path: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<flutter__src__gestures__hit_test|HitTestEntry<flutter__src__gestures__hit_test|HitTestTarget>>", true),
    [_lastTransform]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "vector_math__vector_math_64|Matrix4", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(hit_test.HitTestResult))));
  dart.setLibraryUri(hit_test.HitTestResult, I[0]);
  dart.setFieldSignature(hit_test.HitTestResult, () => dart.global.Object.setPrototypeOf({
    [_path]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__gestures__hit_test|HitTestEntry<flutter__src__gestures__hit_test|HitTestTarget>>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[4]
    },
    [_transforms]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<vector_math__vector_math_64|Matrix4>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[4]
    },
    [_localTransforms]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__gestures__hit_test|_TransformPart>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[4]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(hit_test.HitTestResult))));
  dart.defineExtensionMethods(hit_test.HitTestResult, ['toString']);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__gestures__hit_test|HitTestEntry":{"HitTestEntry.T":"1"},"ui|Offset":{"ui|OffsetBase":[]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"vector_math__vector_math_64|Vector4":{"vector_math__vector_math_64|Vector":[]},"flutter__src__gestures__hit_test|_MatrixTransformPart":{"flutter__src__gestures__hit_test|_TransformPart":[]},"flutter__src__gestures__hit_test|_OffsetTransformPart":{"flutter__src__gestures__hit_test|_TransformPart":[]}}'));
  dart.trackLibraries("packages/flutter/src/gestures/hit_test.dart", {
    "package:flutter/src/gestures/hit_test.dart": hit_test
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["hit_test.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BA;;;;;;EAMA;;;;;;EAMA;;;;;;;;IAYU;;;;;;;;;;AAGa,YAAG,8BAAiB,QAAM,eAAE,eAAM;IAAE;;AAU/B;IAAU;;6CAhBlB;;IAiBT;IAjBS;;EAAO;;;;;;;;;;;;;;;;;;;;;;;EAuBH;;;;;IAgBR;;;;;;;;;aAGW;AACvB,YAAO,AAAO,wBAAW,GAAG;IAC9B;;;IAPgC;AAA1B;;EAAiC;;;;;;;;;;;;;;IAa1B;;;;;;;;;aAGY;;AACvB,cAAO,AAAI,GAAD;YAAC;AAAS,4BAAc,AAAO,gBAAI,AAAO;;;IACtD;;;IAPgC;AAA1B;;EAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCJ;IAAK;;AAqBtC,UAAI,AAAiB;AACnB;;AAEM,iBAAO,AAAY;AAC3B,eAA0B,OAAQ;AAChC,eAAO,AAAK,IAAD,UAAU,IAAI;AACb,QAAZ,wBAAgB,IAAI;;AAEL,MAAjB;IACF;;AAGE;AACA,WAAO,AAAiB;AACxB,YAAO,AAAY;IACrB;QAOsB;AACpB,YAAO,AAAM,AAAW,KAAZ;AACN,MAAN,KAAK,eAAc;AACb,MAAN,kBAAU,KAAK;IACjB;kBA+B2B;AACzB,YACE,AAAuE,mCAA1C,AAAU,SAAD,QAAQ,IAAI,2BAAQ,KAAG,KAAG,KAAG,SACnE,mCAA6B,AAAU,SAAD,WAAW,IAAI,2BAAQ,KAAG,KAAG,KAAG,0BACtE,sEACA,qEACA,kFACA,6DACA,uCAA2B,SAAS;AAErB,MAAjB,6BAAqB,sCAAqB,SAAS;IACrD;eA4BuB;AACJ,MAAjB,6BAAqB,sCAAqB,MAAM;IAClD;;AAiBE,UAAI,AAAiB;AACF,QAAjB;;AAEY,QAAZ;;AAEF,WAAO,AAAY;IACrB;mCAE0C,GAAW;UAAY;AAC1D,mBAAS;AACd,WAAO,AAIN;AAHe,yBAAa,AAAE,CAAD,MAAG,CAAC;AAChC,iBAAS,AAAW,AAAQ,UAAT,iBAAe,QAAQ,aAAc,AAAU,SAAD,WAAS,OAAO;AACjF,cAAO;;AAET,YAAO,OAAM;IACf;;AAGqB,iCAAiB,AAAM,wBAAU,iBAAiB,AAAM,mBAAK,SAAM;IAAE;;;IA/K/E,cAAgB;IACV,oBAAW,gJAAS;IACf,yBAAkB;;EAAE;0CAQT;IACtB,cAAE,AAAO,MAAD;IACF,oBAAE,AAAO,MAAD;IACH,yBAAE,AAAO,MAAD;;EAAiB","file":"../../../../../../../../../../packages/flutter/src/gestures/hit_test.dart.lib.js"}');
  // Exports:
  return {
    src__gestures__hit_test: hit_test
  };
}));

//# sourceMappingURL=hit_test.dart.lib.js.map
