// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/gestures/pointer_signal_resolver.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/_platform_web.dart'], (function load__packages__flutter__src__gestures__pointer_signal_resolver_dart(dart_sdk, packages__flutter__src__foundation___platform_web$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const diagnostics = packages__flutter__src__foundation___platform_web$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation___platform_web$46dart.src__foundation__assertions;
  var pointer_signal_resolver = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/gestures/pointer_signal_resolver.dart",
    "package:flutter/src/gestures/pointer_signal_resolver.dart",
    "package:flutter/src/gestures/events.dart"
  ];
  var _firstRegisteredCallback = dart.privateName(pointer_signal_resolver, "_firstRegisteredCallback");
  var _currentEvent = dart.privateName(pointer_signal_resolver, "_currentEvent");
  var _is = dart.privateName(dart_rti, "_is");
  pointer_signal_resolver.PointerSignalResolver = class PointerSignalResolver extends core.Object {
    register(event, callback) {
      if (!(this[_currentEvent] == null || pointer_signal_resolver._isSameEvent(dart.nullCheck(this[_currentEvent]), event))) dart.assertFailed(null, I[0], 87, 12, "_currentEvent == null || _isSameEvent(_currentEvent!, event)");
      if (this[_firstRegisteredCallback] != null) {
        return;
      }
      this[_currentEvent] = event;
      this[_firstRegisteredCallback] = callback;
    }
    resolve(event) {
      if (this[_firstRegisteredCallback] == null) {
        if (!(this[_currentEvent] == null)) dart.assertFailed(null, I[0], 103, 14, "_currentEvent == null");
        event.respond({allowPlatformDefault: true});
        return;
      }
      if (!pointer_signal_resolver._isSameEvent(dart.nullCheck(this[_currentEvent]), event)) dart.assertFailed(null, I[0], 111, 12, "_isSameEvent(_currentEvent!, event)");
      try {
        dart.nullCheck(this[_firstRegisteredCallback])(dart.nullCheck(this[_currentEvent]));
      } catch (t$36$35e) {
        let exception = dart.getThrown(t$36$35e);
        let stack = dart.stackTrace(t$36$35e);
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object", true)[_is](exception)) {
          let collector = null;
          if (!dart.fn(() => {
            collector = dart.fn(() => _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__foundation__diagnostics|DiagnosticsNode>", true), [new diagnostics.DiagnosticsProperty.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__diagnostics|DiagnosticsProperty<flutter__src__gestures__events|PointerSignalEvent>", true), "Event", event, {style: diagnostics.DiagnosticsTreeStyle.errorProperty})]), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__foundation__diagnostics|DiagnosticsNode>()", true));
            return true;
          }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[0], 116, 14, "() {\r\n        collector = () => <DiagnosticsNode>[\r\n          DiagnosticsProperty<PointerSignalEvent>('Event', event, style: DiagnosticsTreeStyle.errorProperty),\r\n        ];\r\n        return true;\r\n      }()");
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "gesture library", context: new assertions.ErrorDescription.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__assertions|ErrorDescription", true), "while resolving a PointerSignalEvent"), informationCollector: collector}));
        } else
          throw t$36$35e;
      }
      this[_firstRegisteredCallback] = null;
      this[_currentEvent] = null;
    }
    static ['_#new#tearOff']() {
      return new pointer_signal_resolver.PointerSignalResolver.new();
    }
  };
  (pointer_signal_resolver.PointerSignalResolver.new = function() {
    this[_firstRegisteredCallback] = null;
    this[_currentEvent] = null;
    ;
  }).prototype = pointer_signal_resolver.PointerSignalResolver.prototype;
  dart.addRtiResources(pointer_signal_resolver.PointerSignalResolver, ["flutter__src__gestures__pointer_signal_resolver|PointerSignalResolver"]);
  dart.setMethodSignature(pointer_signal_resolver.PointerSignalResolver, () => dart.global.Object.setPrototypeOf({
    register: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerSignalEvent,~(flutter__src__gestures__events|PointerSignalEvent))", true),
    resolve: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerSignalEvent)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(pointer_signal_resolver.PointerSignalResolver))));
  dart.setLibraryUri(pointer_signal_resolver.PointerSignalResolver, I[1]);
  dart.setFieldSignature(pointer_signal_resolver.PointerSignalResolver, () => dart.global.Object.setPrototypeOf({
    [_firstRegisteredCallback]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerSignalEvent)?", true),
      isConst: false,
      isFinal: false
    },
    [_currentEvent]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerSignalEvent?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(pointer_signal_resolver.PointerSignalResolver))));
  pointer_signal_resolver._isSameEvent = function _isSameEvent(event1, event2) {
    let t$361, t$361$;
    return dart.equals((t$361 = event1.original, t$361 == null ? event1 : t$361), (t$361$ = event2.original, t$361$ == null ? event2 : t$361$));
  };
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__foundation__diagnostics|DiagnosticsProperty":{"DiagnosticsProperty.T":"1","flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"flutter__src__gestures__events|PointerSignalEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_RespondablePointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_RespondablePointerEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__foundation__assertions|ErrorDescription":{"flutter__src__foundation__assertions|_ErrorDiagnostic":[],"DiagnosticsProperty.T":"core|List<core|Object>","flutter__src__foundation__diagnostics|DiagnosticsProperty":["core|List<core|Object>"],"flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"flutter__src__foundation__assertions|_ErrorDiagnostic":{"DiagnosticsProperty.T":"core|List<core|Object>","flutter__src__foundation__diagnostics|DiagnosticsProperty":["core|List<core|Object>"],"flutter__src__foundation__diagnostics|DiagnosticsNode":[]}}'));
  dart.trackLibraries("packages/flutter/src/gestures/pointer_signal_resolver.dart", {
    "package:flutter/src/gestures/pointer_signal_resolver.dart": pointer_signal_resolver
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["pointer_signal_resolver.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;aAqFmC,OAAqC;AACpE,YAAO,AAAc,AAAQ,+BAAG,qCAA0B,eAAb,sBAAgB,KAAK;AAClE,UAAI;AACF;;AAEF,4BAAgB,KAAK;AACrB,uCAA2B,QAAQ;IACrC;YAQgC;AAC9B,UAAI,AAAyB;AAC3B,cAAO,AAAc;AAGf,QAAN,KAAK,gCACmB;AAExB;;AAEF,WAAO,qCAA0B,eAAb,sBAAgB,KAAK;AACzC;AAC2B,QAAD,eAAxB,gCAAuC,eAAb;;YACnB;YAAW;AAAlB;AACsB;AACtB,eAAO,AAKN;AAJC,wBAAY,cAAuB,kKACjC,gNAAwC,SAAS,KAAK,UAA8B;AAEtF,kBAAO;;AAEI,8CAAY,mDACZ,SAAS,SACb,KAAK,WACH,4BACA,qJAAiB,+DACJ,SAAS;;;;AAGnC,uCAA2B;AAC3B,4BAAgB;IAClB;;;;;;IArE+B;IAEX;;EAoEtB;;;;;;;;;;;;;;;;;;;;+DAjHqC,QAA2B;;AAC9D,UAAmC,cAAX,QAAhB,AAAO,MAAD,WAAC,gBAAY,MAAM,YAAsB,SAAhB,AAAO,MAAD,WAAC,iBAAY,MAAM;EAClE","file":"../../../../../../../../../../packages/flutter/src/gestures/pointer_signal_resolver.dart.lib.js"}');
  // Exports:
  return {
    src__gestures__pointer_signal_resolver: pointer_signal_resolver
  };
}));

//# sourceMappingURL=pointer_signal_resolver.dart.lib.js.map
