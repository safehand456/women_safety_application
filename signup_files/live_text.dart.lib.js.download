// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/services/live_text.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__live_text_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  var live_text = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/services/live_text.dart"];
  live_text.LiveText = class LiveText extends core.Object {
    static isLiveTextInputAvailable() {
      let t$360;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)), t$returnValue, asyncScope = Object.create(null);
      var t$36asyncisLiveTextInputAvailable = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true), "LiveText.isLiveTextInputAvailable"), t$36asyncisLiveTextInputAvailable, t$completer);
            case 2:
              // returning from await.
              asyncScope.supportLiveTextInput = (t$360 = t$result, t$360 == null ? false : t$360);
              t$returnValue = asyncScope.supportLiveTextInput;
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncisLiveTextInputAvailable, t$completer);
    }
    static startLiveTextInput() {
      system_channels.SystemChannels.textInput.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), "TextInput.startLiveTextInput");
    }
  };
  (live_text.LiveText.new = function() {
    ;
  }).prototype = live_text.LiveText.prototype;
  dart.addRtiResources(live_text.LiveText, ["flutter__src__services__live_text|LiveText"]);
  dart.setStaticMethodSignature(live_text.LiveText, () => ['isLiveTextInputAvailable', 'startLiveTextInput']);
  dart.setLibraryUri(live_text.LiveText, I[0]);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"async|Future":{"Future.T":"1"}}'));
  dart.trackLibraries("packages/flutter/src/services/live_text.dart", {
    "package:flutter/src/services/live_text.dart": live_text
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["live_text.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;yIAmBsB;;;;;;;cAEd;uCAAqB,AAAS,0HAAa;;;cADpC,qDACP,gBAAmF;AACvF,8BAAO,+BAAoB;;cAA3B;;;;AACF;;;YAJoB;IAIpB;;AAQ2B,MAAV,mHAAuB;IACxC;;;;EACF","file":"../../../../../../../../../../packages/flutter/src/services/live_text.dart.lib.js"}');
  // Exports:
  return {
    src__services__live_text: live_text
  };
}));

//# sourceMappingURL=live_text.dart.lib.js.map
