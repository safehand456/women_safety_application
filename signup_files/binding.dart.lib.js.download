// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/painting/binding.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/binding.dart', 'packages/flutter/src/painting/image_cache.dart', 'packages/flutter/src/foundation/change_notifier.dart'], (function load__packages__flutter__src__painting__binding_dart(dart_sdk, packages__flutter__src__foundation__binding$46dart, packages__flutter__src__painting__image_cache$46dart, packages__flutter__src__foundation__change_notifier$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = packages__flutter__src__foundation__binding$46dart.src__foundation__binding;
  const image_cache = packages__flutter__src__painting__image_cache$46dart.src__painting__image_cache;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  var binding$ = Object.create(dart.library);
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/painting/binding.dart",
    "package:flutter/src/painting/binding.dart",
    "package:flutter/src/painting/shader_warm_up.dart",
    "package:flutter/src/painting/image_cache.dart",
    "dart:core"
  ];
  var __PaintingBinding__imageCache = dart.privateName(binding$, "_#PaintingBinding#_imageCache");
  var _systemFonts = dart.privateName(binding$, "_systemFonts");
  var _imageCache = dart.privateName(binding$, "_imageCache");
  var _as = dart.privateName(dart_rti, "_as");
  binding$.PaintingBinding = class PaintingBinding extends core.Object {
    static get instance() {
      return binding.BindingBase.checkInstance(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__binding|PaintingBinding", true), binding$.PaintingBinding._instance);
    }
  };
  binding$.PaintingBinding[dart.mixinOn] = _PaintingBinding$36BindingBase$36ServicesBinding => class PaintingBinding extends _PaintingBinding$36BindingBase$36ServicesBinding {
    initInstances() {
      let t$360;
      super.initInstances();
      binding$.PaintingBinding._instance = this;
      this[_imageCache] = this.createImageCache();
      t$360 = binding$.PaintingBinding.shaderWarmUp;
      t$360 == null ? null : t$360.execute();
    }
    get imageCache() {
      return this[_imageCache];
    }
    get [_imageCache]() {
      let t$360;
      t$360 = this[__PaintingBinding__imageCache];
      return t$360 == null ? dart.throw(new _internal.LateError.fieldNI("_imageCache")) : t$360;
    }
    set [_imageCache](_imageCache$35param) {
      this[__PaintingBinding__imageCache] = _imageCache$35param;
    }
    createImageCache() {
      return new image_cache.ImageCache.new();
    }
    instantiateImageCodecFromBuffer(buffer, opts) {
      let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
      let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
      let allowUpscaling = opts && 'allowUpscaling' in opts ? opts.allowUpscaling : false;
      if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[0], 118, 12, "cacheWidth == null || cacheWidth > 0");
      if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[0], 119, 12, "cacheHeight == null || cacheHeight > 0");
      return ui.instantiateImageCodecFromBuffer(buffer, {targetWidth: cacheWidth, targetHeight: cacheHeight, allowUpscaling: allowUpscaling});
    }
    instantiateImageCodecWithSize(buffer, opts) {
      let getTargetSize = opts && 'getTargetSize' in opts ? opts.getTargetSize : null;
      return ui.instantiateImageCodecWithSize(buffer, {getTargetSize: getTargetSize});
    }
    evict(asset) {
      super.evict(asset);
      this.imageCache.clear();
      this.imageCache.clearLiveImages();
    }
    handleMemoryPressure() {
      super.handleMemoryPressure();
      this.imageCache.clear();
    }
    get systemFonts() {
      return this[_systemFonts];
    }
    handleSystemMessage(systemMessage) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue, asyncScope = Object.create(null);
      var t$36asynchandleSystemMessage = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(super.handleSystemMessage(systemMessage), t$36asynchandleSystemMessage, t$completer);
            case 2:
              // returning from await.
              asyncScope.message = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|String,@>", true)[_as](systemMessage);
              asyncScope.type = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](asyncScope.message[$_get]("type"));
              switch (asyncScope.type) {
                case "fontsChange":
                  this[_systemFonts].notifyListeners();
              }
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asynchandleSystemMessage, t$completer);
    }
  };
  (binding$.PaintingBinding[dart.mixinNew] = function() {
    this[__PaintingBinding__imageCache] = null;
    this[_systemFonts] = new binding$._SystemFontsNotifier.new();
  }).prototype = binding$.PaintingBinding.prototype;
  dart.addRtiResources(binding$.PaintingBinding, ["flutter__src__painting__binding|PaintingBinding"]);
  dart.setMethodSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    initInstances: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    createImageCache: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCache()", true),
    instantiateImageCodecFromBuffer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Codec>(ui|ImmutableBuffer{allowUpscaling:core|bool,cacheHeight:core|int?,cacheWidth:core|int?})", true),
    instantiateImageCodecWithSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Codec>(ui|ImmutableBuffer{getTargetSize:ui|TargetImageSize(core|int,core|int)?})", true),
    evict: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|String)", true),
    handleMemoryPressure: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    handleSystemMessage: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(core|Object)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setGetterSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    imageCache: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCache", true),
    [_imageCache]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCache", true),
    systemFonts: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__change_notifier|Listenable", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setSetterSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    [_imageCache]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCache", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setStaticGetterSignature(binding$.PaintingBinding, () => ['instance']);
  dart.setLibraryUri(binding$.PaintingBinding, I[1]);
  dart.setFieldSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    [__PaintingBinding__imageCache]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCache?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    },
    [_systemFonts]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__binding|_SystemFontsNotifier", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setStaticFieldSignature(binding$.PaintingBinding, () => ['_instance', 'shaderWarmUp']);
  dart.defineLazy(binding$.PaintingBinding, {
    /*binding$.PaintingBinding._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*binding$.PaintingBinding.shaderWarmUp*/get shaderWarmUp() {
      return null;
    },
    set shaderWarmUp(value) {}
  });
  var _systemFontsCallbacks = dart.privateName(binding$, "_systemFontsCallbacks");
  binding$._SystemFontsNotifier = class _SystemFontsNotifier extends change_notifier.Listenable {
    notifyListeners() {
      for (let callback of this[_systemFontsCallbacks]) {
        callback();
      }
    }
    addListener(listener) {
      this[_systemFontsCallbacks].add(listener);
    }
    removeListener(listener) {
      this[_systemFontsCallbacks].remove(listener);
    }
    static ['_#new#tearOff']() {
      return new binding$._SystemFontsNotifier.new();
    }
  };
  (binding$._SystemFontsNotifier.new = function() {
    this[_systemFontsCallbacks] = collection.LinkedHashSet.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|LinkedHashSet<~()>", true));
    dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier).new.call(this);
    ;
  }).prototype = binding$._SystemFontsNotifier.prototype;
  dart.addRtiResources(binding$._SystemFontsNotifier, ["flutter__src__painting__binding|_SystemFontsNotifier"]);
  dart.setMethodSignature(binding$._SystemFontsNotifier, () => dart.global.Object.setPrototypeOf({
    notifyListeners: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    addListener: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(~())", true),
    removeListener: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(~())", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier))));
  dart.setLibraryUri(binding$._SystemFontsNotifier, I[1]);
  dart.setFieldSignature(binding$._SystemFontsNotifier, () => dart.global.Object.setPrototypeOf({[_systemFontsCallbacks]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<~()>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[4]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier))));
  dart.copyProperties(binding$, {
    get imageCache() {
      return binding$.PaintingBinding.instance.imageCache;
    }
  });
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__painting__binding|PaintingBinding":{"flutter__src__foundation__binding|BindingBase":[],"flutter__src__services__binding|ServicesBinding":[],"flutter__src__scheduler__binding|SchedulerBinding":[]},"flutter__src__services__binding|ServicesBinding":{"flutter__src__foundation__binding|BindingBase":[],"flutter__src__scheduler__binding|SchedulerBinding":[]},"flutter__src__scheduler__binding|SchedulerBinding":{"flutter__src__foundation__binding|BindingBase":[]},"core|Map":{"Map.K":"1","Map.V":"2"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"async|Future":{"Future.T":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__painting__binding|_SystemFontsNotifier":{"flutter__src__foundation__change_notifier|Listenable":[]},"collection|LinkedHashSet":{"LinkedHashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]}}'));
  dart.trackLibraries("packages/flutter/src/painting/binding.dart", {
    "package:flutter/src/painting/binding.dart": binding$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["binding.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCyC,YAAY,8IAAc;IAAU;;;;;AAXnE;AACN,2CAAY;AACZ,0BAAc;AACd;6BAAc;IAChB;;AAgD6B;IAAW;;;AACxB;;IAAW;sBAAX;;IAAW;;AAMM;IAAY;oCA4BxB;UACd;UACA;UACA;AAEL,YAAO,AAAW,AAAQ,UAAT,yBAAY,UAAU,IAAG;AAC1C,YAAO,AAAY,AAAQ,WAAT,yBAAY,WAAW,IAAG;AAC5C,YAAU,oCACR,MAAM,gBACO,UAAU,gBACT,WAAW,kBACT,cAAc;IAElC;kCAkBqB;UACS;AAE5B,YAAU,kCAA8B,MAAM,kBAAiB,aAAa;IAC9E;UAGkB;AACV,kBAAM,KAAK;AACN,MAAX;AACW,MAAX;IACF;;AAIQ;AACK,MAAX;IACF;;AAW8B;IAAY;wBAIF;iIAA3B;;;;;;;cACX;uCAAY,0BAAoB,aAAa;;;cAClB,qBAAwB,uFAAd,aAAa;cACrC,kBAAuB,2EAAhB,AAAO,kBAAA,QAAC;sBACpB,eAAI;;kBAER,AAAa;;;cAEjB;;;;AACF;;;YATa;IASb;;;0CA1GgB;IA8FW,qBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAvIlB,kCAAS;;;;MA+BZ,qCAAY;;;;;;;;AA2H/B,eAAwB,WAAY;AAC1B,QAAR,QAAQ;;IAEZ;gBAG8B;AACN,MAAtB,gCAA0B,QAAQ;IACpC;mBAEiC;AACT,MAAtB,mCAA6B,QAAQ;IACvC;;;;;;IAfwB,8BAAsC;;;EAgBhE;;;;;;;;;;;;;;;;AAS6B,YAAgB,AAAS;IAAU","file":"../../../../../../../../../../packages/flutter/src/painting/binding.dart.lib.js"}');
  // Exports:
  return {
    src__painting__binding: binding$
  };
}));

//# sourceMappingURL=binding.dart.lib.js.map
