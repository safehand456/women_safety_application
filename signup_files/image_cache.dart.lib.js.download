// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/painting/image_cache.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/painting/image_stream.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/foundation/memory_allocations.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/foundation/_platform_web.dart'], (function load__packages__flutter__src__painting__image_cache_dart(dart_sdk, packages__flutter__src__painting__image_stream$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__foundation__memory_allocations$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__foundation___platform_web$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const developer = dart_sdk.developer;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const image_stream = packages__flutter__src__painting__image_stream$46dart.src__painting__image_stream;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const memory_allocations = packages__flutter__src__foundation__memory_allocations$46dart.src__foundation__memory_allocations;
  const binding = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const diagnostics = packages__flutter__src__foundation___platform_web$46dart.src__foundation__diagnostics;
  var image_cache = Object.create(dart.library);
  var $length = dartx.length;
  var $values = dartx.values;
  var $clear = dartx.clear;
  var $remove = dartx.remove;
  var $_set = dartx._set;
  var $putIfAbsent = dartx.putIfAbsent;
  var $toString = dartx.toString;
  var $_get = dartx._get;
  var $containsKey = dartx.containsKey;
  var $keys = dartx.keys;
  var $first = dartx.first;
  var $add = dartx.add;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/painting/image_cache.dart",
    "package:flutter/src/painting/image_cache.dart",
    "dart:core",
    "package:flutter/src/painting/image_stream.dart"
  ];
  var _pendingImages = dart.privateName(image_cache, "_pendingImages");
  var _cache = dart.privateName(image_cache, "_cache");
  var _liveImages = dart.privateName(image_cache, "_liveImages");
  var _maximumSize = dart.privateName(image_cache, "_maximumSize");
  var _maximumSizeBytes = dart.privateName(image_cache, "_maximumSizeBytes");
  var _currentSizeBytes = dart.privateName(image_cache, "_currentSizeBytes");
  var _checkCacheSize = dart.privateName(image_cache, "_checkCacheSize");
  var _touch = dart.privateName(image_cache, "_touch");
  var _trackLiveImage = dart.privateName(image_cache, "_trackLiveImage");
  var _is = dart.privateName(dart_rti, "_is");
  var _as = dart.privateName(dart_rti, "_as");
  image_cache.ImageCache = class ImageCache extends core.Object {
    get maximumSize() {
      return this[_maximumSize];
    }
    set maximumSize(value) {
      let t$360;
      if (!(value >= 0)) dart.assertFailed(null, I[0], 108, 12, "value >= 0");
      if (value === this.maximumSize) {
        return;
      }
      let debugTimelineTask = null;
      {
        debugTimelineTask = (t$360 = new developer.TimelineTask.new(), (() => {
          t$360.start("ImageCache.setMaximumSize", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["value", value])});
          return t$360;
        })());
      }
      this[_maximumSize] = value;
      if (this.maximumSize === 0) {
        this.clear();
      } else {
        this[_checkCacheSize](debugTimelineTask);
      }
      {
        dart.nullCheck(debugTimelineTask).finish();
      }
    }
    get currentSize() {
      return this[_cache][$length];
    }
    get maximumSizeBytes() {
      return this[_maximumSizeBytes];
    }
    set maximumSizeBytes(value) {
      let t$360;
      if (!(value >= 0)) dart.assertFailed(null, I[0], 147, 12, "value >= 0");
      if (value === this[_maximumSizeBytes]) {
        return;
      }
      let debugTimelineTask = null;
      {
        debugTimelineTask = (t$360 = new developer.TimelineTask.new(), (() => {
          t$360.start("ImageCache.setMaximumSizeBytes", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["value", value])});
          return t$360;
        })());
      }
      this[_maximumSizeBytes] = value;
      if (this[_maximumSizeBytes] === 0) {
        this.clear();
      } else {
        this[_checkCacheSize](debugTimelineTask);
      }
      {
        dart.nullCheck(debugTimelineTask).finish();
      }
    }
    get currentSizeBytes() {
      return this[_currentSizeBytes];
    }
    clear() {
      {
        developer.Timeline.instantSync("ImageCache.clear", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["pendingImages", this[_pendingImages][$length], "keepAliveImages", this[_cache][$length], "liveImages", this[_liveImages][$length], "currentSizeInBytes", this[_currentSizeBytes]])});
      }
      for (let image of this[_cache][$values]) {
        image.dispose();
      }
      this[_cache][$clear]();
      for (let pendingImage of this[_pendingImages][$values]) {
        pendingImage.removeListener();
      }
      this[_pendingImages][$clear]();
      this[_currentSizeBytes] = 0;
    }
    evict(key, opts) {
      let t$360;
      let includeLive = opts && 'includeLive' in opts ? opts.includeLive : true;
      if (includeLive) {
        let image = this[_liveImages][$remove](key);
        t$360 = image;
        t$360 == null ? null : t$360.dispose();
      }
      let pendingImage = this[_pendingImages][$remove](key);
      if (pendingImage != null) {
        {
          developer.Timeline.instantSync("ImageCache.evict", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["type", "pending"])});
        }
        pendingImage.removeListener();
        return true;
      }
      let image = this[_cache][$remove](key);
      if (image != null) {
        {
          developer.Timeline.instantSync("ImageCache.evict", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["type", "keepAlive", "sizeInBytes", image.sizeBytes])});
        }
        this[_currentSizeBytes] = this[_currentSizeBytes] - dart.nullCheck(image.sizeBytes);
        image.dispose();
        return true;
      }
      {
        developer.Timeline.instantSync("ImageCache.evict", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["type", "miss"])});
      }
      return false;
    }
    [_touch](key, image, timelineTask) {
      if (image.sizeBytes != null && dart.nullCheck(image.sizeBytes) <= this.maximumSizeBytes && this.maximumSize > 0) {
        this[_currentSizeBytes] = this[_currentSizeBytes] + dart.nullCheck(image.sizeBytes);
        this[_cache][$_set](key, image);
        this[_checkCacheSize](timelineTask);
      } else {
        image.dispose();
      }
    }
    [_trackLiveImage](key, completer, sizeBytes) {
      let t$360;
      t$360 = this[_liveImages][$putIfAbsent](key, dart.fn(() => new image_cache._LiveImage.new(completer, dart.fn(() => {
        this[_liveImages][$remove](key);
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true))), dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|_LiveImage()", true)));
      t$360.sizeBytes == null ? t$360.sizeBytes = sizeBytes : null;
    }
    putIfAbsent(key, loader, opts) {
      let t$360, t$360$;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let debugTimelineTask = null;
      {
        debugTimelineTask = (t$360 = new developer.TimelineTask.new(), (() => {
          t$360.start("ImageCache.putIfAbsent", {arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["key", dart.toString(key)])});
          return t$360;
        })());
      }
      let result = (t$360$ = this[_pendingImages][$_get](key), t$360$ == null ? null : t$360$.completer);
      if (result != null) {
        {
          dart.nullCheck(debugTimelineTask).finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["result", "pending"])});
        }
        return result;
      }
      let image = this[_cache][$remove](key);
      if (image != null) {
        {
          dart.nullCheck(debugTimelineTask).finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["result", "keepAlive"])});
        }
        this[_trackLiveImage](key, image.completer, image.sizeBytes);
        this[_cache][$_set](key, image);
        return image.completer;
      }
      let liveImage = this[_liveImages][$_get](key);
      if (liveImage != null) {
        this[_touch](key, new image_cache._CachedImage.new(liveImage.completer, {sizeBytes: liveImage.sizeBytes}), debugTimelineTask);
        {
          dart.nullCheck(debugTimelineTask).finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["result", "keepAlive"])});
        }
        return liveImage.completer;
      }
      try {
        result = loader();
        this[_trackLiveImage](key, result, null);
      } catch (t$36$35e) {
        let error = dart.getThrown(t$36$35e);
        let stackTrace = dart.stackTrace(t$36$35e);
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object", true)[_is](error)) {
          {
            dart.nullCheck(debugTimelineTask).finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["result", "error", "error", dart.toString(error), "stackTrace", dart.toString(stackTrace)])});
          }
          if (onError != null) {
            onError(error, stackTrace);
            return null;
          } else {
            dart.rethrow(t$36$35e);
          }
        } else
          throw t$36$35e;
      }
      {
        dart.nullCheck(debugTimelineTask).start("listener");
      }
      let listenedOnce = false;
      let trackPendingImage = this.maximumSize > 0 && this.maximumSizeBytes > 0;
      let pendingImage = null;
      function t$36$35pendingImage$35get() {
        let t$361;
        t$361 = pendingImage;
        return t$361 == null ? dart.throw(new _internal.LateError.localNI("pendingImage")) : t$361;
      }
      function t$36$35pendingImage$35set(pendingImage$35param) {
        return pendingImage = pendingImage$35param;
      }
      const listener = (info, syncCall) => {
        let t$363;
        let sizeBytes = null;
        if (info != null) {
          sizeBytes = info.sizeBytes;
          info.dispose();
        }
        let image = new image_cache._CachedImage.new(dart.nullCheck(result), {sizeBytes: sizeBytes});
        this[_trackLiveImage](key, result, sizeBytes);
        if (trackPendingImage) {
          this[_touch](key, image, debugTimelineTask);
        } else {
          image.dispose();
        }
        this[_pendingImages][$remove](key);
        if (!listenedOnce) {
          t$36$35pendingImage$35get().removeListener();
        }
        if (true && !listenedOnce) {
          t$363 = dart.nullCheck(debugTimelineTask);
          (() => {
            t$363.finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["syncCall", syncCall, "sizeInBytes", sizeBytes])});
            t$363.finish({arguments: new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["currentSizeBytes", this.currentSizeBytes, "currentSize", this.currentSize])});
            return t$363;
          })();
        }
        listenedOnce = true;
      };
      dart.fn(listener, dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__painting__image_stream|ImageInfo?,core|bool)", true));
      let streamListener = new image_stream.ImageStreamListener.new(listener);
      t$36$35pendingImage$35set(new image_cache._PendingImage.new(result, streamListener));
      if (trackPendingImage) {
        this[_pendingImages][$_set](key, t$36$35pendingImage$35get());
      }
      result.addListener(streamListener);
      return result;
    }
    statusForKey(key) {
      return new image_cache.ImageCacheStatus.__({pending: this[_pendingImages][$containsKey](key), keepAlive: this[_cache][$containsKey](key), live: this[_liveImages][$containsKey](key)});
    }
    containsKey(key) {
      return this[_pendingImages][$_get](key) != null || this[_cache][$_get](key) != null;
    }
    get liveImageCount() {
      return this[_liveImages][$length];
    }
    get pendingImageCount() {
      return this[_pendingImages][$length];
    }
    clearLiveImages() {
      for (let image of this[_liveImages][$values]) {
        image.dispose();
      }
      this[_liveImages][$clear]();
    }
    [_checkCacheSize](timelineTask) {
      let finishArgs = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true));
      {
        dart.nullCheck(timelineTask).start("checkCacheSize");
        finishArgs[$_set]("evictedKeys", _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<core|String>", true), []));
        finishArgs[$_set]("currentSize", this.currentSize);
        finishArgs[$_set]("currentSizeBytes", this.currentSizeBytes);
      }
      while (this[_currentSizeBytes] > this[_maximumSizeBytes] || this[_cache][$length] > this[_maximumSize]) {
        let key = this[_cache][$keys][$first];
        let image = dart.nullCheck(this[_cache][$_get](key));
        this[_currentSizeBytes] = this[_currentSizeBytes] - dart.nullCheck(image.sizeBytes);
        image.dispose();
        this[_cache][$remove](key);
        {
          dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|String>", true)[_as](finishArgs[$_get]("evictedKeys"))[$add](dart.toString(key));
        }
      }
      {
        finishArgs[$_set]("endSize", this.currentSize);
        finishArgs[$_set]("endSizeBytes", this.currentSizeBytes);
        dart.nullCheck(timelineTask).finish({arguments: finishArgs});
      }
      if (!(this[_currentSizeBytes] >= 0)) dart.assertFailed(null, I[0], 530, 12, "_currentSizeBytes >= 0");
      if (!(this[_cache][$length] <= this.maximumSize)) dart.assertFailed(null, I[0], 531, 12, "_cache.length <= maximumSize");
      if (!(this[_currentSizeBytes] <= this.maximumSizeBytes)) dart.assertFailed(null, I[0], 532, 12, "_currentSizeBytes <= maximumSizeBytes");
    }
    static ['_#new#tearOff']() {
      return new image_cache.ImageCache.new();
    }
  };
  (image_cache.ImageCache.new = function() {
    this[_pendingImages] = new _js_helper.LinkedMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|LinkedMap<core|Object,flutter__src__painting__image_cache|_PendingImage>", true));
    this[_cache] = new _js_helper.LinkedMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|LinkedMap<core|Object,flutter__src__painting__image_cache|_CachedImage>", true));
    this[_liveImages] = new _js_helper.LinkedMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|LinkedMap<core|Object,flutter__src__painting__image_cache|_LiveImage>", true));
    this[_maximumSize] = 1000;
    this[_maximumSizeBytes] = 104857600;
    this[_currentSizeBytes] = 0;
    ;
  }).prototype = image_cache.ImageCache.prototype;
  dart.addRtiResources(image_cache.ImageCache, ["flutter__src__painting__image_cache|ImageCache"]);
  dart.setMethodSignature(image_cache.ImageCache, () => dart.global.Object.setPrototypeOf({
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    evict: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object{includeLive:core|bool})", true),
    [_touch]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object,flutter__src__painting__image_cache|_CachedImage,developer|TimelineTask?)", true),
    [_trackLiveImage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object,flutter__src__painting__image_stream|ImageStreamCompleter,core|int?)", true),
    putIfAbsent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStreamCompleter?(core|Object,flutter__src__painting__image_stream|ImageStreamCompleter(){onError:~(core|Object,core|StackTrace?)?})", true),
    statusForKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCacheStatus(core|Object)", true),
    containsKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object)", true),
    clearLiveImages: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [_checkCacheSize]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(developer|TimelineTask?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(image_cache.ImageCache))));
  dart.setGetterSignature(image_cache.ImageCache, () => dart.global.Object.setPrototypeOf({
    maximumSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    currentSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    maximumSizeBytes: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    currentSizeBytes: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    liveImageCount: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    pendingImageCount: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(image_cache.ImageCache))));
  dart.setSetterSignature(image_cache.ImageCache, () => dart.global.Object.setPrototypeOf({
    maximumSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    maximumSizeBytes: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(image_cache.ImageCache))));
  dart.setLibraryUri(image_cache.ImageCache, I[1]);
  dart.setFieldSignature(image_cache.ImageCache, () => dart.global.Object.setPrototypeOf({
    [_pendingImages]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|Object,flutter__src__painting__image_cache|_PendingImage>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_cache]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|Object,flutter__src__painting__image_cache|_CachedImage>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_liveImages]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|Object,flutter__src__painting__image_cache|_LiveImage>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_maximumSize]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    },
    [_maximumSizeBytes]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    },
    [_currentSizeBytes]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(image_cache.ImageCache))));
  var pending$ = dart.privateName(image_cache, "ImageCacheStatus.pending");
  var keepAlive$ = dart.privateName(image_cache, "ImageCacheStatus.keepAlive");
  var live$ = dart.privateName(image_cache, "ImageCacheStatus.live");
  image_cache.ImageCacheStatus = class ImageCacheStatus extends core.Object {
    get pending() {
      return this[pending$];
    }
    set pending(value) {
      super.pending = value;
    }
    get keepAlive() {
      return this[keepAlive$];
    }
    set keepAlive(value) {
      super.keepAlive = value;
    }
    get live() {
      return this[live$];
    }
    set live(value) {
      super.live = value;
    }
    static ['_#_#tearOff'](opts) {
      let pending = opts && 'pending' in opts ? opts.pending : false;
      let keepAlive = opts && 'keepAlive' in opts ? opts.keepAlive : false;
      let live = opts && 'live' in opts ? opts.live : false;
      return new image_cache.ImageCacheStatus.__({pending: pending, keepAlive: keepAlive, live: live});
    }
    get tracked() {
      return this.pending || this.keepAlive || this.live;
    }
    get untracked() {
      return !this.pending && !this.keepAlive && !this.live;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|ImageCacheStatus", true)[_is](other) && other.pending === this.pending && other.keepAlive === this.keepAlive && other.live === this.live;
    }
    get hashCode() {
      return core.Object.hash(this.pending, this.keepAlive, this.live);
    }
    toString() {
      return object.objectRuntimeType(this, "ImageCacheStatus") + "(pending: " + dart.strSafe(this.pending) + ", live: " + dart.strSafe(this.live) + ", keepAlive: " + dart.strSafe(this.keepAlive) + ")";
    }
  };
  (image_cache.ImageCacheStatus.__ = function(opts) {
    let pending = opts && 'pending' in opts ? opts.pending : false;
    let keepAlive = opts && 'keepAlive' in opts ? opts.keepAlive : false;
    let live = opts && 'live' in opts ? opts.live : false;
    this[pending$] = pending;
    this[keepAlive$] = keepAlive;
    this[live$] = live;
    if (!(!pending || !keepAlive)) dart.assertFailed(null, I[0], 559, 15, "!pending || !keepAlive");
    ;
  }).prototype = image_cache.ImageCacheStatus.prototype;
  dart.addRtiResources(image_cache.ImageCacheStatus, ["flutter__src__painting__image_cache|ImageCacheStatus"]);
  dart.setGetterSignature(image_cache.ImageCacheStatus, () => dart.global.Object.setPrototypeOf({
    tracked: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    untracked: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(image_cache.ImageCacheStatus))));
  dart.setLibraryUri(image_cache.ImageCacheStatus, I[1]);
  dart.setFieldSignature(image_cache.ImageCacheStatus, () => dart.global.Object.setPrototypeOf({
    pending: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    keepAlive: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    live: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(image_cache.ImageCacheStatus))));
  dart.defineExtensionMethods(image_cache.ImageCacheStatus, ['_equals', 'toString']);
  dart.defineExtensionAccessors(image_cache.ImageCacheStatus, ['hashCode']);
  image_cache._CachedImageBase = class _CachedImageBase extends core.Object {
    dispose() {
      if (!(this.handle != null)) dart.assertFailed(null, I[0], 633, 12, "handle != null");
      {
        memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectDisposed({object: this});
      }
      binding.SchedulerBinding.instance.addPostFrameCallback(dart.fn(timeStamp => {
        let t$363;
        if (!(this.handle != null)) dart.assertFailed(null, I[0], 640, 14, "handle != null");
        t$363 = this.handle;
        t$363 == null ? null : t$363.dispose();
        this.handle = null;
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Duration)", true)), {debugLabel: "CachedImage.disposeHandle"});
    }
  };
  (image_cache._CachedImageBase.new = function(completer, opts) {
    let sizeBytes = opts && 'sizeBytes' in opts ? opts.sizeBytes : null;
    this.completer = completer;
    this.sizeBytes = sizeBytes;
    this.handle = completer.keepAlive();
    {
      memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectCreated({library: "package:flutter/painting.dart", className: dart.strSafe(dart_rti.createRuntimeType(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_cache|_CachedImageBase", true))), object: this});
    }
  }).prototype = image_cache._CachedImageBase.prototype;
  dart.addRtiResources(image_cache._CachedImageBase, ["flutter__src__painting__image_cache|_CachedImageBase"]);
  dart.setMethodSignature(image_cache._CachedImageBase, () => dart.global.Object.setPrototypeOf({
    dispose: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(image_cache._CachedImageBase))));
  dart.setLibraryUri(image_cache._CachedImageBase, I[1]);
  dart.setFieldSignature(image_cache._CachedImageBase, () => dart.global.Object.setPrototypeOf({
    completer: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStreamCompleter", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    sizeBytes: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    },
    handle: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStreamCompleterHandle?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(image_cache._CachedImageBase))));
  image_cache._CachedImage = class _CachedImage extends image_cache._CachedImageBase {
    static ['_#new#tearOff'](completer, opts) {
      let sizeBytes = opts && 'sizeBytes' in opts ? opts.sizeBytes : null;
      return new image_cache._CachedImage.new(completer, {sizeBytes: sizeBytes});
    }
  };
  (image_cache._CachedImage.new = function(completer, opts) {
    let sizeBytes = opts && 'sizeBytes' in opts ? opts.sizeBytes : null;
    dart.global.Object.getPrototypeOf(image_cache._CachedImage).new.call(this, completer, {sizeBytes: sizeBytes});
    ;
  }).prototype = image_cache._CachedImage.prototype;
  dart.addRtiResources(image_cache._CachedImage, ["flutter__src__painting__image_cache|_CachedImage"]);
  dart.setLibraryUri(image_cache._CachedImage, I[1]);
  var ___LiveImage__handleRemove = dart.privateName(image_cache, "_#_LiveImage#_handleRemove");
  var _handleRemove = dart.privateName(image_cache, "_handleRemove");
  image_cache._LiveImage = class _LiveImage extends image_cache._CachedImageBase {
    static ['_#new#tearOff'](completer, handleRemove, opts) {
      let sizeBytes = opts && 'sizeBytes' in opts ? opts.sizeBytes : null;
      return new image_cache._LiveImage.new(completer, handleRemove, {sizeBytes: sizeBytes});
    }
    get [_handleRemove]() {
      let t$363;
      t$363 = this[___LiveImage__handleRemove];
      return t$363 == null ? dart.throw(new _internal.LateError.fieldNI("_handleRemove")) : t$363;
    }
    set [_handleRemove](_handleRemove$35param) {
      this[___LiveImage__handleRemove] = _handleRemove$35param;
    }
    dispose() {
      this.completer.removeOnLastListenerRemovedCallback(this[_handleRemove]);
      super.dispose();
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (image_cache._LiveImage.new = function(completer, handleRemove, opts) {
    let sizeBytes = opts && 'sizeBytes' in opts ? opts.sizeBytes : null;
    this[___LiveImage__handleRemove] = null;
    dart.global.Object.getPrototypeOf(image_cache._LiveImage).new.call(this, completer, {sizeBytes: sizeBytes});
    this[_handleRemove] = dart.fn(() => {
      handleRemove();
      this.dispose();
    }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true));
    completer.addOnLastListenerRemovedCallback(this[_handleRemove]);
  }).prototype = image_cache._LiveImage.prototype;
  dart.addRtiResources(image_cache._LiveImage, ["flutter__src__painting__image_cache|_LiveImage"]);
  dart.setGetterSignature(image_cache._LiveImage, () => dart.global.Object.setPrototypeOf({
    [_handleRemove]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(image_cache._LiveImage))));
  dart.setSetterSignature(image_cache._LiveImage, () => dart.global.Object.setPrototypeOf({
    [_handleRemove]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(image_cache._LiveImage))));
  dart.setLibraryUri(image_cache._LiveImage, I[1]);
  dart.setFieldSignature(image_cache._LiveImage, () => dart.global.Object.setPrototypeOf({[___LiveImage__handleRemove]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()?", true),
      isConst: false,
      isFinal: false
    }}, dart.getFields(dart.global.Object.getPrototypeOf(image_cache._LiveImage))));
  dart.defineExtensionMethods(image_cache._LiveImage, ['toString']);
  image_cache._PendingImage = class _PendingImage extends core.Object {
    static ['_#new#tearOff'](completer, listener) {
      return new image_cache._PendingImage.new(completer, listener);
    }
    removeListener() {
      this.completer.removeListener(this.listener);
    }
  };
  (image_cache._PendingImage.new = function(completer, listener) {
    this.completer = completer;
    this.listener = listener;
    ;
  }).prototype = image_cache._PendingImage.prototype;
  dart.addRtiResources(image_cache._PendingImage, ["flutter__src__painting__image_cache|_PendingImage"]);
  dart.setMethodSignature(image_cache._PendingImage, () => dart.global.Object.setPrototypeOf({
    removeListener: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(image_cache._PendingImage))));
  dart.setLibraryUri(image_cache._PendingImage, I[1]);
  dart.setFieldSignature(image_cache._PendingImage, () => dart.global.Object.setPrototypeOf({
    completer: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStreamCompleter", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    listener: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStreamListener", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(image_cache._PendingImage))));
  dart.defineLazy(image_cache, {
    /*image_cache._kDefaultSize*/get _kDefaultSize() {
      return 1000;
    },
    /*image_cache._kDefaultSizeBytes*/get _kDefaultSizeBytes() {
      return 104857600;
    }
  });
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"_js_helper|LinkedMap":{"LinkedMap.K":"1","LinkedMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"flutter__src__painting__image_cache|_CachedImage":{"flutter__src__painting__image_cache|_CachedImageBase":[]},"flutter__src__painting__image_cache|_LiveImage":{"flutter__src__painting__image_cache|_CachedImageBase":[]},"_js_helper|IdentityMap":{"IdentityMap.K":"1","IdentityMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__painting__image_stream|ImageStreamCompleter":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"core|Duration":{"Comparable.T":"core|Duration","core|Comparable":["core|Duration"]}}'));
  dart.trackLibraries("packages/flutter/src/painting/image_cache.dart", {
    "package:flutter/src/painting/image_cache.dart": image_cache
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["image_cache.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../packages/flutter/src/painting/image_cache.dart.lib.js"}');
  // Exports:
  return {
    src__painting__image_cache: image_cache
  };
}));

//# sourceMappingURL=image_cache.dart.lib.js.map
