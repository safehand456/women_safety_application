// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/services/platform_views.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__services__platform_views_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var platform_views = Object.create(dart.library);
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $buffer = dartx.buffer;
  var $lengthInBytes = dartx.lengthInBytes;
  var $length = dartx.length;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $isEmpty = dartx.isEmpty;
  var $remove = dartx.remove;
  var $keys = dartx.keys;
  var $indexOf = dartx.indexOf;
  var $add = dartx.add;
  var $clear = dartx.clear;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "waitingForSize",
        [_Enum_index]: 0
      }, platform_views._AndroidViewState.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "creating",
        [_Enum_index]: 1
      }, platform_views._AndroidViewState.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "created",
        [_Enum_index]: 2
      }, platform_views._AndroidViewState.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "disposed",
        [_Enum_index]: 3
      }, platform_views._AndroidViewState.prototype));
    },
    get C0() {
      return C[0] = dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_AndroidViewState", true), [C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4]);
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "touch",
        [_Enum_index]: 0
      }, ui.PointerDeviceKind.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "trackpad",
        [_Enum_index]: 4
      }, ui.PointerDeviceKind.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "mouse",
        [_Enum_index]: 1
      }, ui.PointerDeviceKind.prototype));
    },
    get C8() {
      return C[8] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "stylus",
        [_Enum_index]: 2
      }, ui.PointerDeviceKind.prototype));
    },
    get C9() {
      return C[9] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "invertedStylus",
        [_Enum_index]: 3
      }, ui.PointerDeviceKind.prototype));
    },
    get C10() {
      return C[10] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "unknown",
        [_Enum_index]: 5
      }, ui.PointerDeviceKind.prototype));
    },
    get C11() {
      return C[11] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "ltr",
        [_Enum_index]: 1
      }, ui.TextDirection.prototype));
    },
    get C12() {
      return C[12] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "rtl",
        [_Enum_index]: 0
      }, ui.TextDirection.prototype));
    }
  });
  var C = Array(13).fill(void 0);
  var I = [
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/services/platform_views.dart",
    "package:flutter/src/services/platform_views.dart",
    "dart:core",
    "package:flutter/src/services/message_codec.dart",
    "dart:ui"
  ];
  var _nextPlatformViewId = dart.privateName(platform_views, "_nextPlatformViewId");
  platform_views.PlatformViewsRegistry = class PlatformViewsRegistry extends core.Object {
    static ['_#_instance#tearOff']() {
      return new platform_views.PlatformViewsRegistry._instance();
    }
    getNextPlatformViewId() {
      let t$360;
      if (!(this[_nextPlatformViewId] <= 2147483647)) dart.assertFailed(null, I[0], 59, 12, "_nextPlatformViewId <= MAX_INT32");
      t$360 = this[_nextPlatformViewId];
      this[_nextPlatformViewId] = t$360 + 1;
      return t$360;
    }
  };
  (platform_views.PlatformViewsRegistry._instance = function() {
    this[_nextPlatformViewId] = 0;
    ;
  }).prototype = platform_views.PlatformViewsRegistry.prototype;
  dart.addRtiResources(platform_views.PlatformViewsRegistry, ["flutter__src__services__platform_views|PlatformViewsRegistry"]);
  dart.setMethodSignature(platform_views.PlatformViewsRegistry, () => dart.global.Object.setPrototypeOf({
    getNextPlatformViewId: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsRegistry))));
  dart.setLibraryUri(platform_views.PlatformViewsRegistry, I[1]);
  dart.setFieldSignature(platform_views.PlatformViewsRegistry, () => dart.global.Object.setPrototypeOf({[_nextPlatformViewId]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsRegistry))));
  var _focusCallbacks = dart.privateName(platform_views, "_focusCallbacks");
  var _onMethodCall = dart.privateName(platform_views, "_onMethodCall");
  var _as = dart.privateName(dart_rti, "_as");
  platform_views.PlatformViewsService = class PlatformViewsService extends core.Object {
    static ['_#_#tearOff']() {
      return new platform_views.PlatformViewsService.__();
    }
    [_onMethodCall](call) {
      switch (call.method) {
        case "viewFocused":
          {
            let id = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)[_as](call.arguments);
            if (this[_focusCallbacks][$containsKey](id)) {
              dart.nullCheck(this[_focusCallbacks][$_get](id))();
            }
            break;
          }
        default:
          {
            dart.throw(new core.UnimplementedError.new(call.method + " was invoked but isn't implemented by PlatformViewsService"));
          }
      }
      return async.Future.value(dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>", true));
    }
    static initAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 140, 12, "creationParams == null || creationParamsCodec != null");
      let controller = new platform_views.TextureAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)) : t$360));
      return controller;
    }
    static initSurfaceAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 168, 12, "creationParams == null || creationParamsCodec != null");
      let controller = new platform_views.SurfaceAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)) : t$360));
      return controller;
    }
    static initExpensiveAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      let controller = new platform_views.ExpensiveAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)) : t$360));
      return controller;
    }
    static initUiKitView(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|UiKitViewController", true)), t$returnValue, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      var t$36asyncinitUiKitView = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 232, 12, "creationParams == null || creationParamsCodec != null");
              asyncScope.args = new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", id, "viewType", viewType]);
              if (creationParams != null) {
                asyncScope$.paramsByteData = dart.nullCheck(dart.nullCheck(creationParamsCodec).encodeMessage(creationParams));
                asyncScope.args[$_set]("params", typed_data.Uint8List.view(asyncScope$.paramsByteData[$buffer], 0, asyncScope$.paramsByteData[$lengthInBytes]));
              }
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "create", asyncScope.args), t$36asyncinitUiKitView, t$completer);
            case 2:
              // returning from await.
              if (onFocus != null) platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, onFocus);
              t$returnValue = new platform_views.UiKitViewController.__(id, layoutDirection);
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncinitUiKitView, t$completer);
    }
    static initAppKitView(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AppKitViewController", true)), t$returnValue, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      var t$36asyncinitAppKitView = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 278, 12, "creationParams == null || creationParamsCodec != null");
              asyncScope.args = new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", id, "viewType", viewType]);
              if (creationParams != null) {
                asyncScope$.paramsByteData = dart.nullCheck(dart.nullCheck(creationParamsCodec).encodeMessage(creationParams));
                asyncScope.args[$_set]("params", typed_data.Uint8List.view(asyncScope$.paramsByteData[$buffer], 0, asyncScope$.paramsByteData[$lengthInBytes]));
              }
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "create", asyncScope.args), t$36asyncinitAppKitView, t$completer);
            case 2:
              // returning from await.
              if (onFocus != null) platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, onFocus);
              t$returnValue = new platform_views.AppKitViewController.__(id, layoutDirection);
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncinitAppKitView, t$completer);
    }
  };
  (platform_views.PlatformViewsService.__ = function() {
    this[_focusCallbacks] = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|int,~()>", true));
    system_channels.SystemChannels.platform_views.setMethodCallHandler(dart.bind(this, _onMethodCall));
  }).prototype = platform_views.PlatformViewsService.prototype;
  dart.addRtiResources(platform_views.PlatformViewsService, ["flutter__src__services__platform_views|PlatformViewsService"]);
  dart.setMethodSignature(platform_views.PlatformViewsService, () => dart.global.Object.setPrototypeOf({
    [_onMethodCall]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(flutter__src__services__message_codec|MethodCall)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsService))));
  dart.setStaticMethodSignature(platform_views.PlatformViewsService, () => ['initAndroidView', 'initSurfaceAndroidView', 'initExpensiveAndroidView', 'initUiKitView', 'initAppKitView']);
  dart.setLibraryUri(platform_views.PlatformViewsService, I[1]);
  dart.setFieldSignature(platform_views.PlatformViewsService, () => dart.global.Object.setPrototypeOf({[_focusCallbacks]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|int,~()>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsService))));
  dart.setStaticFieldSignature(platform_views.PlatformViewsService, () => ['_instance']);
  dart.defineLazy(platform_views.PlatformViewsService, {
    /*platform_views.PlatformViewsService._instance*/get _instance() {
      return new platform_views.PlatformViewsService.__();
    }
  });
  var id$ = dart.privateName(platform_views, "AndroidPointerProperties.id");
  var toolType$ = dart.privateName(platform_views, "AndroidPointerProperties.toolType");
  var _asList = dart.privateName(platform_views, "_asList");
  platform_views.AndroidPointerProperties = class AndroidPointerProperties extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get toolType() {
      return this[toolType$];
    }
    set toolType(value) {
      super.toolType = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let toolType = opts && 'toolType' in opts ? opts.toolType : null;
      return new platform_views.AndroidPointerProperties.new({id: id, toolType: toolType});
    }
    [_asList]() {
      return _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<core|int>", true), [this.id, this.toolType]);
    }
    toString() {
      return object.objectRuntimeType(this, "AndroidPointerProperties") + "(id: " + dart.strSafe(this.id) + ", toolType: " + dart.strSafe(this.toolType) + ")";
    }
  };
  (platform_views.AndroidPointerProperties.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let toolType = opts && 'toolType' in opts ? opts.toolType : null;
    this[id$] = id;
    this[toolType$] = toolType;
    ;
  }).prototype = platform_views.AndroidPointerProperties.prototype;
  dart.addRtiResources(platform_views.AndroidPointerProperties, ["flutter__src__services__platform_views|AndroidPointerProperties"]);
  dart.setMethodSignature(platform_views.AndroidPointerProperties, () => dart.global.Object.setPrototypeOf({
    [_asList]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|int>()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerProperties))));
  dart.setLibraryUri(platform_views.AndroidPointerProperties, I[1]);
  dart.setFieldSignature(platform_views.AndroidPointerProperties, () => dart.global.Object.setPrototypeOf({
    id: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    toolType: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerProperties))));
  dart.setStaticFieldSignature(platform_views.AndroidPointerProperties, () => ['kToolTypeUnknown', 'kToolTypeFinger', 'kToolTypeStylus', 'kToolTypeMouse', 'kToolTypeEraser']);
  dart.defineExtensionMethods(platform_views.AndroidPointerProperties, ['toString']);
  dart.defineLazy(platform_views.AndroidPointerProperties, {
    /*platform_views.AndroidPointerProperties.kToolTypeUnknown*/get kToolTypeUnknown() {
      return 0;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeFinger*/get kToolTypeFinger() {
      return 1;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeStylus*/get kToolTypeStylus() {
      return 2;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeMouse*/get kToolTypeMouse() {
      return 3;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeEraser*/get kToolTypeEraser() {
      return 4;
    }
  });
  var orientation$ = dart.privateName(platform_views, "AndroidPointerCoords.orientation");
  var pressure$ = dart.privateName(platform_views, "AndroidPointerCoords.pressure");
  var size$ = dart.privateName(platform_views, "AndroidPointerCoords.size");
  var toolMajor$ = dart.privateName(platform_views, "AndroidPointerCoords.toolMajor");
  var toolMinor$ = dart.privateName(platform_views, "AndroidPointerCoords.toolMinor");
  var touchMajor$ = dart.privateName(platform_views, "AndroidPointerCoords.touchMajor");
  var touchMinor$ = dart.privateName(platform_views, "AndroidPointerCoords.touchMinor");
  var x$ = dart.privateName(platform_views, "AndroidPointerCoords.x");
  var y$ = dart.privateName(platform_views, "AndroidPointerCoords.y");
  platform_views.AndroidPointerCoords = class AndroidPointerCoords extends core.Object {
    get orientation() {
      return this[orientation$];
    }
    set orientation(value) {
      super.orientation = value;
    }
    get pressure() {
      return this[pressure$];
    }
    set pressure(value) {
      super.pressure = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get toolMajor() {
      return this[toolMajor$];
    }
    set toolMajor(value) {
      super.toolMajor = value;
    }
    get toolMinor() {
      return this[toolMinor$];
    }
    set toolMinor(value) {
      super.toolMinor = value;
    }
    get touchMajor() {
      return this[touchMajor$];
    }
    set touchMajor(value) {
      super.touchMajor = value;
    }
    get touchMinor() {
      return this[touchMinor$];
    }
    set touchMinor(value) {
      super.touchMinor = value;
    }
    get x() {
      return this[x$];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$];
    }
    set y(value) {
      super.y = value;
    }
    static ['_#new#tearOff'](opts) {
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let toolMajor = opts && 'toolMajor' in opts ? opts.toolMajor : null;
      let toolMinor = opts && 'toolMinor' in opts ? opts.toolMinor : null;
      let touchMajor = opts && 'touchMajor' in opts ? opts.touchMajor : null;
      let touchMinor = opts && 'touchMinor' in opts ? opts.touchMinor : null;
      let x = opts && 'x' in opts ? opts.x : null;
      let y = opts && 'y' in opts ? opts.y : null;
      return new platform_views.AndroidPointerCoords.new({orientation: orientation, pressure: pressure, size: size, toolMajor: toolMajor, toolMinor: toolMinor, touchMajor: touchMajor, touchMinor: touchMinor, x: x, y: y});
    }
    [_asList]() {
      return _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<core|double>", true), [this.orientation, this.pressure, this.size, this.toolMajor, this.toolMinor, this.touchMajor, this.touchMinor, this.x, this.y]);
    }
    toString() {
      return object.objectRuntimeType(this, "AndroidPointerCoords") + "(orientation: " + dart.strSafe(this.orientation) + ", pressure: " + dart.strSafe(this.pressure) + ", size: " + dart.strSafe(this.size) + ", toolMajor: " + dart.strSafe(this.toolMajor) + ", toolMinor: " + dart.strSafe(this.toolMinor) + ", touchMajor: " + dart.strSafe(this.touchMajor) + ", touchMinor: " + dart.strSafe(this.touchMinor) + ", x: " + dart.strSafe(this.x) + ", y: " + dart.strSafe(this.y) + ")";
    }
  };
  (platform_views.AndroidPointerCoords.new = function(opts) {
    let orientation = opts && 'orientation' in opts ? opts.orientation : null;
    let pressure = opts && 'pressure' in opts ? opts.pressure : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let toolMajor = opts && 'toolMajor' in opts ? opts.toolMajor : null;
    let toolMinor = opts && 'toolMinor' in opts ? opts.toolMinor : null;
    let touchMajor = opts && 'touchMajor' in opts ? opts.touchMajor : null;
    let touchMinor = opts && 'touchMinor' in opts ? opts.touchMinor : null;
    let x = opts && 'x' in opts ? opts.x : null;
    let y = opts && 'y' in opts ? opts.y : null;
    this[orientation$] = orientation;
    this[pressure$] = pressure;
    this[size$] = size;
    this[toolMajor$] = toolMajor;
    this[toolMinor$] = toolMinor;
    this[touchMajor$] = touchMajor;
    this[touchMinor$] = touchMinor;
    this[x$] = x;
    this[y$] = y;
    ;
  }).prototype = platform_views.AndroidPointerCoords.prototype;
  dart.addRtiResources(platform_views.AndroidPointerCoords, ["flutter__src__services__platform_views|AndroidPointerCoords"]);
  dart.setMethodSignature(platform_views.AndroidPointerCoords, () => dart.global.Object.setPrototypeOf({
    [_asList]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|double>()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerCoords))));
  dart.setLibraryUri(platform_views.AndroidPointerCoords, I[1]);
  dart.setFieldSignature(platform_views.AndroidPointerCoords, () => dart.global.Object.setPrototypeOf({
    orientation: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    pressure: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    size: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    toolMajor: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    toolMinor: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    touchMajor: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    touchMinor: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    x: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    y: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerCoords))));
  dart.defineExtensionMethods(platform_views.AndroidPointerCoords, ['toString']);
  var downTime$ = dart.privateName(platform_views, "AndroidMotionEvent.downTime");
  var eventTime$ = dart.privateName(platform_views, "AndroidMotionEvent.eventTime");
  var action$ = dart.privateName(platform_views, "AndroidMotionEvent.action");
  var pointerCount$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerCount");
  var pointerProperties$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerProperties");
  var pointerCoords$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerCoords");
  var metaState$ = dart.privateName(platform_views, "AndroidMotionEvent.metaState");
  var buttonState$ = dart.privateName(platform_views, "AndroidMotionEvent.buttonState");
  var xPrecision$ = dart.privateName(platform_views, "AndroidMotionEvent.xPrecision");
  var yPrecision$ = dart.privateName(platform_views, "AndroidMotionEvent.yPrecision");
  var deviceId$ = dart.privateName(platform_views, "AndroidMotionEvent.deviceId");
  var edgeFlags$ = dart.privateName(platform_views, "AndroidMotionEvent.edgeFlags");
  var source$ = dart.privateName(platform_views, "AndroidMotionEvent.source");
  var flags$ = dart.privateName(platform_views, "AndroidMotionEvent.flags");
  var motionEventId$ = dart.privateName(platform_views, "AndroidMotionEvent.motionEventId");
  platform_views.AndroidMotionEvent = class AndroidMotionEvent extends core.Object {
    get downTime() {
      return this[downTime$];
    }
    set downTime(value) {
      super.downTime = value;
    }
    get eventTime() {
      return this[eventTime$];
    }
    set eventTime(value) {
      super.eventTime = value;
    }
    get action() {
      return this[action$];
    }
    set action(value) {
      super.action = value;
    }
    get pointerCount() {
      return this[pointerCount$];
    }
    set pointerCount(value) {
      super.pointerCount = value;
    }
    get pointerProperties() {
      return this[pointerProperties$];
    }
    set pointerProperties(value) {
      super.pointerProperties = value;
    }
    get pointerCoords() {
      return this[pointerCoords$];
    }
    set pointerCoords(value) {
      super.pointerCoords = value;
    }
    get metaState() {
      return this[metaState$];
    }
    set metaState(value) {
      super.metaState = value;
    }
    get buttonState() {
      return this[buttonState$];
    }
    set buttonState(value) {
      super.buttonState = value;
    }
    get xPrecision() {
      return this[xPrecision$];
    }
    set xPrecision(value) {
      super.xPrecision = value;
    }
    get yPrecision() {
      return this[yPrecision$];
    }
    set yPrecision(value) {
      super.yPrecision = value;
    }
    get deviceId() {
      return this[deviceId$];
    }
    set deviceId(value) {
      super.deviceId = value;
    }
    get edgeFlags() {
      return this[edgeFlags$];
    }
    set edgeFlags(value) {
      super.edgeFlags = value;
    }
    get source() {
      return this[source$];
    }
    set source(value) {
      super.source = value;
    }
    get flags() {
      return this[flags$];
    }
    set flags(value) {
      super.flags = value;
    }
    get motionEventId() {
      return this[motionEventId$];
    }
    set motionEventId(value) {
      super.motionEventId = value;
    }
    static ['_#new#tearOff'](opts) {
      let downTime = opts && 'downTime' in opts ? opts.downTime : null;
      let eventTime = opts && 'eventTime' in opts ? opts.eventTime : null;
      let action = opts && 'action' in opts ? opts.action : null;
      let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : null;
      let pointerProperties = opts && 'pointerProperties' in opts ? opts.pointerProperties : null;
      let pointerCoords = opts && 'pointerCoords' in opts ? opts.pointerCoords : null;
      let metaState = opts && 'metaState' in opts ? opts.metaState : null;
      let buttonState = opts && 'buttonState' in opts ? opts.buttonState : null;
      let xPrecision = opts && 'xPrecision' in opts ? opts.xPrecision : null;
      let yPrecision = opts && 'yPrecision' in opts ? opts.yPrecision : null;
      let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
      let edgeFlags = opts && 'edgeFlags' in opts ? opts.edgeFlags : null;
      let source = opts && 'source' in opts ? opts.source : null;
      let flags = opts && 'flags' in opts ? opts.flags : null;
      let motionEventId = opts && 'motionEventId' in opts ? opts.motionEventId : null;
      return new platform_views.AndroidMotionEvent.new({downTime: downTime, eventTime: eventTime, action: action, pointerCount: pointerCount, pointerProperties: pointerProperties, pointerCoords: pointerCoords, metaState: metaState, buttonState: buttonState, xPrecision: xPrecision, yPrecision: yPrecision, deviceId: deviceId, edgeFlags: edgeFlags, source: source, flags: flags, motionEventId: motionEventId});
    }
    [_asList](viewId) {
      return [viewId, this.downTime, this.eventTime, this.action, this.pointerCount, this.pointerProperties[$map](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|int>", true), dart.fn(p => p[_asList](), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|int>(flutter__src__services__platform_views|AndroidPointerProperties)", true)))[$toList](), this.pointerCoords[$map](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|double>", true), dart.fn(p => p[_asList](), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<core|double>(flutter__src__services__platform_views|AndroidPointerCoords)", true)))[$toList](), this.metaState, this.buttonState, this.xPrecision, this.yPrecision, this.deviceId, this.edgeFlags, this.source, this.flags, this.motionEventId];
    }
    toString() {
      return "AndroidPointerEvent(downTime: " + dart.strSafe(this.downTime) + ", eventTime: " + dart.strSafe(this.eventTime) + ", action: " + dart.strSafe(this.action) + ", pointerCount: " + dart.strSafe(this.pointerCount) + ", pointerProperties: " + dart.str(this.pointerProperties) + ", pointerCoords: " + dart.str(this.pointerCoords) + ", metaState: " + dart.strSafe(this.metaState) + ", buttonState: " + dart.strSafe(this.buttonState) + ", xPrecision: " + dart.strSafe(this.xPrecision) + ", yPrecision: " + dart.strSafe(this.yPrecision) + ", deviceId: " + dart.strSafe(this.deviceId) + ", edgeFlags: " + dart.strSafe(this.edgeFlags) + ", source: " + dart.strSafe(this.source) + ", flags: " + dart.strSafe(this.flags) + ", motionEventId: " + dart.strSafe(this.motionEventId) + ")";
    }
  };
  (platform_views.AndroidMotionEvent.new = function(opts) {
    let downTime = opts && 'downTime' in opts ? opts.downTime : null;
    let eventTime = opts && 'eventTime' in opts ? opts.eventTime : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : null;
    let pointerProperties = opts && 'pointerProperties' in opts ? opts.pointerProperties : null;
    let pointerCoords = opts && 'pointerCoords' in opts ? opts.pointerCoords : null;
    let metaState = opts && 'metaState' in opts ? opts.metaState : null;
    let buttonState = opts && 'buttonState' in opts ? opts.buttonState : null;
    let xPrecision = opts && 'xPrecision' in opts ? opts.xPrecision : null;
    let yPrecision = opts && 'yPrecision' in opts ? opts.yPrecision : null;
    let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
    let edgeFlags = opts && 'edgeFlags' in opts ? opts.edgeFlags : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let flags = opts && 'flags' in opts ? opts.flags : null;
    let motionEventId = opts && 'motionEventId' in opts ? opts.motionEventId : null;
    this[downTime$] = downTime;
    this[eventTime$] = eventTime;
    this[action$] = action;
    this[pointerCount$] = pointerCount;
    this[pointerProperties$] = pointerProperties;
    this[pointerCoords$] = pointerCoords;
    this[metaState$] = metaState;
    this[buttonState$] = buttonState;
    this[xPrecision$] = xPrecision;
    this[yPrecision$] = yPrecision;
    this[deviceId$] = deviceId;
    this[edgeFlags$] = edgeFlags;
    this[source$] = source;
    this[flags$] = flags;
    this[motionEventId$] = motionEventId;
    if (!(pointerProperties[$length] === pointerCount)) dart.assertFailed(null, I[0], 443, 15, "pointerProperties.length == pointerCount");
    if (!(pointerCoords[$length] === pointerCount)) dart.assertFailed(null, I[0], 444, 15, "pointerCoords.length == pointerCount");
    ;
  }).prototype = platform_views.AndroidMotionEvent.prototype;
  dart.addRtiResources(platform_views.AndroidMotionEvent, ["flutter__src__services__platform_views|AndroidMotionEvent"]);
  dart.setMethodSignature(platform_views.AndroidMotionEvent, () => dart.global.Object.setPrototypeOf({
    [_asList]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>(core|int)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidMotionEvent))));
  dart.setLibraryUri(platform_views.AndroidMotionEvent, I[1]);
  dart.setFieldSignature(platform_views.AndroidMotionEvent, () => dart.global.Object.setPrototypeOf({
    downTime: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    eventTime: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    action: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    pointerCount: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    pointerProperties: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__services__platform_views|AndroidPointerProperties>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    pointerCoords: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__services__platform_views|AndroidPointerCoords>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    metaState: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    buttonState: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    xPrecision: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    yPrecision: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    deviceId: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    edgeFlags: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    source: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    flags: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    motionEventId: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidMotionEvent))));
  dart.defineExtensionMethods(platform_views.AndroidMotionEvent, ['toString']);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  platform_views._AndroidViewState = class _AndroidViewState extends core._Enum {
    [_enumToString]() {
      return "_AndroidViewState." + this[_name];
    }
  };
  (platform_views._AndroidViewState.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(platform_views._AndroidViewState).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = platform_views._AndroidViewState.prototype;
  dart.addRtiResources(platform_views._AndroidViewState, ["flutter__src__services__platform_views|_AndroidViewState"]);
  dart.setMethodSignature(platform_views._AndroidViewState, () => dart.global.Object.setPrototypeOf({
    [_enumToString]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._AndroidViewState))));
  dart.setLibraryUri(platform_views._AndroidViewState, I[1]);
  dart.setStaticFieldSignature(platform_views._AndroidViewState, () => ['values', 'waitingForSize', 'creating', 'created', 'disposed']);
  dart.defineLazy(platform_views._AndroidViewState, {
    /*platform_views._AndroidViewState.values*/get values() {
      return C[0] || CT.C0;
    },
    /*platform_views._AndroidViewState.waitingForSize*/get waitingForSize() {
      return C[1] || CT.C1;
    },
    /*platform_views._AndroidViewState.creating*/get creating() {
      return C[2] || CT.C2;
    },
    /*platform_views._AndroidViewState.created*/get created() {
      return C[3] || CT.C3;
    },
    /*platform_views._AndroidViewState.disposed*/get disposed() {
      return C[4] || CT.C4;
    }
  });
  var ___AndroidMotionEventConverter_pointTransformer = dart.privateName(platform_views, "_#_AndroidMotionEventConverter#pointTransformer");
  var _remove = dart.privateName(platform_views, "_remove");
  var _is = dart.privateName(dart_rti, "_is");
  platform_views._AndroidMotionEventConverter = class _AndroidMotionEventConverter extends core.Object {
    static ['_#new#tearOff']() {
      return new platform_views._AndroidMotionEventConverter.new();
    }
    get pointTransformer() {
      let t$362;
      t$362 = this[___AndroidMotionEventConverter_pointTransformer];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("pointTransformer")) : t$362;
    }
    set pointTransformer(pointTransformer$35param) {
      this[___AndroidMotionEventConverter_pointTransformer] = pointTransformer$35param;
    }
    handlePointerDownEvent(event) {
      if (this.pointerProperties[$isEmpty]) {
        this.downTimeMillis = event.timeStamp.inMilliseconds;
      }
      let androidPointerId = 0;
      while (this.usedAndroidPointerIds.contains(androidPointerId)) {
        androidPointerId = androidPointerId + 1;
      }
      this.usedAndroidPointerIds.add(androidPointerId);
      this.pointerProperties[$_set](event.pointer, this.propertiesFor(event, androidPointerId));
    }
    updatePointerPositions(event) {
      let t$362;
      let position = (t$362 = event.position, this.pointTransformer(t$362));
      this.pointerPositions[$_set](event.pointer, new platform_views.AndroidPointerCoords.new({orientation: event.orientation, pressure: event.pressure, size: event.size, toolMajor: event.radiusMajor, toolMinor: event.radiusMinor, touchMajor: event.radiusMajor, touchMinor: event.radiusMinor, x: position.dx, y: position.dy}));
    }
    [_remove](pointer) {
      this.pointerPositions[$remove](pointer);
      this.usedAndroidPointerIds.remove(dart.nullCheck(this.pointerProperties[$_get](pointer)).id);
      this.pointerProperties[$remove](pointer);
      if (this.pointerProperties[$isEmpty]) {
        this.downTimeMillis = null;
      }
    }
    handlePointerUpEvent(event) {
      this[_remove](event.pointer);
    }
    handlePointerCancelEvent(event) {
      this[_remove](event.pointer);
    }
    toAndroidMotionEvent(event) {
      let pointers = this.pointerPositions[$keys][$toList]();
      let pointerIdx = pointers[$indexOf](event.pointer);
      let numPointers = pointers[$length];
      if (event.platformData === 1 || this.isSinglePointerAction(event) && pointerIdx < numPointers - 1) {
        return null;
      }
      let action = (() => {
        let t$362 = null;
        let t$36$350$350 = event;
        L0: {
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerDownEvent", true)[_is](t$36$350$350) && numPointers === 1) {
              t$362 = 0;
              break L0;
            }
          }
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerUpEvent", true)[_is](t$36$350$350) && numPointers === 1) {
              t$362 = 1;
              break L0;
            }
          }
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerDownEvent", true)[_is](t$36$350$350)) {
              t$362 = platform_views.AndroidViewController.pointerAction(pointerIdx, 5);
              break L0;
            }
          }
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerUpEvent", true)[_is](t$36$350$350)) {
              t$362 = platform_views.AndroidViewController.pointerAction(pointerIdx, 6);
              break L0;
            }
          }
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerMoveEvent", true)[_is](t$36$350$350)) {
              t$362 = 2;
              break L0;
            }
          }
          {
            if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerCancelEvent", true)[_is](t$36$350$350)) {
              t$362 = 3;
              break L0;
            }
          }
          {
            {
              t$362 = null;
              break L0;
            }
          }
        }
        return t$362;
      })();
      if (action == null) {
        return null;
      }
      return new platform_views.AndroidMotionEvent.new({downTime: dart.nullCheck(this.downTimeMillis), eventTime: event.timeStamp.inMilliseconds, action: action, pointerCount: this.pointerPositions[$length], pointerProperties: pointers[$map](dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidPointerProperties", true), dart.fn(i => dart.nullCheck(this.pointerProperties[$_get](i)), dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidPointerProperties(core|int)", true)))[$toList](), pointerCoords: pointers[$map](dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidPointerCoords", true), dart.fn(i => dart.nullCheck(this.pointerPositions[$_get](i)), dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidPointerCoords(core|int)", true)))[$toList](), metaState: 0, buttonState: 0, xPrecision: 1.0, yPrecision: 1.0, deviceId: 0, edgeFlags: 0, source: platform_views._AndroidMotionEventConverter.sourceFor(event), flags: 0, motionEventId: event.embedderId});
    }
    static sourceFor(event) {
      return (() => {
        let t$364 = null;
        switch (event.kind) {
          case C[5] || CT.C5:
            {
              t$364 = 4098;
              break;
            }
          case C[6] || CT.C6:
            {
              t$364 = 1048584;
              break;
            }
          case C[7] || CT.C7:
            {
              t$364 = 8194;
              break;
            }
          case C[8] || CT.C8:
            {
              t$364 = 16386;
              break;
            }
          case C[9] || CT.C9:
            {
              t$364 = 16386;
              break;
            }
          case C[10] || CT.C10:
            {
              t$364 = 0;
              break;
            }
        }
        return t$364;
      })();
    }
    propertiesFor(event, pointerId) {
      return new platform_views.AndroidPointerProperties.new({id: pointerId, toolType: (() => {
          let t$365 = null;
          switch (event.kind) {
            case C[5] || CT.C5:
              {
                t$365 = 1;
                break;
              }
            case C[6] || CT.C6:
              {
                t$365 = 1;
                break;
              }
            case C[7] || CT.C7:
              {
                t$365 = 3;
                break;
              }
            case C[8] || CT.C8:
              {
                t$365 = 2;
                break;
              }
            case C[9] || CT.C9:
              {
                t$365 = 4;
                break;
              }
            case C[10] || CT.C10:
              {
                t$365 = 0;
                break;
              }
          }
          return t$365;
        })()});
    }
    isSinglePointerAction(event) {
      return !dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerDownEvent", true)[_is](event) && !dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerUpEvent", true)[_is](event);
    }
  };
  (platform_views._AndroidMotionEventConverter.new = function() {
    this.pointerPositions = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|int,flutter__src__services__platform_views|AndroidPointerCoords>", true));
    this.pointerProperties = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|int,flutter__src__services__platform_views|AndroidPointerProperties>", true));
    this.usedAndroidPointerIds = collection.LinkedHashSet.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|LinkedHashSet<core|int>", true));
    this[___AndroidMotionEventConverter_pointTransformer] = null;
    this.downTimeMillis = null;
    ;
  }).prototype = platform_views._AndroidMotionEventConverter.prototype;
  dart.addRtiResources(platform_views._AndroidMotionEventConverter, ["flutter__src__services__platform_views|_AndroidMotionEventConverter"]);
  dart.setMethodSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    handlePointerDownEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerDownEvent)", true),
    updatePointerPositions: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerEvent)", true),
    [_remove]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int)", true),
    handlePointerUpEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerUpEvent)", true),
    handlePointerCancelEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__gestures__events|PointerCancelEvent)", true),
    toAndroidMotionEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidMotionEvent?(flutter__src__gestures__events|PointerEvent)", true),
    propertiesFor: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|AndroidPointerProperties(flutter__src__gestures__events|PointerEvent,core|int)", true),
    isSinglePointerAction: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(flutter__src__gestures__events|PointerEvent)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setStaticMethodSignature(platform_views._AndroidMotionEventConverter, () => ['sourceFor']);
  dart.setGetterSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    pointTransformer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset(ui|Offset)", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setSetterSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    pointTransformer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset(ui|Offset)", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setLibraryUri(platform_views._AndroidMotionEventConverter, I[1]);
  dart.setFieldSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    pointerPositions: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|int,flutter__src__services__platform_views|AndroidPointerCoords>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    pointerProperties: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|int,flutter__src__services__platform_views|AndroidPointerProperties>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    usedAndroidPointerIds: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<core|int>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [___AndroidMotionEventConverter_pointTransformer]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset(ui|Offset)?", true),
      isConst: false,
      isFinal: false
    },
    downTimeMillis: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  var data$ = dart.privateName(platform_views, "_CreationParams.data");
  var codec$ = dart.privateName(platform_views, "_CreationParams.codec");
  platform_views._CreationParams = class _CreationParams extends core.Object {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    get codec() {
      return this[codec$];
    }
    set codec(value) {
      super.codec = value;
    }
    static ['_#new#tearOff'](data, codec) {
      return new platform_views._CreationParams.new(data, codec);
    }
  };
  (platform_views._CreationParams.new = function(data, codec) {
    this[data$] = data;
    this[codec$] = codec;
    ;
  }).prototype = platform_views._CreationParams.prototype;
  dart.addRtiResources(platform_views._CreationParams, ["flutter__src__services__platform_views|_CreationParams"]);
  dart.setLibraryUri(platform_views._CreationParams, I[1]);
  dart.setFieldSignature(platform_views._CreationParams, () => dart.global.Object.setPrototypeOf({
    data: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true),
      isConst: false,
      isFinal: true
    },
    codec: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__message_codec|MessageCodec<@>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._CreationParams))));
  var viewId$ = dart.privateName(platform_views, "AndroidViewController.viewId");
  var _motionEventConverter = dart.privateName(platform_views, "_motionEventConverter");
  var _state = dart.privateName(platform_views, "_state");
  var _platformViewCreatedCallbacks = dart.privateName(platform_views, "_platformViewCreatedCallbacks");
  var _viewType = dart.privateName(platform_views, "_viewType");
  var _layoutDirection = dart.privateName(platform_views, "_layoutDirection");
  var _creationParams = dart.privateName(platform_views, "_creationParams");
  var _createRequiresSize = dart.privateName(platform_views, "_createRequiresSize");
  var _sendCreateMessage = dart.privateName(platform_views, "_sendCreateMessage");
  var _sendResizeMessage = dart.privateName(platform_views, "_sendResizeMessage");
  var _sendDisposeMessage = dart.privateName(platform_views, "_sendDisposeMessage");
  platform_views.PlatformViewController = class PlatformViewController extends core.Object {
    get awaitingCreation() {
      return false;
    }
    create(opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asynccreate = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asynccreate, t$completer);
    }
  };
  (platform_views.PlatformViewController.new = function() {
    ;
  }).prototype = platform_views.PlatformViewController.prototype;
  dart.addRtiResources(platform_views.PlatformViewController, ["flutter__src__services__platform_views|PlatformViewController"]);
  dart.setMethodSignature(platform_views.PlatformViewController, () => dart.global.Object.setPrototypeOf({
    create: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>({position:ui|Offset?,size:ui|Size?})", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewController))));
  dart.setGetterSignature(platform_views.PlatformViewController, () => dart.global.Object.setPrototypeOf({
    awaitingCreation: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.PlatformViewController))));
  dart.setLibraryUri(platform_views.PlatformViewController, I[1]);
  platform_views.AndroidViewController = class AndroidViewController extends platform_views.PlatformViewController {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    static _getAndroidDirection(direction) {
      return (() => {
        let t$366 = null;
        switch (direction) {
          case C[11] || CT.C11:
            {
              t$366 = 0;
              break;
            }
          case C[12] || CT.C12:
            {
              t$366 = 1;
              break;
            }
        }
        return t$366;
      })();
    }
    static pointerAction(pointerId, action) {
      return pointerId << 8 & 65280 | action & 255;
    }
    get awaitingCreation() {
      return this[_state] === platform_views._AndroidViewState.waitingForSize;
    }
    create(opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue;
      var t$36asynccreate = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("trying to create a disposed Android view", I[0], 814, 12, "_state != _AndroidViewState.disposed");
              if (!(this[_state] === platform_views._AndroidViewState.waitingForSize)) dart.assertFailed("Android view is already sized. View id: " + dart.strSafe(this.viewId), I[0], 815, 12, "_state == _AndroidViewState.waitingForSize");
              if (this[_createRequiresSize] && size == null) {
                // goto return
                t$goto = 2;
                break;
              }
              this[_state] = platform_views._AndroidViewState.creating;
              t$goto = 3;
              return async._asyncAwait(this[_sendCreateMessage]({size: size, position: position}), t$36asynccreate, t$completer);
            case 3:
              // returning from await.
              this[_state] = platform_views._AndroidViewState.created;
              for (let callback of this[_platformViewCreatedCallbacks])
                callback(this.viewId);
            case 2:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asynccreate, t$completer);
    }
    setSize(size) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Size", true)), t$returnValue;
      var t$36asyncsetSize = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("Android view is disposed. View id: " + dart.strSafe(this.viewId), I[0], 846, 12, "_state != _AndroidViewState.disposed");
              t$goto = this[_state] === platform_views._AndroidViewState.waitingForSize ? 2 : 4;
              break;
            case 2:
              // then
              t$goto = 5;
              return async._asyncAwait(this.create({size: size}), t$36asyncsetSize, t$completer);
            case 5:
              // returning from await.
              t$returnValue = size;
              // goto return
              t$goto = 6;
              break;
              // goto join
              t$goto = 3;
              break;
            case 4:
              // else
              t$returnValue = this[_sendResizeMessage](size);
              // goto return
              t$goto = 6;
              break;
            case 3:
              // join
            case 6:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsetSize, t$completer);
    }
    get requiresViewComposition() {
      return false;
    }
    sendMotionEvent(event) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncsendMotionEvent = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), "touch", event[_asList](this.viewId)), t$36asyncsendMotionEvent, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsendMotionEvent, t$completer);
    }
    get pointTransformer() {
      return this[_motionEventConverter].pointTransformer;
    }
    set pointTransformer(transformer) {
      this[_motionEventConverter].pointTransformer = transformer;
    }
    get isCreated() {
      return this[_state] === platform_views._AndroidViewState.created;
    }
    addOnPlatformViewCreatedListener(listener) {
      if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed(null, I[0], 910, 12, "_state != _AndroidViewState.disposed");
      this[_platformViewCreatedCallbacks][$add](listener);
    }
    removeOnPlatformViewCreatedListener(listener) {
      if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed(null, I[0], 916, 12, "_state != _AndroidViewState.disposed");
      this[_platformViewCreatedCallbacks][$remove](listener);
    }
    get createdCallbacks() {
      return this[_platformViewCreatedCallbacks];
    }
    setLayoutDirection(layoutDirection) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue;
      var t$36asyncsetLayoutDirection = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("trying to set a layout direction for a disposed Android view. View id: " + dart.strSafe(this.viewId), I[0], 928, 7, "_state != _AndroidViewState.disposed");
              if (layoutDirection === this[_layoutDirection]) {
                // goto return
                t$goto = 2;
                break;
              }
              this[_layoutDirection] = layoutDirection;
              if (this[_state] === platform_views._AndroidViewState.waitingForSize) {
                // goto return
                t$goto = 2;
                break;
              }
              t$goto = 3;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "setDirection", new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", this.viewId, "direction", platform_views.AndroidViewController._getAndroidDirection(layoutDirection)])), t$36asyncsetLayoutDirection, t$completer);
            case 3:
              // returning from await.
            case 2:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsetLayoutDirection, t$completer);
    }
    dispatchPointerEvent(event) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue, asyncScope = Object.create(null);
      var t$36asyncdispatchPointerEvent = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerHoverEvent", true)[_is](event)) {
                // goto return
                t$goto = 2;
                break;
              }
              if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerDownEvent", true)[_is](event)) this[_motionEventConverter].handlePointerDownEvent(event);
              this[_motionEventConverter].updatePointerPositions(event);
              asyncScope.androidEvent = this[_motionEventConverter].toAndroidMotionEvent(event);
              if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerUpEvent", true)[_is](event))
                this[_motionEventConverter].handlePointerUpEvent(event);
              else if (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__gestures__events|PointerCancelEvent", true)[_is](event)) this[_motionEventConverter].handlePointerCancelEvent(event);
              t$goto = asyncScope.androidEvent != null ? 3 : 4;
              break;
            case 3:
              // then
              t$goto = 5;
              return async._asyncAwait(this.sendMotionEvent(asyncScope.androidEvent), t$36asyncdispatchPointerEvent, t$completer);
            case 5:
              // returning from await.
            case 4:
              // join
            case 2:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncdispatchPointerEvent, t$completer);
    }
    clearFocus() {
      if (this[_state] !== platform_views._AndroidViewState.created) {
        return async.Future.value(dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>", true));
      }
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "clearFocus", this.viewId);
    }
    dispose() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), asyncScope = Object.create(null);
      var t$36asyncdispose = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.state = this[_state];
              this[_state] = platform_views._AndroidViewState.disposed;
              this[_platformViewCreatedCallbacks][$clear]();
              platform_views.PlatformViewsService._instance[_focusCallbacks][$remove](this.viewId);
              t$goto = asyncScope.state === platform_views._AndroidViewState.creating || asyncScope.state === platform_views._AndroidViewState.created ? 2 : 3;
              break;
            case 2:
              // then
              t$goto = 4;
              return async._asyncAwait(this[_sendDisposeMessage](), t$36asyncdispose, t$completer);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncdispose, t$completer);
    }
  };
  (platform_views.AndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_motionEventConverter] = new platform_views._AndroidMotionEventConverter.new();
    this[_state] = platform_views._AndroidViewState.waitingForSize;
    this[_platformViewCreatedCallbacks] = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<~(core|int)>", true), []);
    this[viewId$] = viewId;
    if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 707, 16, "creationParams == null || creationParamsCodec != null");
    this[_viewType] = viewType;
    this[_layoutDirection] = layoutDirection;
    this[_creationParams] = creationParams == null ? null : new platform_views._CreationParams.new(creationParams, dart.nullCheck(creationParamsCodec));
    ;
  }).prototype = platform_views.AndroidViewController.prototype;
  dart.addRtiResources(platform_views.AndroidViewController, ["flutter__src__services__platform_views|AndroidViewController"]);
  dart.setMethodSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    setSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size)", true),
    sendMotionEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(flutter__src__services__platform_views|AndroidMotionEvent)", true),
    addOnPlatformViewCreatedListener: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(~(core|int))", true),
    removeOnPlatformViewCreatedListener: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(~(core|int))", true),
    setLayoutDirection: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|TextDirection)", true),
    dispatchPointerEvent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(flutter__src__gestures__events|PointerEvent)", true),
    clearFocus: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    dispose: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setStaticMethodSignature(platform_views.AndroidViewController, () => ['_getAndroidDirection', 'pointerAction']);
  dart.setGetterSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    requiresViewComposition: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    pointTransformer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset(ui|Offset)", true),
    isCreated: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    createdCallbacks: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<~(core|int)>", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setSetterSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    pointTransformer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset(ui|Offset)", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setLibraryUri(platform_views.AndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    viewId: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_viewType]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_motionEventConverter]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_AndroidMotionEventConverter", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_layoutDirection]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|TextDirection", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[4]
    },
    [_state]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_AndroidViewState", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_creationParams]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_CreationParams?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_platformViewCreatedCallbacks]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<~(core|int)>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setStaticFieldSignature(platform_views.AndroidViewController, () => ['kActionDown', 'kActionUp', 'kActionMove', 'kActionCancel', 'kActionPointerDown', 'kActionPointerUp', 'kAndroidLayoutDirectionLtr', 'kAndroidLayoutDirectionRtl', 'kInputDeviceSourceUnknown', 'kInputDeviceSourceTouchScreen', 'kInputDeviceSourceMouse', 'kInputDeviceSourceStylus', 'kInputDeviceSourceTouchPad']);
  dart.defineLazy(platform_views.AndroidViewController, {
    /*platform_views.AndroidViewController.kActionDown*/get kActionDown() {
      return 0;
    },
    /*platform_views.AndroidViewController.kActionUp*/get kActionUp() {
      return 1;
    },
    /*platform_views.AndroidViewController.kActionMove*/get kActionMove() {
      return 2;
    },
    /*platform_views.AndroidViewController.kActionCancel*/get kActionCancel() {
      return 3;
    },
    /*platform_views.AndroidViewController.kActionPointerDown*/get kActionPointerDown() {
      return 5;
    },
    /*platform_views.AndroidViewController.kActionPointerUp*/get kActionPointerUp() {
      return 6;
    },
    /*platform_views.AndroidViewController.kAndroidLayoutDirectionLtr*/get kAndroidLayoutDirectionLtr() {
      return 0;
    },
    /*platform_views.AndroidViewController.kAndroidLayoutDirectionRtl*/get kAndroidLayoutDirectionRtl() {
      return 1;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceUnknown*/get kInputDeviceSourceUnknown() {
      return 0;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceTouchScreen*/get kInputDeviceSourceTouchScreen() {
      return 4098;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceMouse*/get kInputDeviceSourceMouse() {
      return 8194;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceStylus*/get kInputDeviceSourceStylus() {
      return 16386;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceTouchPad*/get kInputDeviceSourceTouchPad() {
      return 1048584;
    }
  });
  var _internals = dart.privateName(platform_views, "_internals");
  platform_views.SurfaceAndroidViewController = class SurfaceAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.SurfaceAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return true;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)), t$returnValue, asyncScope = Object.create(null);
      var t$36async_sendCreateMessage = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!!size.isEmpty) dart.assertFailed("trying to create " + dart.strSafe(dart_rti.createRuntimeType(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|TextureAndroidViewController", true))) + " without setting a valid size.", I[0], 1034, 12, "!size.isEmpty");
              t$goto = 2;
              return async._asyncAwait(platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: false, hybridFallback: true, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], size: size, position: position}), t$36async_sendCreateMessage, t$completer);
            case 2:
              // returning from await.
              asyncScope.response = t$result;
              if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)[_is](asyncScope.response))
                dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_TextureAndroidViewControllerInternals", true)[_as](this[_internals]).textureId = asyncScope.response;
              else
                this[_internals] = new platform_views._HybridAndroidViewControllerInternals.new();
              t$returnValue = true;
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36async_sendCreateMessage, t$completer);
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.SurfaceAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._TextureAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.SurfaceAndroidViewController.prototype;
  dart.addRtiResources(platform_views.SurfaceAndroidViewController, ["flutter__src__services__platform_views|SurfaceAndroidViewController"]);
  dart.setMethodSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<core|bool>({position:ui|Offset?,size!ui|Size})", true),
    [_sendDisposeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    [_sendResizeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size)", true),
    setOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|Offset)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  dart.setGetterSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    textureId: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  dart.setLibraryUri(platform_views.SurfaceAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_AndroidViewControllerInternals", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  platform_views.ExpensiveAndroidViewController = class ExpensiveAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.ExpensiveAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return false;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36async_sendCreateMessage = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$goto = 2;
              return async._asyncAwait(platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: true, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], position: position}), t$36async_sendCreateMessage, t$completer);
            case 2:
              // returning from await.
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36async_sendCreateMessage, t$completer);
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.ExpensiveAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._HybridAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.ExpensiveAndroidViewController.prototype;
  dart.addRtiResources(platform_views.ExpensiveAndroidViewController, ["flutter__src__services__platform_views|ExpensiveAndroidViewController"]);
  dart.setMethodSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>({position:ui|Offset?,size!ui|Size?})", true),
    [_sendDisposeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    [_sendResizeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size)", true),
    setOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|Offset)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  dart.setGetterSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    textureId: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  dart.setLibraryUri(platform_views.ExpensiveAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_AndroidViewControllerInternals", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  platform_views.TextureAndroidViewController = class TextureAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.TextureAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return true;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$temp, t$temp$, t$temp$0;
      var t$36async_sendCreateMessage = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!!size.isEmpty) dart.assertFailed("trying to create " + dart.strSafe(dart_rti.createRuntimeType(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|TextureAndroidViewController", true))) + " without setting a valid size.", I[0], 1158, 12, "!size.isEmpty");
              t$temp = this[_internals];
              t$temp$ = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true);
              t$temp$0 = t$temp$[_as].bind(t$temp$);
              t$goto = 2;
              return async._asyncAwait(platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: false, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], size: size, position: position}), t$36async_sendCreateMessage, t$completer);
            case 2:
              // returning from await.
              t$temp.textureId = t$temp$0(t$result);
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36async_sendCreateMessage, t$completer);
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.TextureAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._TextureAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.TextureAndroidViewController.prototype;
  dart.addRtiResources(platform_views.TextureAndroidViewController, ["flutter__src__services__platform_views|TextureAndroidViewController"]);
  dart.setMethodSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>({position:ui|Offset?,size!ui|Size})", true),
    [_sendDisposeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    [_sendResizeMessage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size)", true),
    setOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|Offset)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  dart.setGetterSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    textureId: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  dart.setLibraryUri(platform_views.TextureAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_views|_TextureAndroidViewControllerInternals", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  platform_views._AndroidViewControllerInternals = class _AndroidViewControllerInternals extends core.Object {
    static sendCreateMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let hybrid = opts && 'hybrid' in opts ? opts.hybrid : null;
      let hybridFallback = opts && 'hybridFallback' in opts ? opts.hybridFallback : false;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let args = (() => {
        let t$367 = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true));
        t$367[$_set]("id", viewId);
        t$367[$_set]("viewType", viewType);
        t$367[$_set]("direction", platform_views.AndroidViewController._getAndroidDirection(layoutDirection));
        if (hybrid) t$367[$_set]("hybrid", hybrid);
        if (size != null) t$367[$_set]("width", size.width);
        if (size != null) t$367[$_set]("height", size.height);
        if (hybridFallback) t$367[$_set]("hybridFallback", hybridFallback);
        if (position != null) t$367[$_set]("left", position.dx);
        if (position != null) t$367[$_set]("top", position.dy);
        return t$367;
      })();
      if (creationParams != null) {
        let paramsByteData = dart.nullCheck(creationParams.codec.encodeMessage(creationParams.data));
        args[$_set]("params", typed_data.Uint8List.view(paramsByteData[$buffer], 0, paramsByteData[$lengthInBytes]));
      }
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), "create", args);
    }
  };
  (platform_views._AndroidViewControllerInternals.new = function() {
    ;
  }).prototype = platform_views._AndroidViewControllerInternals.prototype;
  dart.addRtiResources(platform_views._AndroidViewControllerInternals, ["flutter__src__services__platform_views|_AndroidViewControllerInternals"]);
  dart.setStaticMethodSignature(platform_views._AndroidViewControllerInternals, () => ['sendCreateMessage']);
  dart.setLibraryUri(platform_views._AndroidViewControllerInternals, I[1]);
  var textureId = dart.privateName(platform_views, "_TextureAndroidViewControllerInternals.textureId");
  var _offset = dart.privateName(platform_views, "_offset");
  platform_views._TextureAndroidViewControllerInternals = class _TextureAndroidViewControllerInternals extends platform_views._AndroidViewControllerInternals {
    get textureId() {
      return this[textureId];
    }
    set textureId(value) {
      this[textureId] = value;
    }
    static ['_#new#tearOff']() {
      return new platform_views._TextureAndroidViewControllerInternals.new();
    }
    get requiresViewComposition() {
      return false;
    }
    setSize(size, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Size", true)), t$returnValue, asyncScope = Object.create(null);
      var t$36asyncsetSize = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!(viewState !== platform_views._AndroidViewState.waitingForSize)) dart.assertFailed("Android view must have an initial size. View id: " + dart.strSafe(viewId), I[0], 1280, 12, "viewState != _AndroidViewState.waitingForSize");
              if (!!size.isEmpty) dart.assertFailed(null, I[0], 1281, 12, "!size.isEmpty");
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMapMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true), "resize", new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", viewId, "width", size.width, "height", size.height])), t$36asyncsetSize, t$completer);
            case 2:
              // returning from await.
              asyncScope.meta = t$result;
              if (!(asyncScope.meta != null)) dart.assertFailed(null, I[0], 1291, 12, "meta != null");
              if (!dart.nullCheck(asyncScope.meta)[$containsKey]("width")) dart.assertFailed(null, I[0], 1292, 12, "meta!.containsKey('width')");
              if (!dart.nullCheck(asyncScope.meta)[$containsKey]("height")) dart.assertFailed(null, I[0], 1293, 12, "meta!.containsKey('height')");
              t$returnValue = new ui.Size.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true)[_as](dart.nullCheck(dart.nullCheck(asyncScope.meta)[$_get]("width"))), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true)[_as](dart.nullCheck(asyncScope.meta[$_get]("height"))));
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsetSize, t$completer);
    }
    setOffset(offset, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue;
      var t$36asyncsetOffset = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (dart.equals(offset, this[_offset])) {
                // goto return
                t$goto = 2;
                break;
              }
              if (viewState !== platform_views._AndroidViewState.created) {
                // goto return
                t$goto = 2;
                break;
              }
              this[_offset] = offset;
              t$goto = 3;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "offset", new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", viewId, "top", offset.dy, "left", offset.dx])), t$36asyncsetOffset, t$completer);
            case 3:
              // returning from await.
            case 2:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsetOffset, t$completer);
    }
    sendDisposeMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "dispose", new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", viewId, "hybrid", false]));
    }
  };
  (platform_views._TextureAndroidViewControllerInternals.new = function() {
    this[_offset] = ui.Offset.zero;
    this[textureId] = null;
    ;
  }).prototype = platform_views._TextureAndroidViewControllerInternals.prototype;
  dart.addRtiResources(platform_views._TextureAndroidViewControllerInternals, ["flutter__src__services__platform_views|_TextureAndroidViewControllerInternals"]);
  dart.setMethodSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    setSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})", true),
    setOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|Offset{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})", true),
    sendDisposeMessage: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>({viewId!core|int})", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  dart.setGetterSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    requiresViewComposition: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  dart.setLibraryUri(platform_views._TextureAndroidViewControllerInternals, I[1]);
  dart.setFieldSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    [_offset]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[4]
    },
    textureId: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  platform_views._HybridAndroidViewControllerInternals = class _HybridAndroidViewControllerInternals extends platform_views._AndroidViewControllerInternals {
    get textureId() {
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    get requiresViewComposition() {
      return true;
    }
    setSize(size, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    setOffset(offset, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    sendDisposeMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "dispose", new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", viewId, "hybrid", true]));
    }
    static ['_#new#tearOff']() {
      return new platform_views._HybridAndroidViewControllerInternals.new();
    }
  };
  (platform_views._HybridAndroidViewControllerInternals.new = function() {
    ;
  }).prototype = platform_views._HybridAndroidViewControllerInternals.prototype;
  dart.addRtiResources(platform_views._HybridAndroidViewControllerInternals, ["flutter__src__services__platform_views|_HybridAndroidViewControllerInternals"]);
  dart.setMethodSignature(platform_views._HybridAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    setSize: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<ui|Size>(ui|Size{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})", true),
    setOffset: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|Offset{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})", true),
    sendDisposeMessage: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>({viewId!core|int})", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._HybridAndroidViewControllerInternals))));
  dart.setGetterSignature(platform_views._HybridAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    textureId: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    requiresViewComposition: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._HybridAndroidViewControllerInternals))));
  dart.setLibraryUri(platform_views._HybridAndroidViewControllerInternals, I[1]);
  var id$0 = dart.privateName(platform_views, "DarwinPlatformViewController.id");
  var _debugDisposed = dart.privateName(platform_views, "_debugDisposed");
  platform_views.DarwinPlatformViewController = class DarwinPlatformViewController extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    setLayoutDirection(layoutDirection) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true)), t$returnValue;
      var t$36asyncsetLayoutDirection = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (!!this[_debugDisposed]) dart.assertFailed("trying to set a layout direction for a disposed iOS UIView. View id: " + dart.strSafe(this.id), I[0], 1399, 12, "!_debugDisposed");
              if (layoutDirection === this[_layoutDirection]) {
                // goto return
                t$goto = 2;
                break;
              }
              this[_layoutDirection] = layoutDirection;
            case 2:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncsetLayoutDirection, t$completer);
    }
    acceptGesture() {
      let args = new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", this.id]);
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "acceptGesture", args);
    }
    rejectGesture() {
      let args = new _js_helper.IdentityMap.from(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,@>", true), ["id", this.id]);
      return system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "rejectGesture", args);
    }
    dispose() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true));
      var t$36asyncdispose = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              this[_debugDisposed] = true;
              t$goto = 2;
              return async._asyncAwait(system_channels.SystemChannels.platform_views.invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "~", true), "dispose", this.id), t$36asyncdispose, t$completer);
            case 2:
              // returning from await.
              platform_views.PlatformViewsService._instance[_focusCallbacks][$remove](this.id);
              // implicit return
              return async._asyncReturn(null, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncdispose, t$completer);
    }
  };
  (platform_views.DarwinPlatformViewController.new = function(id, layoutDirection) {
    this[_debugDisposed] = false;
    this[id$0] = id;
    this[_layoutDirection] = layoutDirection;
    ;
  }).prototype = platform_views.DarwinPlatformViewController.prototype;
  dart.addRtiResources(platform_views.DarwinPlatformViewController, ["flutter__src__services__platform_views|DarwinPlatformViewController"]);
  dart.setMethodSignature(platform_views.DarwinPlatformViewController, () => dart.global.Object.setPrototypeOf({
    setLayoutDirection: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>(ui|TextDirection)", true),
    acceptGesture: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    rejectGesture: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true),
    dispose: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<~>()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.DarwinPlatformViewController))));
  dart.setLibraryUri(platform_views.DarwinPlatformViewController, I[1]);
  dart.setFieldSignature(platform_views.DarwinPlatformViewController, () => dart.global.Object.setPrototypeOf({
    id: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    [_debugDisposed]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[2]
    },
    [_layoutDirection]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|TextDirection", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[4]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.DarwinPlatformViewController))));
  platform_views.UiKitViewController = class UiKitViewController extends platform_views.DarwinPlatformViewController {
    static ['_#_#tearOff'](id, layoutDirection) {
      return new platform_views.UiKitViewController.__(id, layoutDirection);
    }
  };
  (platform_views.UiKitViewController.__ = function(id, layoutDirection) {
    dart.global.Object.getPrototypeOf(platform_views.UiKitViewController).new.call(this, id, layoutDirection);
    ;
  }).prototype = platform_views.UiKitViewController.prototype;
  dart.addRtiResources(platform_views.UiKitViewController, ["flutter__src__services__platform_views|UiKitViewController"]);
  dart.setLibraryUri(platform_views.UiKitViewController, I[1]);
  platform_views.AppKitViewController = class AppKitViewController extends platform_views.DarwinPlatformViewController {
    static ['_#_#tearOff'](id, layoutDirection) {
      return new platform_views.AppKitViewController.__(id, layoutDirection);
    }
  };
  (platform_views.AppKitViewController.__ = function(id, layoutDirection) {
    dart.global.Object.getPrototypeOf(platform_views.AppKitViewController).new.call(this, id, layoutDirection);
    ;
  }).prototype = platform_views.AppKitViewController.prototype;
  dart.addRtiResources(platform_views.AppKitViewController, ["flutter__src__services__platform_views|AppKitViewController"]);
  dart.setLibraryUri(platform_views.AppKitViewController, I[1]);
  dart.defineLazy(platform_views, {
    /*platform_views.platformViewsRegistry*/get platformViewsRegistry() {
      return new platform_views.PlatformViewsRegistry._instance();
    }
  });
  dart.moduleConstCaches.set("packages/flutter/src/services/platform_views.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"_js_helper|IdentityMap":{"IdentityMap.K":"1","IdentityMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"async|Future":{"Future.T":"1"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"flutter__src__services__platform_views|UiKitViewController":{"flutter__src__services__platform_views|DarwinPlatformViewController":[]},"flutter__src__services__platform_views|AppKitViewController":{"flutter__src__services__platform_views|DarwinPlatformViewController":[]},"flutter__src__services__platform_views|AndroidViewController":{"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__message_codec|MessageCodec":{"MessageCodec.T":"1"},"ui|TextDirection":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"flutter__src__services__platform_views|SurfaceAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__platform_views|ExpensiveAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__services__platform_views|_AndroidViewState":{"core|_Enum":[],"core|Enum":[]},"collection|LinkedHashSet":{"LinkedHashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"flutter__src__gestures__events|PointerDownEvent":{"flutter__src__gestures__events|_CopyPointerDownEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerDownEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_PointerEventDescription":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerUpEvent":{"flutter__src__gestures__events|_CopyPointerUpEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerUpEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerMoveEvent":{"flutter__src__gestures__events|_CopyPointerMoveEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerMoveEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerCancelEvent":{"flutter__src__gestures__events|_CopyPointerCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerCancelEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"ui|Offset":{"ui|OffsetBase":[]},"ui|Size":{"ui|OffsetBase":[]},"flutter__src__gestures__events|PointerHoverEvent":{"flutter__src__gestures__events|_CopyPointerHoverEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerHoverEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__platform_views|TextureAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__platform_views|_TextureAndroidViewControllerInternals":{"flutter__src__services__platform_views|_AndroidViewControllerInternals":[]},"flutter__src__services__platform_views|_HybridAndroidViewControllerInternals":{"flutter__src__services__platform_views|_AndroidViewControllerInternals":[]}}'));
  dart.trackLibraries("packages/flutter/src/services/platform_views.dart", {
    "package:flutter/src/services/platform_views.dart": platform_views
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["platform_views.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../packages/flutter/src/services/platform_views.dart.lib.js"}');
  // Exports:
  return {
    src__services__platform_views: platform_views
  };
}));

//# sourceMappingURL=platform_views.dart.lib.js.map
