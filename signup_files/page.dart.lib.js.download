// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/material/page.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/widgets/unique_widget.dart', 'packages/flutter/src/material/time.dart'], (function load__packages__flutter__src__material__page_dart(dart_sdk, packages__flutter__src__widgets__unique_widget$46dart, packages__flutter__src__material__time$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const pages = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__pages;
  const basic = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__widget_inspector;
  const navigator = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__navigator;
  const theme$ = packages__flutter__src__material__time$46dart.src__material__theme;
  var page$ = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        [Duration__duration]: 300000
      }, core.Duration.prototype));
    },
    get C1() {
      return C[1] = dart.fn(page$.MaterialRouteTransitionMixin._delegatedTransition, dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget?(flutter__src__widgets__framework|BuildContext,flutter__src__animation__animation|Animation<core|double>,flutter__src__animation__animation|Animation<core|double>,core|bool,flutter__src__widgets__framework|Widget?)", true));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Location_name]: "Semantics",
        [_Location_column]: 12,
        [_Location_line]: 134,
        [_Location_file]: "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/material/page.dart"
      }, widget_inspector._Location.prototype));
    },
    get C3() {
      return C[3] = dart.fn(navigator.Page._defaultPopInvokedHandler, dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|bool,core|Object?)", true));
    }
  });
  var C = Array(4).fill(void 0);
  var I = [
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/material/page.dart",
    "package:flutter/src/material/page.dart",
    "dart:core",
    "package:flutter/src/widgets/framework.dart"
  ];
  var builder$ = dart.privateName(page$, "MaterialPageRoute.builder");
  var maintainState$ = dart.privateName(page$, "MaterialPageRoute.maintainState");
  var _bind = dart.privateName(dart_rti, "_bind");
  var _eval = dart.privateName(dart_rti, "_eval");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _is = dart.privateName(dart_rti, "_is");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  page$.MaterialRouteTransitionMixin = class MaterialRouteTransitionMixin extends pages.PageRoute {
    static _delegatedTransition(context, animation, secondaryAnimation, allowSnapshotting, child) {
      let theme = theme$.Theme.of(context).pageTransitionsTheme;
      let platform = theme$.Theme.of(context).platform;
      let themeDelegatedTransition = theme.delegatedTransition(platform);
      return themeDelegatedTransition != null ? themeDelegatedTransition(context, animation, secondaryAnimation, allowSnapshotting, child) : null;
    }
  };
  page$.MaterialRouteTransitionMixin[dart.mixinOn] = PageRoute => class MaterialRouteTransitionMixin extends PageRoute {
    get transitionDuration() {
      return C[0] || CT.C0;
    }
    get barrierColor() {
      return null;
    }
    get barrierLabel() {
      return null;
    }
    get delegatedTransition() {
      return C[1] || CT.C1;
    }
    canTransitionTo(nextRoute) {
      let nextRouteIsNotFullscreen = !dart_rti.instanceType(this)[_eval]("flutter__src__widgets__pages|PageRoute<MaterialRouteTransitionMixin.T>")[_is](nextRoute) || !nextRoute.fullscreenDialog;
      let nextRouteHasDelegatedTransition = dart_rti.instanceType(this)[_eval]("flutter__src__widgets__routes|ModalRoute<MaterialRouteTransitionMixin.T>")[_is](nextRoute) && nextRoute.delegatedTransition != null;
      return nextRouteIsNotFullscreen && (dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__material__page|MaterialRouteTransitionMixin<@>", true)[_is](nextRoute) || nextRouteHasDelegatedTransition);
    }
    buildPage(context, animation, secondaryAnimation) {
      let result = this.buildContent(context);
      return new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: result, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2});
    }
    buildTransitions(context, animation, secondaryAnimation, child) {
      let theme = theme$.Theme.of(context).pageTransitionsTheme;
      return theme.buildTransitions(dart_rti.instanceType(this)[_eval]("MaterialRouteTransitionMixin.T"), this, context, animation, secondaryAnimation, child);
    }
  };
  dart.addRtiResources(page$.MaterialRouteTransitionMixin, ["flutter__src__material__page|MaterialRouteTransitionMixin"]);
  dart.setMethodSignature(page$.MaterialRouteTransitionMixin, () => dart.global.Object.setPrototypeOf({
    buildPage: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget(flutter__src__widgets__framework|BuildContext,flutter__src__animation__animation|Animation<core|double>,flutter__src__animation__animation|Animation<core|double>)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(page$.MaterialRouteTransitionMixin))));
  dart.setStaticMethodSignature(page$.MaterialRouteTransitionMixin, () => ['_delegatedTransition']);
  dart.setGetterSignature(page$.MaterialRouteTransitionMixin, () => dart.global.Object.setPrototypeOf({
    transitionDuration: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Duration", true),
    barrierColor: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Color?", true),
    barrierLabel: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String?", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(page$.MaterialRouteTransitionMixin))));
  dart.setLibraryUri(page$.MaterialRouteTransitionMixin, I[1]);
  const PageRoute_MaterialRouteTransitionMixin$36 = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute {};
  (PageRoute_MaterialRouteTransitionMixin$36.new = function(_ti, opts) {
    dart.global.Object.getPrototypeOf(PageRoute_MaterialRouteTransitionMixin$36).new.call(this, null, opts);
  }).prototype = PageRoute_MaterialRouteTransitionMixin$36.prototype;
  dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36, page$.MaterialRouteTransitionMixin);
  page$.MaterialPageRoute = class MaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36 {
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get maintainState() {
      return this[maintainState$];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    static ['_#new#tearOff'](T, opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let requestFocus = opts && 'requestFocus' in opts ? opts.requestFocus : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      return new page$.MaterialPageRoute.new(dart_rti.instanceType(this)[_bind](T)[_eval]("flutter__src__material__page|MaterialPageRoute<1>"), {builder: builder, settings: settings, requestFocus: requestFocus, maintainState: maintainState, fullscreenDialog: fullscreenDialog, allowSnapshotting: allowSnapshotting, barrierDismissible: barrierDismissible});
    }
    buildContent(context) {
      let t$360;
      t$360 = context;
      return this.builder(t$360);
    }
    get debugLabel() {
      return super.debugLabel + "(" + dart.str(this.settings.name) + ")";
    }
  };
  (page$.MaterialPageRoute.new = function(_ti, opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let settings = opts && 'settings' in opts ? opts.settings : null;
    let requestFocus = opts && 'requestFocus' in opts ? opts.requestFocus : null;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[builder$] = builder;
    this[maintainState$] = maintainState;
    dart.global.Object.getPrototypeOf(page$.MaterialPageRoute).new.call(this, null, {settings: settings, requestFocus: requestFocus, fullscreenDialog: fullscreenDialog, allowSnapshotting: allowSnapshotting, barrierDismissible: barrierDismissible});
    if (!this.opaque) dart.assertFailed(null, I[0], 46, 12, "opaque");
  }).prototype = page$.MaterialPageRoute.prototype;
  dart.addRtiResources(page$.MaterialPageRoute, ["flutter__src__material__page|MaterialPageRoute"]);
  dart.setMethodSignature(page$.MaterialPageRoute, () => dart.global.Object.setPrototypeOf({
    buildContent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget(flutter__src__widgets__framework|BuildContext)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(page$.MaterialPageRoute))));
  dart.setLibraryUri(page$.MaterialPageRoute, I[1]);
  dart.setFieldSignature(page$.MaterialPageRoute, () => dart.global.Object.setPrototypeOf({
    builder: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget(flutter__src__widgets__framework|BuildContext)", true),
      isConst: false,
      isFinal: true
    },
    maintainState: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(page$.MaterialPageRoute))));
  var child$ = dart.privateName(page$, "MaterialPage.child");
  var maintainState$0 = dart.privateName(page$, "MaterialPage.maintainState");
  var fullscreenDialog$ = dart.privateName(page$, "MaterialPage.fullscreenDialog");
  var allowSnapshotting$ = dart.privateName(page$, "MaterialPage.allowSnapshotting");
  page$.MaterialPage = class MaterialPage extends navigator.Page {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get maintainState() {
      return this[maintainState$0];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get fullscreenDialog() {
      return this[fullscreenDialog$];
    }
    set fullscreenDialog(value) {
      super.fullscreenDialog = value;
    }
    get allowSnapshotting() {
      return this[allowSnapshotting$];
    }
    set allowSnapshotting(value) {
      super.allowSnapshotting = value;
    }
    static ['_#new#tearOff'](T, opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
      let key = opts && 'key' in opts ? opts.key : null;
      let canPop = opts && 'canPop' in opts ? opts.canPop : true;
      let onPopInvoked = opts && 'onPopInvoked' in opts ? opts.onPopInvoked : C[3] || CT.C3;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      return new page$.MaterialPage.new(dart_rti.instanceType(this)[_bind](T)[_eval]("flutter__src__material__page|MaterialPage<1>"), {child: child, maintainState: maintainState, fullscreenDialog: fullscreenDialog, allowSnapshotting: allowSnapshotting, key: key, canPop: canPop, onPopInvoked: onPopInvoked, name: name, arguments: $arguments, restorationId: restorationId});
    }
    createRoute(context) {
      return new page$._PageBasedMaterialPageRoute.new(dart_rti.instanceType(this)[_eval]("flutter__src__material__page|_PageBasedMaterialPageRoute<MaterialPage.T>"), {page: this, allowSnapshotting: this.allowSnapshotting});
    }
  };
  (page$.MaterialPage.new = function(_ti, opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
    let key = opts && 'key' in opts ? opts.key : null;
    let canPop = opts && 'canPop' in opts ? opts.canPop : true;
    let onPopInvoked = opts && 'onPopInvoked' in opts ? opts.onPopInvoked : C[3] || CT.C3;
    let name = opts && 'name' in opts ? opts.name : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[child$] = child;
    this[maintainState$0] = maintainState;
    this[fullscreenDialog$] = fullscreenDialog;
    this[allowSnapshotting$] = allowSnapshotting;
    dart.global.Object.getPrototypeOf(page$.MaterialPage).new.call(this, null, {key: key, canPop: canPop, onPopInvoked: onPopInvoked, name: name, arguments: $arguments, restorationId: restorationId});
    ;
  }).prototype = page$.MaterialPage.prototype;
  dart.addRtiResources(page$.MaterialPage, ["flutter__src__material__page|MaterialPage"]);
  dart.setMethodSignature(page$.MaterialPage, () => dart.global.Object.setPrototypeOf({
    createRoute: _ti => _ti[_eval]("flutter__src__widgets__navigator|Route<MaterialPage.T>(flutter__src__widgets__framework|BuildContext)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(page$.MaterialPage))));
  dart.setLibraryUri(page$.MaterialPage, I[1]);
  dart.setFieldSignature(page$.MaterialPage, () => dart.global.Object.setPrototypeOf({
    child: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    maintainState: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    fullscreenDialog: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    allowSnapshotting: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(page$.MaterialPage))));
  var _as = dart.privateName(dart_rti, "_as");
  var _page = dart.privateName(page$, "_page");
  const PageRoute_MaterialRouteTransitionMixin$36$ = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute {};
  (PageRoute_MaterialRouteTransitionMixin$36$.new = function(_ti, opts) {
    dart.global.Object.getPrototypeOf(PageRoute_MaterialRouteTransitionMixin$36$).new.call(this, null, opts);
  }).prototype = PageRoute_MaterialRouteTransitionMixin$36$.prototype;
  dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36$, page$.MaterialRouteTransitionMixin);
  page$._PageBasedMaterialPageRoute = class _PageBasedMaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36$ {
    static ['_#new#tearOff'](T, opts) {
      let page = opts && 'page' in opts ? opts.page : null;
      let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
      return new page$._PageBasedMaterialPageRoute.new(dart_rti.instanceType(this)[_bind](T)[_eval]("flutter__src__material__page|_PageBasedMaterialPageRoute<1>"), {page: page, allowSnapshotting: allowSnapshotting});
    }
    get [_page]() {
      return dart_rti.instanceType(this)[_eval]("flutter__src__material__page|MaterialPage<_PageBasedMaterialPageRoute.T>")[_as](this.settings);
    }
    buildContent(context) {
      return this[_page].child;
    }
    get maintainState() {
      return this[_page].maintainState;
    }
    get fullscreenDialog() {
      return this[_page].fullscreenDialog;
    }
    get debugLabel() {
      return super.debugLabel + "(" + dart.str(this[_page].name) + ")";
    }
  };
  (page$._PageBasedMaterialPageRoute.new = function(_ti, opts) {
    let page = opts && 'page' in opts ? opts.page : null;
    let allowSnapshotting = opts && 'allowSnapshotting' in opts ? opts.allowSnapshotting : true;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(page$._PageBasedMaterialPageRoute).new.call(this, null, {settings: page, allowSnapshotting: allowSnapshotting});
    if (!this.opaque) dart.assertFailed(null, I[0], 210, 12, "opaque");
  }).prototype = page$._PageBasedMaterialPageRoute.prototype;
  dart.addRtiResources(page$._PageBasedMaterialPageRoute, ["flutter__src__material__page|_PageBasedMaterialPageRoute"]);
  dart.setMethodSignature(page$._PageBasedMaterialPageRoute, () => dart.global.Object.setPrototypeOf({
    buildContent: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__widgets__framework|Widget(flutter__src__widgets__framework|BuildContext)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(page$._PageBasedMaterialPageRoute))));
  dart.setGetterSignature(page$._PageBasedMaterialPageRoute, () => dart.global.Object.setPrototypeOf({
    [_page]: _ti => _ti[_eval]("flutter__src__material__page|MaterialPage<_PageBasedMaterialPageRoute.T>"),
    maintainState: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    fullscreenDialog: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(page$._PageBasedMaterialPageRoute))));
  dart.setLibraryUri(page$._PageBasedMaterialPageRoute, I[1]);
  dart.moduleConstCaches.set("packages/flutter/src/material/page.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__material__page|MaterialPageRoute":{"MaterialPageRoute.T":"1","PageRoute.T":"1","flutter__src__widgets__pages|PageRoute":["1"],"MaterialRouteTransitionMixin.T":"1","flutter__src__material__page|MaterialRouteTransitionMixin":["1"],"ModalRoute.T":"1","flutter__src__widgets__routes|ModalRoute":["1"],"TransitionRoute.T":"1","flutter__src__widgets__routes|TransitionRoute":["1"],"LocalHistoryRoute.T":"1","flutter__src__widgets__routes|LocalHistoryRoute":["1"],"OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__pages|PageRoute":{"PageRoute.T":"1","ModalRoute.T":"1","flutter__src__widgets__routes|ModalRoute":["1"],"TransitionRoute.T":"1","flutter__src__widgets__routes|TransitionRoute":["1"],"LocalHistoryRoute.T":"1","flutter__src__widgets__routes|LocalHistoryRoute":["1"],"OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__material__page|MaterialRouteTransitionMixin":{"MaterialRouteTransitionMixin.T":"1","PageRoute.T":"1","flutter__src__widgets__pages|PageRoute":["1"],"ModalRoute.T":"1","flutter__src__widgets__routes|ModalRoute":["1"],"TransitionRoute.T":"1","flutter__src__widgets__routes|TransitionRoute":["1"],"LocalHistoryRoute.T":"1","flutter__src__widgets__routes|LocalHistoryRoute":["1"],"OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__routes|ModalRoute":{"ModalRoute.T":"1","TransitionRoute.T":"1","flutter__src__widgets__routes|TransitionRoute":["1"],"LocalHistoryRoute.T":"1","flutter__src__widgets__routes|LocalHistoryRoute":["1"],"OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__routes|TransitionRoute":{"TransitionRoute.T":"1","OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__routes|LocalHistoryRoute":{"LocalHistoryRoute.T":"1","Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__routes|OverlayRoute":{"OverlayRoute.T":"1","Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__navigator|Route":{"Route.T":"1","flutter__src__widgets__navigator|_RoutePlaceholder":[]},"flutter__src__widgets__framework|Widget":{"flutter__src__foundation__diagnostics|DiagnosticableTree":[],"flutter__src__widgets__widget_inspector|_HasCreationLocation":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__foundation__diagnostics|DiagnosticableTree":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__animation__animation|Animation":{"Animation.T":"1","flutter__src__foundation__change_notifier|Listenable":[],"ValueListenable.T":"1","flutter__src__foundation__change_notifier|ValueListenable":["1"]},"flutter__src__foundation__change_notifier|ValueListenable":{"ValueListenable.T":"1","flutter__src__foundation__change_notifier|Listenable":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|Duration":{"Comparable.T":"core|Duration","core|Comparable":["core|Duration"]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"flutter__src__material__page|MaterialPage":{"MaterialPage.T":"1","Page.T":"1","flutter__src__widgets__navigator|Page":["1"],"flutter__src__widgets__navigator|RouteSettings":[]},"flutter__src__widgets__navigator|Page":{"Page.T":"1","flutter__src__widgets__navigator|RouteSettings":[]},"flutter__src__material__page|_PageBasedMaterialPageRoute":{"_PageBasedMaterialPageRoute.T":"1","PageRoute.T":"1","flutter__src__widgets__pages|PageRoute":["1"],"MaterialRouteTransitionMixin.T":"1","flutter__src__material__page|MaterialRouteTransitionMixin":["1"],"ModalRoute.T":"1","flutter__src__widgets__routes|ModalRoute":["1"],"TransitionRoute.T":"1","flutter__src__widgets__routes|TransitionRoute":["1"],"LocalHistoryRoute.T":"1","flutter__src__widgets__routes|LocalHistoryRoute":["1"],"OverlayRoute.T":"1","flutter__src__widgets__routes|OverlayRoute":["1"],"flutter__src__widgets__routes|PredictiveBackRoute":[],"Route.T":"1","flutter__src__widgets__navigator|Route":["1"],"flutter__src__widgets__navigator|_RoutePlaceholder":[]}}'));
  dart.trackLibraries("packages/flutter/src/material/page.dart", {
    "package:flutter/src/material/page.dart": page$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["page.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAoGmD,SAA2B,WAA6B,oBAAyB,mBAA2B;AAChI,kBAAc,AAAY,gBAAT,OAAO;AAC9B,qBAAiB,AAAY,gBAAT,OAAO;AACd,qCAA2B,AAAM,KAAD,qBAAqB,QAAQ;AAC/F,YAAO,AAAyB,yBAAD,WAAW,AAAwB,wBAAA,CAAC,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,KAAK,IAAI;IACzI;;;;AAhBmC;IAAiC;;AAGzC;IAAI;;AAGH;IAAI;;AAGuB;IAAoB;oBAU7B;AAIjC,qCAAwD,CAAlB,kHAAV,SAAS,MAAuB,AAAU,SAAD;AAKrE,4CAA4C,AACrD,oHAD2C,SAAS,KACjD,AAAU,SAAD;AAId,YAAO,AAAyB,yBAAD,KACjB,4HAAV,SAAS,KAAqC,+BAA+B;IACnF;cAIe,SACK,WACA;AAEL,mBAAS,kBAAa,OAAO;AAC1C,YAAO,uCACQ,0BACO,aACb,MAAM;IAEjB;qBAGqC,SAA2B,WAA6B,oBAA2B;AAC3F,kBAAc,AAAY,gBAAT,OAAO;AACnD,YAAO,AAAM,MAAD,wFAAqB,MAAM,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK;IACtF;;;;;;;;;;;;;;;;;;;IA/FoB;;;;;;IAMT;;;;;;;;;;;;;;;;iBAHsB;;AAAY,cAAQ,OAAO;YAAf,AAAO;IAAS;;AAMpC,YAAS,oBAAW,eAAG,AAAS,sBAAK;IAAE;;;QArBhD;QACR;QACA;QACD;QACC;QACA;QACA;;IANQ;IAGT;AAJP,+FAEQ,QAAQ,gBACR,YAAY,oBAEZ,gBAAgB,qBAChB,iBAAiB,sBACjB,kBAAkB;AAExB,SAAO;EACT;;;;;;;;;;;;;;;;;;;;;;;;IAyIa;;;;;;IAGF;;;;;;IAGA;;;;;;IAGA;;;;;;;;;;;;;;;;;;;gBAGuB;AAChC,YAAO,kKAAqC,yBAAyB;IACvE;;;QA3BgB;QACT;QACA;QACA;QACC;QACA;QACA;QACA;QACA;QACA;;IATQ;IACT;IACA;IACA;AAJD,qFAKE,GAAG,UACH,MAAM,gBACN,YAAY,QACZ,IAAI,aACJ,2BACA,aAAa;;EACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgC2B,YAAS,qHAAT;IAA2B;iBAGvB;AAC/B,YAAO,AAAM;IACf;;AAG0B,YAAA,AAAM;IAAa;;AAGhB,YAAA,AAAM;IAAgB;;AAG1B,YAAS,oBAAW,eAAG,AAAM,oBAAK;IAAE;;;QApBlC;QACnB;;AACH,yGAAgB,IAAI,qBADjB,iBAAiB;AAEvB,SAAO;EACT","file":"../../../../../../../../../../packages/flutter/src/material/page.dart.lib.js"}');
  // Exports:
  return {
    src__material__page: page$
  };
}));

//# sourceMappingURL=page.dart.lib.js.map
