// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/services/process_text.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__process_text_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  var process_text = Object.create(dart.library);
  var $keys = dartx.keys;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:flutter/src/services/process_text.dart",
    "dart:core",
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/services/process_text.dart",
    "package:flutter/src/services/platform_channel.dart"
  ];
  var id$ = dart.privateName(process_text, "ProcessTextAction.id");
  var label$ = dart.privateName(process_text, "ProcessTextAction.label");
  var _is = dart.privateName(dart_rti, "_is");
  process_text.ProcessTextAction = class ProcessTextAction extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    static ['_#new#tearOff'](id, label) {
      return new process_text.ProcessTextAction.new(id, label);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__process_text|ProcessTextAction", true)[_is](other) && other.id === this.id && other.label === this.label;
    }
    get hashCode() {
      return core.Object.hash(this.id, this.label);
    }
  };
  (process_text.ProcessTextAction.new = function(id, label) {
    this[id$] = id;
    this[label$] = label;
    ;
  }).prototype = process_text.ProcessTextAction.prototype;
  dart.addRtiResources(process_text.ProcessTextAction, ["flutter__src__services__process_text|ProcessTextAction"]);
  dart.setLibraryUri(process_text.ProcessTextAction, I[0]);
  dart.setFieldSignature(process_text.ProcessTextAction, () => dart.global.Object.setPrototypeOf({
    id: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    label: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(process_text.ProcessTextAction))));
  dart.defineExtensionMethods(process_text.ProcessTextAction, ['_equals']);
  dart.defineExtensionAccessors(process_text.ProcessTextAction, ['hashCode']);
  process_text.ProcessTextService = class ProcessTextService extends core.Object {};
  (process_text.ProcessTextService.new = function() {
    ;
  }).prototype = process_text.ProcessTextService.prototype;
  dart.addRtiResources(process_text.ProcessTextService, ["flutter__src__services__process_text|ProcessTextService"]);
  dart.setLibraryUri(process_text.ProcessTextService, I[0]);
  var __DefaultProcessTextService__processTextChannel = dart.privateName(process_text, "_#DefaultProcessTextService#_processTextChannel");
  var _processTextChannel = dart.privateName(process_text, "_processTextChannel");
  var _as = dart.privateName(dart_rti, "_as");
  process_text.DefaultProcessTextService = class DefaultProcessTextService extends core.Object {
    static ['_#new#tearOff']() {
      return new process_text.DefaultProcessTextService.new();
    }
    get [_processTextChannel]() {
      let t$360;
      t$360 = this[__DefaultProcessTextService__processTextChannel];
      return t$360 == null ? dart.throw(new _internal.LateError.fieldNI("_processTextChannel")) : t$360;
    }
    set [_processTextChannel](_processTextChannel$35param) {
      this[__DefaultProcessTextService__processTextChannel] = _processTextChannel$35param;
    }
    setChannel(newChannel) {
      if (!dart.fn(() => {
        this[_processTextChannel] = newChannel;
        return true;
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[2], 108, 12, "() {\r\n      _processTextChannel = newChannel;\r\n      return true;\r\n    }()");
    }
    queryTextActions() {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<flutter__src__services__process_text|ProcessTextAction>", true)), t$returnValue, t$handler = 1, t$currentError, t$temp, t$temp$, t$36$35e, asyncScope = Object.create(null), asyncScope$ = Object.create(null), asyncScope$0 = Object.create(null);
      var t$36asyncqueryTextActions = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$currentError = t$result;
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope = Object.create(null);
              asyncScope.rawResults = null;
              t$handler = 3;
              t$temp = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<core|Object?,core|Object?>?", true);
              t$temp$ = t$temp[_as].bind(t$temp);
              t$goto = 6;
              return async._asyncAwait(this[_processTextChannel].invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), "ProcessText.queryTextActions"), t$36asyncqueryTextActions, t$completer);
            case 6:
              // returning from await.
              asyncScope$0.result = t$temp$(t$result);
              if (asyncScope$0.result == null) {
                t$returnValue = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__services__process_text|ProcessTextAction>", true), []);
                // goto return
                t$goto = 7;
                break;
              }
              asyncScope.rawResults = asyncScope$0.result;
              t$handler = 1;
              // goto after finally
              t$goto = 5;
              break;
            case 3:
              // catch
              t$handler = 2;
              t$36$35e = t$currentError;
              asyncScope$.e = dart.getThrown(t$36$35e);
              if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object", true)[_is](asyncScope$.e)) {
                t$returnValue = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__services__process_text|ProcessTextAction>", true), []);
                // goto return
                t$goto = 7;
                break;
              } else
                throw t$36$35e;
              // goto after finally
              t$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              t$goto = 1;
              break;
            case 5:
              // after finally
              t$returnValue = (capturedAsyncScope => () => {
                let t$361 = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__services__process_text|ProcessTextAction>", true), []);
                for (let id of capturedAsyncScope.rawResults[$keys])
                  t$361.push(new process_text.ProcessTextAction.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](dart.nullCheck(id)), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](dart.nullCheck(capturedAsyncScope.rawResults[$_get](id)))));
                return t$361;
              })(asyncScope)();
              // goto return
              t$goto = 7;
              break;
            case 7:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
            case 1:
              // rethrow
              return async._asyncRethrow(t$currentError, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncqueryTextActions, t$completer);
    }
    processTextAction(id, text, readOnly) {
      let t$goto = 0, t$completer = async._makeAsyncAwaitCompleter(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String?", true)), t$returnValue, t$temp, t$temp$, asyncScope = Object.create(null);
      var t$36asyncprocessTextAction = async._wrapJsFunctionForAsync((t$errorCode, t$result) => {
        if (t$errorCode === 1) return async._asyncRethrow(t$result, t$completer);
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$temp = dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String?", true);
              t$temp$ = t$temp[_as].bind(t$temp);
              t$goto = 2;
              return async._asyncAwait(this[_processTextChannel].invokeMethod(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), "ProcessText.processTextAction", [id, text, readOnly]), t$36asyncprocessTextAction, t$completer);
            case 2:
              // returning from await.
              asyncScope.processedText = t$temp$(t$result);
              t$returnValue = asyncScope.processedText;
              // goto return
              t$goto = 3;
              break;
            case 3:
              // return
              return async._asyncReturn(t$returnValue, t$completer);
          }
      });
      return async._asyncStartSync(t$36asyncprocessTextAction, t$completer);
    }
  };
  (process_text.DefaultProcessTextService.new = function() {
    this[__DefaultProcessTextService__processTextChannel] = null;
    this[_processTextChannel] = system_channels.SystemChannels.processText;
  }).prototype = process_text.DefaultProcessTextService.prototype;
  dart.addRtiResources(process_text.DefaultProcessTextService, ["flutter__src__services__process_text|DefaultProcessTextService", "flutter__src__services__process_text|ProcessTextService"]);
  dart.setMethodSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({
    setChannel: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__services__platform_channel|MethodChannel)", true),
    queryTextActions: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<core|List<flutter__src__services__process_text|ProcessTextAction>>()", true),
    processTextAction: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "async|Future<core|String?>(core|String,core|String,core|bool)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setGetterSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({
    [_processTextChannel]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_channel|MethodChannel", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setSetterSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({
    [_processTextChannel]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_channel|MethodChannel", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setLibraryUri(process_text.DefaultProcessTextService, I[0]);
  dart.setFieldSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({[__DefaultProcessTextService__processTextChannel]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__services__platform_channel|MethodChannel?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|Map":{"Map.K":"1","Map.V":"2"},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"async|Future":{"Future.T":"1"},"flutter__src__services__process_text|DefaultProcessTextService":{"flutter__src__services__process_text|ProcessTextService":[]}}'));
  dart.trackLibraries("packages/flutter/src/services/process_text.dart", {
    "package:flutter/src/services/process_text.dart": process_text
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["process_text.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAee;;;;;;IAGA;;;;;;;;;YAGW;;AACtB,UAAI,AAAU,SAAM,KAAK;AACvB,cAAO;;AAGT,YAAa,AACI,uHADV,KAAK,KACV,AAAM,AAAG,KAAJ,QAAO,WACZ,AAAM,AAAM,KAAP,WAAU;IACnB;;AAGoB,YAAO,kBAAK,SAAI;IAAM;;iDApBb,IAAS;IAAT;IAAS;;EAAM;;;;;;;;;;;;;;;;;;;;;;EA2C9C;;;;;;;;;;;;AA4CqB;;IAAmB;8BAAnB;;IAAmB;eAOR;AAC5B,WAAO,AAGN;AAFC,oCAAsB,UAAU;AAChC,cAAO;;IAEX;;+NAGgC;;;;;;;;;;;cACF;;;;cAItB;uCAAM,AAAoB,oGAC5B;;;cAF2B,sBAG3B;kBAEE,mBAAM;AACR,gCAA0B;;gBAA1B;;;sCAGW,mBAAM;;;cAVrB;;;;;;cAWS;;AACP,gCAA0B;;gBAA1B;;;;;cAZF;;;;;;;;;AAeA,8BAA0B;;AACxB,yBAAmB,KAAM,AAAW,8BAAD;AACjC,oEAAsB,2EAAF,eAAF,EAAE,IAA6B,2EAAF,eAAd,AAAU,6BAAA,QAAC,EAAE;;;;cAFlD;;;;AAIF;;;;;;YAtBgC;IAsBhC;sBAKyC,IAAW,MAAW;4IAA/C;;;;;;;;;cACgB;uCAAM,AAAoB,oGACtD,kCACU,EAAE,EAAE,IAAI,EAAE,QAAQ;;;cAFhB,2BAGZ;AAEF,8BAAO,wBAAa;;cAApB;;;;AACF;;;YAPgB;IAOhB;;;4DAjDmB;AAJjB,gCAAqC;EACvC","file":"../../../../../../../../../../packages/flutter/src/services/process_text.dart.lib.js"}');
  // Exports:
  return {
    src__services__process_text: process_text
  };
}));

//# sourceMappingURL=process_text.dart.lib.js.map
