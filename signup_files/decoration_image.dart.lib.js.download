// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.6.0 (stable) (Thu Dec 5 07:46:24 2024 -0800) on "windows_x64"
// Module: packages/flutter/src/painting/decoration_image.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/foundation/memory_allocations.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/painting/image_stream.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/painting/debug.dart', 'packages/flutter/src/scheduler/binding.dart'], (function load__packages__flutter__src__painting__decoration_image_dart(dart_sdk, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__foundation__memory_allocations$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__painting__image_stream$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__painting__debug$46dart, packages__flutter__src__scheduler__binding$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const math = dart_sdk.math;
  const _engine = dart_sdk._engine;
  const developer = dart_sdk.developer;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const memory_allocations = packages__flutter__src__foundation__memory_allocations$46dart.src__foundation__memory_allocations;
  const assertions = packages__flutter__src__foundation___platform_web$46dart.src__foundation__assertions;
  const diagnostics = packages__flutter__src__foundation___platform_web$46dart.src__foundation__diagnostics;
  const image_stream = packages__flutter__src__painting__image_stream$46dart.src__painting__image_stream;
  const binding = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const debug = packages__flutter__src__painting__debug$46dart.src__painting__debug;
  const binding$ = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  var decoration_image = Object.create(dart.library);
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $join = dartx.join;
  var $isNotEmpty = dartx.isNotEmpty;
  var $toDouble = dartx.toDouble;
  var $fold = dartx.fold;
  var $truncate = dartx.truncate;
  var $toInt = dartx.toInt;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $values = dartx.values;
  var $toSet = dartx.toSet;
  var $isEmpty = dartx.isEmpty;
  var $floor = dartx.floor;
  var $ceil = dartx.ceil;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "repeat",
        [_Enum_index]: 0
      }, decoration_image.ImageRepeat.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "repeatX",
        [_Enum_index]: 1
      }, decoration_image.ImageRepeat.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "repeatY",
        [_Enum_index]: 2
      }, decoration_image.ImageRepeat.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "noRepeat",
        [_Enum_index]: 3
      }, decoration_image.ImageRepeat.prototype));
    },
    get C0() {
      return C[0] = dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|ImageRepeat", true), [C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4]);
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [Alignment_y]: 0,
        [Alignment_x]: 0
      }, alignment.Alignment.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "medium",
        [_Enum_index]: 2
      }, ui.FilterQuality.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "srcOver",
        [_Enum_index]: 3
      }, ui.BlendMode.prototype));
    },
    get C9() {
      return C[9] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "matrix",
        [_Enum_index]: 1
      }, _engine.ColorFilterType.prototype));
    },
    get C10() {
      return C[10] = dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true), [-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]);
    },
    get C8() {
      return C[8] = dart.const(Object.setPrototypeOf({
        [EngineColorFilter_type]: C[9] || CT.C9,
        [EngineColorFilter_matrix]: C[10] || CT.C10,
        [EngineColorFilter_blendMode]: null,
        [EngineColorFilter_color]: null
      }, _engine.EngineColorFilter.prototype));
    }
  });
  var C = Array(11).fill(void 0);
  var I = [
    "package:flutter/src/painting/decoration_image.dart",
    "dart:core",
    "package:flutter/src/painting/image_provider.dart",
    "dart:ui",
    "package:flutter/src/painting/box_fit.dart",
    "package:flutter/src/painting/alignment.dart",
    "file:///C:/Users/Varun/Downloads/flutter_windows_3.27.1-stable/flutter/packages/flutter/lib/src/painting/decoration_image.dart",
    "package:flutter/src/painting/image_stream.dart"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  decoration_image.ImageRepeat = class ImageRepeat extends core._Enum {
    [_enumToString]() {
      return "ImageRepeat." + this[_name];
    }
  };
  (decoration_image.ImageRepeat.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(decoration_image.ImageRepeat).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = decoration_image.ImageRepeat.prototype;
  dart.addRtiResources(decoration_image.ImageRepeat, ["flutter__src__painting__decoration_image|ImageRepeat"]);
  dart.setMethodSignature(decoration_image.ImageRepeat, () => dart.global.Object.setPrototypeOf({
    [_enumToString]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration_image.ImageRepeat))));
  dart.setLibraryUri(decoration_image.ImageRepeat, I[0]);
  dart.setStaticFieldSignature(decoration_image.ImageRepeat, () => ['values', 'repeat', 'repeatX', 'repeatY', 'noRepeat']);
  dart.defineLazy(decoration_image.ImageRepeat, {
    /*decoration_image.ImageRepeat.values*/get values() {
      return C[0] || CT.C0;
    },
    /*decoration_image.ImageRepeat.repeat*/get repeat() {
      return C[1] || CT.C1;
    },
    /*decoration_image.ImageRepeat.repeatX*/get repeatX() {
      return C[2] || CT.C2;
    },
    /*decoration_image.ImageRepeat.repeatY*/get repeatY() {
      return C[3] || CT.C3;
    },
    /*decoration_image.ImageRepeat.noRepeat*/get noRepeat() {
      return C[4] || CT.C4;
    }
  });
  var image$ = dart.privateName(decoration_image, "DecorationImage.image");
  var onError$ = dart.privateName(decoration_image, "DecorationImage.onError");
  var colorFilter$ = dart.privateName(decoration_image, "DecorationImage.colorFilter");
  var fit$ = dart.privateName(decoration_image, "DecorationImage.fit");
  var alignment$ = dart.privateName(decoration_image, "DecorationImage.alignment");
  var centerSlice$ = dart.privateName(decoration_image, "DecorationImage.centerSlice");
  var repeat$ = dart.privateName(decoration_image, "DecorationImage.repeat");
  var matchTextDirection$ = dart.privateName(decoration_image, "DecorationImage.matchTextDirection");
  var scale$ = dart.privateName(decoration_image, "DecorationImage.scale");
  var opacity$ = dart.privateName(decoration_image, "DecorationImage.opacity");
  var filterQuality$ = dart.privateName(decoration_image, "DecorationImage.filterQuality");
  var invertColors$ = dart.privateName(decoration_image, "DecorationImage.invertColors");
  var isAntiAlias$ = dart.privateName(decoration_image, "DecorationImage.isAntiAlias");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var _is = dart.privateName(dart_rti, "_is");
  decoration_image.DecorationImage = class DecorationImage extends core.Object {
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get onError() {
      return this[onError$];
    }
    set onError(value) {
      super.onError = value;
    }
    get colorFilter() {
      return this[colorFilter$];
    }
    set colorFilter(value) {
      super.colorFilter = value;
    }
    get fit() {
      return this[fit$];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get centerSlice() {
      return this[centerSlice$];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get repeat() {
      return this[repeat$];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get scale() {
      return this[scale$];
    }
    set scale(value) {
      super.scale = value;
    }
    get opacity() {
      return this[opacity$];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get filterQuality() {
      return this[filterQuality$];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get invertColors() {
      return this[invertColors$];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    get isAntiAlias() {
      return this[isAntiAlias$];
    }
    set isAntiAlias(value) {
      super.isAntiAlias = value;
    }
    static ['_#new#tearOff'](opts) {
      let image = opts && 'image' in opts ? opts.image : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
      let fit = opts && 'fit' in opts ? opts.fit : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[5] || CT.C5;
      let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
      let repeat = opts && 'repeat' in opts ? opts.repeat : C[4] || CT.C4;
      let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
      let scale = opts && 'scale' in opts ? opts.scale : 1;
      let opacity = opts && 'opacity' in opts ? opts.opacity : 1;
      let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[6] || CT.C6;
      let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
      let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
      return new decoration_image.DecorationImage.new({image: image, onError: onError, colorFilter: colorFilter, fit: fit, alignment: alignment, centerSlice: centerSlice, repeat: repeat, matchTextDirection: matchTextDirection, scale: scale, opacity: opacity, filterQuality: filterQuality, invertColors: invertColors, isAntiAlias: isAntiAlias});
    }
    createPainter(onChanged) {
      return new decoration_image._DecorationImagePainter.__(this, onChanged);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImage", true)[_is](other) && dart.equals(other.image, this.image) && dart.equals(other.colorFilter, this.colorFilter) && other.fit == this.fit && dart.equals(other.alignment, this.alignment) && dart.equals(other.centerSlice, this.centerSlice) && other.repeat === this.repeat && other.matchTextDirection === this.matchTextDirection && other.scale === this.scale && other.opacity === this.opacity && other.filterQuality === this.filterQuality && other.invertColors === this.invertColors && other.isAntiAlias === this.isAntiAlias;
    }
    get hashCode() {
      return core.Object.hash(this.image, this.colorFilter, this.fit, this.alignment, this.centerSlice, this.repeat, this.matchTextDirection, this.scale, this.opacity, this.filterQuality, this.invertColors, this.isAntiAlias);
    }
    toString() {
      let properties = (() => {
        let t$362 = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<core|String>", true), [dart.str(this.image)]);
        if (this.colorFilter != null) t$362.push(dart.str(this.colorFilter));
        if (this.fit != null && !(this.fit === box_fit.BoxFit.fill && this.centerSlice != null) && !(this.fit === box_fit.BoxFit.scaleDown && this.centerSlice == null)) t$362.push(dart.str(this.fit));
        t$362.push(dart.str(this.alignment));
        if (this.centerSlice != null) t$362.push("centerSlice: " + dart.str(this.centerSlice));
        if (this.repeat !== decoration_image.ImageRepeat.noRepeat) t$362.push(dart.str(this.repeat));
        if (this.matchTextDirection) t$362.push("match text direction");
        t$362.push("scale " + this.scale[$toStringAsFixed](1));
        t$362.push("opacity " + this.opacity[$toStringAsFixed](1));
        t$362.push(dart.str(this.filterQuality));
        if (this.invertColors) t$362.push("invert colors");
        if (this.isAntiAlias) t$362.push("use anti-aliasing");
        return t$362;
      })();
      return object.objectRuntimeType(this, "DecorationImage") + "(" + properties[$join](", ") + ")";
    }
    static lerp(a, b, t) {
      if (a == b || t === 0.0) {
        return a;
      }
      if (t === 1.0) {
        return b;
      }
      return new decoration_image._BlendedDecorationImage.new(a, b, t);
    }
  };
  (decoration_image.DecorationImage.new = function(opts) {
    let image = opts && 'image' in opts ? opts.image : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[5] || CT.C5;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[4] || CT.C4;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let opacity = opts && 'opacity' in opts ? opts.opacity : 1;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[6] || CT.C6;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    this[image$] = image;
    this[onError$] = onError;
    this[colorFilter$] = colorFilter;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[centerSlice$] = centerSlice;
    this[repeat$] = repeat;
    this[matchTextDirection$] = matchTextDirection;
    this[scale$] = scale;
    this[opacity$] = opacity;
    this[filterQuality$] = filterQuality;
    this[invertColors$] = invertColors;
    this[isAntiAlias$] = isAntiAlias;
    ;
  }).prototype = decoration_image.DecorationImage.prototype;
  dart.addRtiResources(decoration_image.DecorationImage, ["flutter__src__painting__decoration_image|DecorationImage"]);
  dart.setMethodSignature(decoration_image.DecorationImage, () => dart.global.Object.setPrototypeOf({
    createPainter: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImagePainter(~())", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration_image.DecorationImage))));
  dart.setStaticMethodSignature(decoration_image.DecorationImage, () => ['lerp']);
  dart.setLibraryUri(decoration_image.DecorationImage, I[0]);
  dart.setFieldSignature(decoration_image.DecorationImage, () => dart.global.Object.setPrototypeOf({
    image: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_provider|ImageProvider<core|Object>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    onError: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object,core|StackTrace?)?", true),
      isConst: false,
      isFinal: true
    },
    colorFilter: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|ColorFilter?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    fit: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__box_fit|BoxFit?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[4]
    },
    alignment: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__alignment|AlignmentGeometry", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[5]
    },
    centerSlice: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Rect?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    repeat: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|ImageRepeat", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    matchTextDirection: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    scale: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    opacity: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    filterQuality: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|FilterQuality", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    },
    invertColors: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    isAntiAlias: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(decoration_image.DecorationImage))));
  dart.defineExtensionMethods(decoration_image.DecorationImage, ['_equals', 'toString']);
  dart.defineExtensionAccessors(decoration_image.DecorationImage, ['hashCode']);
  decoration_image.DecorationImagePainter = class DecorationImagePainter extends core.Object {};
  (decoration_image.DecorationImagePainter.new = function() {
    ;
  }).prototype = decoration_image.DecorationImagePainter.prototype;
  dart.addRtiResources(decoration_image.DecorationImagePainter, ["flutter__src__painting__decoration_image|DecorationImagePainter"]);
  dart.setLibraryUri(decoration_image.DecorationImagePainter, I[0]);
  var _imageStream = dart.privateName(decoration_image, "_imageStream");
  var _image = dart.privateName(decoration_image, "_image");
  var _details$ = dart.privateName(decoration_image, "_details");
  var _onChanged$ = dart.privateName(decoration_image, "_onChanged");
  var _handleImage = dart.privateName(decoration_image, "_handleImage");
  decoration_image._DecorationImagePainter = class _DecorationImagePainter extends core.Object {
    static ['_#_#tearOff'](_details, _onChanged) {
      return new decoration_image._DecorationImagePainter.__(_details, _onChanged);
    }
    paint(canvas, rect, clipPath, configuration, opts) {
      let t$363, t$363$;
      let blend = opts && 'blend' in opts ? opts.blend : 1;
      let blendMode = opts && 'blendMode' in opts ? opts.blendMode : C[7] || CT.C7;
      let flipHorizontally = false;
      if (this[_details$].matchTextDirection) {
        if (!dart.fn(() => {
          if (configuration.textDirection == null) {
            dart.throw(new assertions.FlutterError.fromParts(_interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<flutter__src__foundation__diagnostics|DiagnosticsNode>", true), [new assertions.ErrorSummary.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__assertions|ErrorSummary", true), "DecorationImage.matchTextDirection can only be used when a TextDirection is available."), new assertions.ErrorDescription.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__assertions|ErrorDescription", true), "When DecorationImagePainter.paint() was called, there was no text direction provided in the ImageConfiguration object to match."), new diagnostics.DiagnosticsProperty.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__diagnostics|DiagnosticsProperty<flutter__src__painting__decoration_image|DecorationImage>", true), "The DecorationImage was", this[_details$], {style: diagnostics.DiagnosticsTreeStyle.errorProperty}), new diagnostics.DiagnosticsProperty.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__diagnostics|DiagnosticsProperty<flutter__src__painting__image_provider|ImageConfiguration>", true), "The ImageConfiguration was", configuration, {style: diagnostics.DiagnosticsTreeStyle.errorProperty})])));
          }
          return true;
        }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[6], 342, 14, "() {\r\n        // We check this first so that the assert will fire immediately, not just\r\n        // when the image is ready.\r\n        if (configuration.textDirection == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('DecorationImage.matchTextDirection can only be used when a TextDirection is available.'),\r\n            ErrorDescription(\r\n              'When DecorationImagePainter.paint() was called, there was no text direction provided '\r\n              'in the ImageConfiguration object to match.',\r\n            ),\r\n            DiagnosticsProperty<DecorationImage>('The DecorationImage was', _details, style: DiagnosticsTreeStyle.errorProperty),\r\n            DiagnosticsProperty<ImageConfiguration>('The ImageConfiguration was', configuration, style: DiagnosticsTreeStyle.errorProperty),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        if (configuration.textDirection === ui.TextDirection.rtl) {
          flipHorizontally = true;
        }
      }
      let newImageStream = this[_details$].image.resolve(configuration);
      if (!dart.equals(newImageStream.key, (t$363 = this[_imageStream], t$363 == null ? null : t$363.key))) {
        let listener = new image_stream.ImageStreamListener.new(dart.bind(this, _handleImage), {onError: this[_details$].onError});
        t$363$ = this[_imageStream];
        t$363$ == null ? null : t$363$.removeListener(listener);
        this[_imageStream] = newImageStream;
        dart.nullCheck(this[_imageStream]).addListener(listener);
      }
      if (this[_image] == null) {
        return;
      }
      if (clipPath != null) {
        canvas.save();
        canvas.clipPath(clipPath);
      }
      decoration_image.paintImage({canvas: canvas, rect: rect, image: dart.nullCheck(this[_image]).image, debugImageLabel: dart.nullCheck(this[_image]).debugLabel, scale: this[_details$].scale * dart.nullCheck(this[_image]).scale, colorFilter: this[_details$].colorFilter, fit: this[_details$].fit, alignment: this[_details$].alignment.resolve(configuration.textDirection), centerSlice: this[_details$].centerSlice, repeat: this[_details$].repeat, flipHorizontally: flipHorizontally, opacity: this[_details$].opacity * blend, filterQuality: this[_details$].filterQuality, invertColors: this[_details$].invertColors, isAntiAlias: this[_details$].isAntiAlias, blendMode: blendMode});
      if (clipPath != null) {
        canvas.restore();
      }
    }
    [_handleImage](value, synchronousCall) {
      let t$363;
      if (dart.equals(this[_image], value)) {
        return;
      }
      if (this[_image] != null && dart.nullCheck(this[_image]).isCloneOf(value)) {
        value.dispose();
        return;
      }
      t$363 = this[_image];
      t$363 == null ? null : t$363.dispose();
      this[_image] = value;
      if (!synchronousCall) {
        this[_onChanged$]();
      }
    }
    dispose() {
      let t$363, t$363$;
      {
        memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectDisposed({object: this});
      }
      t$363 = this[_imageStream];
      t$363 == null ? null : t$363.removeListener(new image_stream.ImageStreamListener.new(dart.bind(this, _handleImage), {onError: this[_details$].onError}));
      t$363$ = this[_image];
      t$363$ == null ? null : t$363$.dispose();
      this[_image] = null;
    }
    toString() {
      return object.objectRuntimeType(this, "DecorationImagePainter") + "(stream: " + dart.str(this[_imageStream]) + ", image: " + dart.str(this[_image]) + ") for " + dart.str(this[_details$]);
    }
  };
  (decoration_image._DecorationImagePainter.__ = function(_details, _onChanged) {
    this[_imageStream] = null;
    this[_image] = null;
    this[_details$] = _details;
    this[_onChanged$] = _onChanged;
    {
      memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectCreated({library: "package:flutter/painting.dart", className: dart.strSafe(dart_rti.createRuntimeType(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|_DecorationImagePainter", true))), object: this});
    }
  }).prototype = decoration_image._DecorationImagePainter.prototype;
  dart.addRtiResources(decoration_image._DecorationImagePainter, ["flutter__src__painting__decoration_image|_DecorationImagePainter", "flutter__src__painting__decoration_image|DecorationImagePainter"]);
  dart.setMethodSignature(decoration_image._DecorationImagePainter, () => dart.global.Object.setPrototypeOf({
    paint: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(ui|Canvas,ui|Rect,ui|Path?,flutter__src__painting__image_provider|ImageConfiguration{blend:core|double,blendMode:ui|BlendMode})", true),
    [_handleImage]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(flutter__src__painting__image_stream|ImageInfo,core|bool)", true),
    dispose: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration_image._DecorationImagePainter))));
  dart.setLibraryUri(decoration_image._DecorationImagePainter, I[0]);
  dart.setFieldSignature(decoration_image._DecorationImagePainter, () => dart.global.Object.setPrototypeOf({
    [_details$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImage", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    [_onChanged$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
      isConst: false,
      isFinal: true
    },
    [_imageStream]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageStream?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[7]
    },
    [_image]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_stream|ImageInfo?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[7]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(decoration_image._DecorationImagePainter))));
  dart.defineExtensionMethods(decoration_image._DecorationImagePainter, ['toString']);
  var a$ = dart.privateName(decoration_image, "_BlendedDecorationImage.a");
  var b$ = dart.privateName(decoration_image, "_BlendedDecorationImage.b");
  var t$ = dart.privateName(decoration_image, "_BlendedDecorationImage.t");
  decoration_image._BlendedDecorationImage = class _BlendedDecorationImage extends core.Object {
    get a() {
      return this[a$];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[b$];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[t$];
    }
    set t(value) {
      super.t = value;
    }
    static ['_#new#tearOff'](a, b, t) {
      return new decoration_image._BlendedDecorationImage.new(a, b, t);
    }
    get image() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.image);
      return t$363$ == null ? dart.nullCheck(this.a).image : t$363$;
    }
    get onError() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.onError);
      return t$363$ == null ? dart.nullCheck(this.a).onError : t$363$;
    }
    get colorFilter() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.colorFilter);
      return t$363$ == null ? dart.nullCheck(this.a).colorFilter : t$363$;
    }
    get fit() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.fit);
      return t$363$ == null ? dart.nullCheck(this.a).fit : t$363$;
    }
    get alignment() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.alignment);
      return t$363$ == null ? dart.nullCheck(this.a).alignment : t$363$;
    }
    get centerSlice() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.centerSlice);
      return t$363$ == null ? dart.nullCheck(this.a).centerSlice : t$363$;
    }
    get repeat() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.repeat);
      return t$363$ == null ? dart.nullCheck(this.a).repeat : t$363$;
    }
    get matchTextDirection() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.matchTextDirection);
      return t$363$ == null ? dart.nullCheck(this.a).matchTextDirection : t$363$;
    }
    get scale() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.scale);
      return t$363$ == null ? dart.nullCheck(this.a).scale : t$363$;
    }
    get opacity() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.opacity);
      return t$363$ == null ? dart.nullCheck(this.a).opacity : t$363$;
    }
    get filterQuality() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.filterQuality);
      return t$363$ == null ? dart.nullCheck(this.a).filterQuality : t$363$;
    }
    get invertColors() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.invertColors);
      return t$363$ == null ? dart.nullCheck(this.a).invertColors : t$363$;
    }
    get isAntiAlias() {
      let t$363, t$363$;
      t$363$ = (t$363 = this.b, t$363 == null ? null : t$363.isAntiAlias);
      return t$363$ == null ? dart.nullCheck(this.a).isAntiAlias : t$363$;
    }
    createPainter(onChanged) {
      let t$363, t$363$;
      return new decoration_image._BlendedDecorationImagePainter.__((t$363 = this.a, t$363 == null ? null : t$363.createPainter(onChanged)), (t$363$ = this.b, t$363$ == null ? null : t$363$.createPainter(onChanged)), this.t);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|_BlendedDecorationImage", true)[_is](other) && dart.equals(other.a, this.a) && dart.equals(other.b, this.b) && other.t === this.t;
    }
    get hashCode() {
      return core.Object.hash(this.a, this.b, this.t);
    }
    toString() {
      return object.objectRuntimeType(this, "_BlendedDecorationImage") + "(" + dart.str(this.a) + ", " + dart.str(this.b) + ", " + dart.strSafe(this.t) + ")";
    }
  };
  (decoration_image._BlendedDecorationImage.new = function(a, b, t) {
    this[a$] = a;
    this[b$] = b;
    this[t$] = t;
    if (!(a != null || b != null)) dart.assertFailed(null, I[6], 755, 66, "a != null || b != null");
    ;
  }).prototype = decoration_image._BlendedDecorationImage.prototype;
  dart.addRtiResources(decoration_image._BlendedDecorationImage, ["flutter__src__painting__decoration_image|_BlendedDecorationImage", "flutter__src__painting__decoration_image|DecorationImage"]);
  dart.setMethodSignature(decoration_image._BlendedDecorationImage, () => dart.global.Object.setPrototypeOf({
    createPainter: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImagePainter(~())", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration_image._BlendedDecorationImage))));
  dart.setGetterSignature(decoration_image._BlendedDecorationImage, () => dart.global.Object.setPrototypeOf({
    image: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__image_provider|ImageProvider<core|Object>", true),
    onError: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object,core|StackTrace?)?", true),
    colorFilter: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|ColorFilter?", true),
    fit: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__box_fit|BoxFit?", true),
    alignment: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__alignment|AlignmentGeometry", true),
    centerSlice: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Rect?", true),
    repeat: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|ImageRepeat", true),
    matchTextDirection: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    scale: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
    opacity: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
    filterQuality: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|FilterQuality", true),
    invertColors: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isAntiAlias: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(decoration_image._BlendedDecorationImage))));
  dart.setLibraryUri(decoration_image._BlendedDecorationImage, I[0]);
  dart.setFieldSignature(decoration_image._BlendedDecorationImage, () => dart.global.Object.setPrototypeOf({
    a: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImage?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    b: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImage?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    t: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(decoration_image._BlendedDecorationImage))));
  dart.defineExtensionMethods(decoration_image._BlendedDecorationImage, ['_equals', 'toString']);
  dart.defineExtensionAccessors(decoration_image._BlendedDecorationImage, ['hashCode']);
  decoration_image._BlendedDecorationImagePainter = class _BlendedDecorationImagePainter extends core.Object {
    static ['_#_#tearOff'](a, b, t) {
      return new decoration_image._BlendedDecorationImagePainter.__(a, b, t);
    }
    paint(canvas, rect, clipPath, configuration, opts) {
      let t$363, t$363$;
      let blend = opts && 'blend' in opts ? opts.blend : 1;
      let blendMode = opts && 'blendMode' in opts ? opts.blendMode : C[7] || CT.C7;
      canvas.saveLayer(null, ui.Paint.new());
      t$363 = this.a;
      t$363 == null ? null : t$363.paint(canvas, rect, clipPath, configuration, {blend: blend * (1.0 - this.t), blendMode: blendMode});
      t$363$ = this.b;
      t$363$ == null ? null : t$363$.paint(canvas, rect, clipPath, configuration, {blend: blend * this.t, blendMode: this.a != null ? ui.BlendMode.plus : blendMode});
      canvas.restore();
    }
    dispose() {
      let t$363, t$363$;
      {
        memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectDisposed({object: this});
      }
      t$363 = this.a;
      t$363 == null ? null : t$363.dispose();
      t$363$ = this.b;
      t$363$ == null ? null : t$363$.dispose();
    }
    toString() {
      return object.objectRuntimeType(this, "_BlendedDecorationImagePainter") + "(" + dart.str(this.a) + ", " + dart.str(this.b) + ", " + dart.strSafe(this.t) + ")";
    }
  };
  (decoration_image._BlendedDecorationImagePainter.__ = function(a, b, t) {
    this.a = a;
    this.b = b;
    this.t = t;
    {
      memory_allocations.FlutterMemoryAllocations.instance.dispatchObjectCreated({library: "package:flutter/painting.dart", className: dart.strSafe(dart_rti.createRuntimeType(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|_BlendedDecorationImagePainter", true))), object: this});
    }
  }).prototype = decoration_image._BlendedDecorationImagePainter.prototype;
  dart.addRtiResources(decoration_image._BlendedDecorationImagePainter, ["flutter__src__painting__decoration_image|_BlendedDecorationImagePainter", "flutter__src__painting__decoration_image|DecorationImagePainter"]);
  dart.setMethodSignature(decoration_image._BlendedDecorationImagePainter, () => dart.global.Object.setPrototypeOf({
    paint: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(ui|Canvas,ui|Rect,ui|Path?,flutter__src__painting__image_provider|ImageConfiguration{blend:core|double,blendMode:ui|BlendMode})", true),
    dispose: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration_image._BlendedDecorationImagePainter))));
  dart.setLibraryUri(decoration_image._BlendedDecorationImagePainter, I[0]);
  dart.setFieldSignature(decoration_image._BlendedDecorationImagePainter, () => dart.global.Object.setPrototypeOf({
    a: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImagePainter?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    b: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__painting__decoration_image|DecorationImagePainter?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    t: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(decoration_image._BlendedDecorationImagePainter))));
  dart.defineExtensionMethods(decoration_image._BlendedDecorationImagePainter, ['toString']);
  var _as = dart.privateName(dart_rti, "_as");
  var EngineColorFilter_type = dart.privateName(_engine, "EngineColorFilter.type");
  var EngineColorFilter_matrix = dart.privateName(_engine, "EngineColorFilter.matrix");
  var EngineColorFilter_blendMode = dart.privateName(_engine, "EngineColorFilter.blendMode");
  var EngineColorFilter_color = dart.privateName(_engine, "EngineColorFilter.color");
  decoration_image.debugFlushLastFrameImageSizeInfo = function debugFlushLastFrameImageSizeInfo() {
    if (!dart.fn(() => {
      decoration_image._lastFrameImageSizeInfo = collection.LinkedHashSet.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|LinkedHashSet<flutter__src__painting__debug|ImageSizeInfo>", true));
      return true;
    }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[6], 453, 10, "() {\r\n    _lastFrameImageSizeInfo = <ImageSizeInfo>{};\r\n    return true;\r\n  }()");
  };
  decoration_image.paintImage = function paintImage(opts) {
    let t$363, t$363$, t$363$0, t$363$1, t$363$2;
    let canvas = opts && 'canvas' in opts ? opts.canvas : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let debugImageLabel = opts && 'debugImageLabel' in opts ? opts.debugImageLabel : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let opacity = opts && 'opacity' in opts ? opts.opacity : 1;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[5] || CT.C5;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[4] || CT.C4;
    let flipHorizontally = opts && 'flipHorizontally' in opts ? opts.flipHorizontally : false;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C[6] || CT.C6;
    let isAntiAlias = opts && 'isAntiAlias' in opts ? opts.isAntiAlias : false;
    let blendMode = opts && 'blendMode' in opts ? opts.blendMode : C[7] || CT.C7;
    if (!dart.test((t$363$ = (t$363 = image.debugGetOpenHandleStackTraces(), t$363 == null ? null : t$363[$isNotEmpty]), t$363$ == null ? true : t$363$))) dart.assertFailed("Cannot paint an image that is disposed.\nThe caller of paintImage is expected to wait to dispose the image until after painting has completed.", I[6], 543, 5, "image.debugGetOpenHandleStackTraces()?.isNotEmpty ?? true");
    if (rect.isEmpty) {
      return;
    }
    let outputSize = rect.size;
    let inputSize = new ui.Size.new(image.width[$toDouble](), image.height[$toDouble]());
    let sliceBorder = null;
    if (centerSlice != null) {
      sliceBorder = dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Offset", true)[_as](inputSize['/'](scale)['-'](centerSlice.size));
      outputSize = dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Size", true)[_as](outputSize['-'](sliceBorder));
      inputSize = dart_rti._Universe.eval(dart_rti._theUniverse(), "ui|Size", true)[_as](inputSize['-'](sliceBorder['*'](scale)));
    }
    fit == null ? fit = centerSlice == null ? box_fit.BoxFit.scaleDown : box_fit.BoxFit.fill : null;
    if (!(centerSlice == null || fit !== box_fit.BoxFit.none && fit !== box_fit.BoxFit.cover)) dart.assertFailed(null, I[6], 560, 10, "centerSlice == null || (fit != BoxFit.none && fit != BoxFit.cover)");
    let fittedSizes = box_fit.applyBoxFit(fit, inputSize['/'](scale), outputSize);
    let sourceSize = fittedSizes.source['*'](scale);
    let destinationSize = fittedSizes.destination;
    if (centerSlice != null) {
      outputSize = outputSize['+'](dart.nullCheck(sliceBorder));
      destinationSize = destinationSize['+'](sliceBorder);
      if (!dart.equals(sourceSize, inputSize)) dart.assertFailed("centerSlice was used with a BoxFit that does not guarantee that the image is fully visible.", I[6], 569, 12, "sourceSize == inputSize");
    }
    if (repeat !== decoration_image.ImageRepeat.noRepeat && dart.equals(destinationSize, outputSize)) {
      repeat = decoration_image.ImageRepeat.noRepeat;
    }
    let paint = (t$363$0 = ui.Paint.new(), (() => {
      t$363$0.isAntiAlias = isAntiAlias;
      return t$363$0;
    })());
    if (colorFilter != null) {
      paint.colorFilter = colorFilter;
    }
    paint.color = new ui.Color.fromRGBO(0, 0, 0, ui.clampDouble(opacity, 0.0, 1.0));
    paint.filterQuality = filterQuality;
    paint.invertColors = invertColors;
    paint.blendMode = blendMode;
    let halfWidthDelta = (outputSize.width - destinationSize.width) / 2.0;
    let halfHeightDelta = (outputSize.height - destinationSize.height) / 2.0;
    let dx = halfWidthDelta + (flipHorizontally ? -alignment.x : alignment.x) * halfWidthDelta;
    let dy = halfHeightDelta + alignment.y * halfHeightDelta;
    let destinationPosition = rect.topLeft.translate(dx, dy);
    let destinationRect = destinationPosition['&'](destinationSize);
    let invertedCanvas = false;
    {
      let maxDevicePixelRatio = binding.PaintingBinding.instance.platformDispatcher.views[$fold](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true), 0.0, dart.fn((previousValue, view) => math.max(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double", true), previousValue, view.devicePixelRatio), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|double(core|double,ui|FlutterView)", true)));
      let sizeInfo = new debug.ImageSizeInfo.new({source: (t$363$1 = debugImageLabel, t$363$1 == null ? "<Unknown Image(" + dart.strSafe(image.width) + "×" + dart.strSafe(image.height) + ")>" : t$363$1), imageSize: new ui.Size.new(image.width[$toDouble](), image.height[$toDouble]()), displaySize: outputSize['*'](maxDevicePixelRatio)});
      if (!dart.fn(() => {
        let t$363;
        if (debug.debugInvertOversizedImages && sizeInfo.decodedSizeInBytes > sizeInfo.displaySizeInBytes + debug.debugImageOverheadAllowance) {
          let overheadInKilobytes = ((sizeInfo.decodedSizeInBytes - sizeInfo.displaySizeInBytes) / 1024)[$truncate]();
          let outputWidth = sizeInfo.displaySize.width[$toInt]();
          let outputHeight = sizeInfo.displaySize.height[$toInt]();
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: "Image " + dart.str(debugImageLabel) + " has a display size of " + dart.strSafe(outputWidth) + "×" + dart.strSafe(outputHeight) + " but a decode size of " + dart.strSafe(image.width) + "×" + dart.strSafe(image.height) + ", which uses an additional " + dart.strSafe(overheadInKilobytes) + "KB (assuming a device pixel ratio of " + dart.strSafe(maxDevicePixelRatio) + ").\n\n" + "Consider resizing the asset ahead of time, supplying a cacheWidth " + "parameter of " + dart.strSafe(outputWidth) + ", a cacheHeight parameter of " + dart.strSafe(outputHeight) + ", or using a ResizeImage.", library: "painting library", context: new assertions.ErrorDescription.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "flutter__src__foundation__assertions|ErrorDescription", true), "while painting an image")}));
          canvas.saveLayer(destinationRect, (t$363 = ui.Paint.new(), (() => {
            t$363.colorFilter = C[8] || CT.C8;
            return t$363;
          })()));
          let dy = -(rect.top + rect.height / 2.0);
          canvas.translate(0.0, -dy);
          canvas.scale(1.0, -1.0);
          canvas.translate(0.0, dy);
          invertedCanvas = true;
        }
        return true;
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true))()) dart.assertFailed(null, I[6], 618, 12, "() {\r\n      if (debugInvertOversizedImages &&\r\n          sizeInfo.decodedSizeInBytes > sizeInfo.displaySizeInBytes + debugImageOverheadAllowance) {\r\n        final int overheadInKilobytes = (sizeInfo.decodedSizeInBytes - sizeInfo.displaySizeInBytes) ~/ 1024;\r\n        final int outputWidth = sizeInfo.displaySize.width.toInt();\r\n        final int outputHeight = sizeInfo.displaySize.height.toInt();\r\n        FlutterError.reportError(FlutterErrorDetails(\r\n          exception: 'Image $debugImageLabel has a display size of '\r\n            '$outputWidth×$outputHeight but a decode size of '\r\n            '${image.width}×${image.height}, which uses an additional '\r\n            '${overheadInKilobytes}KB (assuming a device pixel ratio of '\r\n            '$maxDevicePixelRatio).\\n\\n'\r\n            'Consider resizing the asset ahead of time, supplying a cacheWidth '\r\n            'parameter of $outputWidth, a cacheHeight parameter of '\r\n            '$outputHeight, or using a ResizeImage.',\r\n          library: 'painting library',\r\n          context: ErrorDescription('while painting an image'),\r\n        ));\r\n        // Invert the colors of the canvas.\r\n        canvas.saveLayer(\r\n          destinationRect,\r\n          Paint()..colorFilter = const ColorFilter.matrix(<double>[\r\n            -1,  0,  0, 0, 255,\r\n             0, -1,  0, 0, 255,\r\n             0,  0, -1, 0, 255,\r\n             0,  0,  0, 1,   0,\r\n          ]),\r\n        );\r\n        // Flip the canvas vertically.\r\n        final double dy = -(rect.top + rect.height / 2.0);\r\n        canvas.translate(0.0, -dy);\r\n        canvas.scale(1.0, -1.0);\r\n        canvas.translate(0.0, dy);\r\n        invertedCanvas = true;\r\n      }\r\n      return true;\r\n    }()");
      if (!decoration_image._lastFrameImageSizeInfo.contains(sizeInfo)) {
        let existingSizeInfo = decoration_image._pendingImageSizeInfo[$_get](sizeInfo.source);
        if (existingSizeInfo == null || existingSizeInfo.displaySizeInBytes < sizeInfo.displaySizeInBytes) {
          decoration_image._pendingImageSizeInfo[$_set](dart.nullCheck(sizeInfo.source), sizeInfo);
        }
        t$363$2 = debug.debugOnPaintImage;
        t$363$2 == null ? null : t$363$2(sizeInfo);
        binding$.SchedulerBinding.instance.addPostFrameCallback(dart.fn(timeStamp => {
          decoration_image._lastFrameImageSizeInfo = decoration_image._pendingImageSizeInfo[$values][$toSet]();
          if (decoration_image._pendingImageSizeInfo[$isEmpty]) {
            return;
          }
          developer.postEvent("Flutter.ImageSizesForFrame", (() => {
            let t$363 = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,core|Object>", true));
            for (let imageSizeInfo of decoration_image._pendingImageSizeInfo[$values])
              t$363[$_set](dart.nullCheck(imageSizeInfo.source), imageSizeInfo.toJson());
            return t$363;
          })());
          decoration_image._pendingImageSizeInfo = new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,flutter__src__painting__debug|ImageSizeInfo>", true));
        }, dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Duration)", true)), {debugLabel: "paintImage.recordImageSizes"});
      }
    }
    let needSave = centerSlice != null || repeat !== decoration_image.ImageRepeat.noRepeat || flipHorizontally;
    if (needSave) {
      canvas.save();
    }
    if (repeat !== decoration_image.ImageRepeat.noRepeat) {
      canvas.clipRect(rect);
    }
    if (flipHorizontally) {
      let dx = -(rect.left + rect.width / 2.0);
      canvas.translate(-dx, 0.0);
      canvas.scale(-1.0, 1.0);
      canvas.translate(dx, 0.0);
    }
    if (centerSlice == null) {
      let sourceRect = alignment.inscribe(sourceSize, ui.Offset.zero['&'](inputSize));
      if (repeat === decoration_image.ImageRepeat.noRepeat) {
        canvas.drawImageRect(image, sourceRect, destinationRect, paint);
      } else {
        for (let tileRect of decoration_image._generateImageTileRects(rect, destinationRect, repeat)) {
          canvas.drawImageRect(image, sourceRect, tileRect, paint);
        }
      }
    } else {
      canvas.scale(1 / scale);
      if (repeat === decoration_image.ImageRepeat.noRepeat) {
        canvas.drawImageNine(image, decoration_image._scaleRect(centerSlice, scale), decoration_image._scaleRect(destinationRect, scale), paint);
      } else {
        for (let tileRect of decoration_image._generateImageTileRects(rect, destinationRect, repeat)) {
          canvas.drawImageNine(image, decoration_image._scaleRect(centerSlice, scale), decoration_image._scaleRect(tileRect, scale), paint);
        }
      }
    }
    if (needSave) {
      canvas.restore();
    }
    if (invertedCanvas) {
      canvas.restore();
    }
  };
  decoration_image._generateImageTileRects = function _generateImageTileRects(outputRect, fundamentalRect, repeat) {
    let startX = 0;
    let startY = 0;
    let stopX = 0;
    let stopY = 0;
    let strideX = fundamentalRect.width;
    let strideY = fundamentalRect.height;
    if (repeat === decoration_image.ImageRepeat.repeat || repeat === decoration_image.ImageRepeat.repeatX) {
      startX = ((outputRect.left - fundamentalRect.left) / strideX)[$floor]();
      stopX = ((outputRect.right - fundamentalRect.right) / strideX)[$ceil]();
    }
    if (repeat === decoration_image.ImageRepeat.repeat || repeat === decoration_image.ImageRepeat.repeatY) {
      startY = ((outputRect.top - fundamentalRect.top) / strideY)[$floor]();
      stopY = ((outputRect.bottom - fundamentalRect.bottom) / strideY)[$ceil]();
    }
    return (() => {
      let t$364 = _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<ui|Rect>", true), []);
      for (let i = startX; i <= stopX; i = i + 1)
        for (let j = startY; j <= stopY; j = j + 1)
          t$364.push(fundamentalRect.shift(new ui.Offset.new(i * strideX, j * strideY)));
      return t$364;
    })();
  };
  decoration_image._scaleRect = function _scaleRect(rect, scale) {
    return new ui.Rect.fromLTRB(rect.left * scale, rect.top * scale, rect.right * scale, rect.bottom * scale);
  };
  dart.defineLazy(decoration_image, {
    /*decoration_image._pendingImageSizeInfo*/get _pendingImageSizeInfo() {
      return new _js_helper.IdentityMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|IdentityMap<core|String,flutter__src__painting__debug|ImageSizeInfo>", true));
    },
    set _pendingImageSizeInfo(value) {},
    /*decoration_image._lastFrameImageSizeInfo*/get _lastFrameImageSizeInfo() {
      return collection.LinkedHashSet.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|LinkedHashSet<flutter__src__painting__debug|ImageSizeInfo>", true));
    },
    set _lastFrameImageSizeInfo(value) {}
  });
  dart.moduleConstCaches.set("packages/flutter/src/painting/decoration_image.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__painting__decoration_image|ImageRepeat":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__painting__image_provider|ImageProvider":{"ImageProvider.T":"1"},"ui|ColorFilter":{"ui|ImageFilter":[]},"flutter__src__painting__box_fit|BoxFit":{"core|_Enum":[],"core|Enum":[]},"ui|FilterQuality":{"core|_Enum":[],"core|Enum":[]},"flutter__src__painting__decoration_image|_DecorationImagePainter":{"flutter__src__painting__decoration_image|DecorationImagePainter":[]},"flutter__src__foundation__assertions|ErrorSummary":{"flutter__src__foundation__assertions|_ErrorDiagnostic":[],"DiagnosticsProperty.T":"core|List<core|Object>","flutter__src__foundation__diagnostics|DiagnosticsProperty":["core|List<core|Object>"],"flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"flutter__src__foundation__assertions|_ErrorDiagnostic":{"DiagnosticsProperty.T":"core|List<core|Object>","flutter__src__foundation__diagnostics|DiagnosticsProperty":["core|List<core|Object>"],"flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"flutter__src__foundation__diagnostics|DiagnosticsProperty":{"DiagnosticsProperty.T":"1","flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"flutter__src__foundation__assertions|ErrorDescription":{"flutter__src__foundation__assertions|_ErrorDiagnostic":[],"DiagnosticsProperty.T":"core|List<core|Object>","flutter__src__foundation__diagnostics|DiagnosticsProperty":["core|List<core|Object>"],"flutter__src__foundation__diagnostics|DiagnosticsNode":[]},"ui|BlendMode":{"core|_Enum":[],"core|Enum":[]},"flutter__src__painting__image_stream|ImageStream":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__painting__decoration_image|_BlendedDecorationImage":{"flutter__src__painting__decoration_image|DecorationImage":[]},"flutter__src__painting__decoration_image|_BlendedDecorationImagePainter":{"flutter__src__painting__decoration_image|DecorationImagePainter":[]},"collection|LinkedHashSet":{"LinkedHashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"ui|Offset":{"ui|OffsetBase":[]},"ui|Size":{"ui|OffsetBase":[]},"_js_helper|IdentityMap":{"IdentityMap.K":"1","IdentityMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"core|Duration":{"Comparable.T":"core|Duration","core|Comparable":["core|Duration"]}}'));
  dart.trackLibraries("packages/flutter/src/painting/decoration_image.dart", {
    "package:flutter/src/painting/decoration_image.dart": decoration_image
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["decoration_image.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwCA;;;AAZK;;EAYL;;;;;;;;MAZK,mCAAM;;;MAET,mCAAM;;;MAGN,oCAAO;;;MAGP,oCAAO;;;MAGP,qCAAQ;;;;;;;;;;;;;;;;;;;;;IA8BY;;;;;;IAGM;;;;;;IAGP;;;;;;IAQL;;;;;;IA2BU;;;;;;IAiBZ;;;;;;IAIM;;;;;;IASP;;;;;;IAME;;;;;;IAOA;;;;;;IAKO;;;;;;IAWT;;;;;;IAKA;;;;;;;;;;;;;;;;;;;;;;kBAOuC;AAChD,YAA+B,iDAAE,MAAM,SAAS;IAClD;YAGwB;;AACtB,UAAI,AAAU,SAAM,KAAK;AACvB,cAAO;;AAET,uBAAU,iBAAN,KAAK,oBAAgB;AACvB,cAAO;;AAET,YAAa,AAYT,yHAZG,KAAK,KACO,YAAZ,AAAM,KAAD,QAAU,eACG,YAAlB,AAAM,KAAD,cAAgB,qBACrB,AAAM,AAAI,KAAL,QAAQ,YACG,YAAhB,AAAM,KAAD,YAAc,mBACD,YAAlB,AAAM,KAAD,cAAgB,qBACrB,AAAM,AAAO,KAAR,YAAW,eAChB,AAAM,AAAmB,KAApB,wBAAuB,2BAC5B,AAAM,AAAM,KAAP,WAAU,cACf,AAAM,AAAQ,KAAT,aAAY,gBACjB,AAAM,AAAc,KAAf,mBAAkB,sBACvB,AAAM,AAAa,KAAd,kBAAiB,qBACtB,AAAM,AAAY,KAAb,iBAAgB;IAC9B;;AAGoB,YAAO,kBACzB,YACA,kBACA,UACA,gBACA,kBACA,aACA,yBACA,YACA,cACA,oBACA,mBACA;IACD;;AAIoB,uBAAqB;qJACpC;AACF,YAAI,0BACY,oBAAZ;AACJ,YAAI,sBACE,AAAI,aAAU,uBAAQ,+BACtB,AAAI,aAAU,4BAAa,AAAY,2BACrC,oBAAJ;AACQ,4BAAV;AACF,YAAI,0BACyB,WAA3B,2BAAe;AACjB,YAAI,gBAAsB,uCACf,oBAAP;AACJ,YAAI,yBACF;AACiC,mBAAnC,WAAS,AAAM,6BAAgB;AACQ,mBAAvC,aAAW,AAAQ,+BAAgB;AACnB,4BAAd;AACF,YAAI,mBACF;AACF,YAAI,kBACF;;;AAEJ,YAAU,0BAAkB,MAAM,qBAAmB,MAAG,AAAW,UAAD,QAAM,QAAM;IAChF;gBAc8C,GAAoB,GAAU;AAC1E,UAAI,AAAU,CAAC,IAAE,CAAC,IAAK,AAAE,CAAD,KAAI;AAC1B,cAAO,EAAC;;AAEV,UAAI,AAAE,CAAD,KAAI;AACP,cAAO,EAAC;;AAEV,YAAO,kDAAwB,CAAC,EAAE,CAAC,EAAE,CAAC;IACxC;;;QA9NgB;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAZS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6PJ;;;;;;;;;;;;UAsBoB,QAAa,MAAY,UAA6B;;UAAwB;UAAuB;AAChH,6BAAmB;AACxB,UAAI,AAAS;AACX,aAAO,AAeN;AAZC,cAAI,AAAc,AAAc,aAAf;AACf,uBAAmB,sCAA2B,kKAC5C,6IAAa,2FACb,yRAIA,uNAAqC,2BAA2B,yBAAsC,kDACtG,wNAAwC,8BAA8B,aAAa,UAA8B;;AAGrH,gBAAO;;AAET,YAAI,AAAc,AAAc,aAAf,mBAAgC;AAC/C,6BAAmB;;;AAIL,2BAAiB,AAAS,AAAM,8BAAQ,aAAa;AACvE,uBAAI,AAAe,cAAD,mDAAQ,OAAc;AACZ,uBAAW,mDACnC,+BACS,AAAS;AAEpB;gCAAc,sBAAe,QAAQ;AACrC,6BAAe,cAAc;AACf,QAAF,eAAZ,gCAA0B,QAAQ;;AAEpC,UAAI,AAAO;AACT;;AAGF,UAAI,QAAQ;AACH,QAAP,MAAM;AACC,QAAP,MAAM,UAAU,QAAQ;;AAG1B,2CACU,MAAM,QACR,IAAI,SACG,AAAE,eAAR,sCACgB,AAAE,eAAR,iCACV,AAAS,wBAAc,AAAE,eAAR,kCACX,AAAS,kCACjB,AAAS,gCACH,AAAS,AAAU,kCAAQ,AAAc,aAAD,8BACtC,AAAS,qCACd,AAAS,0CACC,gBAAgB,WACzB,AAAS,0BAAU,KAAK,iBAClB,AAAS,6CACV,AAAS,2CACV,AAAS,wCACX,SAAS;AAGtB,UAAI,QAAQ;AACH,QAAP,MAAM;;IAEV;mBAE4B,OAAY;;AACtC,UAAW,YAAP,cAAU,KAAK;AACjB;;AAEF,UAAI,wBAAwB,AAAE,eAAR,wBAAkB,KAAK;AACrC,QAAN,KAAK;AACL;;AAEF;6BAAQ;AACR,qBAAS,KAAK;AACd,WAAK,eAAe;AACR,QAAV;;IAEJ;;;AAIE;AACoC,QAAT,qFAAwC;;AAEnE;6BAAc,qBAAe,mDAC3B,+BACS,AAAS;AAEpB;8BAAQ;AACR,qBAAS;IACX;;AAIE,YAAU,0BAAkB,MAAM,4BAA0B,uBAAU,sBAAY,uBAAU,gBAAM,oBAAO;IAC3G;;0DArH+B,UAAe;IAejC;IACF;IAhBoB;IAAe;AAG5C;AACoC,MAAT,qFACd,4CACI,8KACL;;EAGd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2auB;;;;;;IACA;;;;;;IACV;;;;;;;;;;;AAGc,uDAAG;YAAH,kBAAa,AAAE,eAAH;IAAQ;;;AAEZ,uDAAG;YAAH,kBAAe,AAAE,eAAH;IAAU;;;AAE3B,uDAAG;YAAH,kBAAmB,AAAE,eAAH;IAAc;;;AAE7C,uDAAG;YAAH,kBAAW,AAAE,eAAH;IAAM;;;AAEA,uDAAG;YAAH,kBAAiB,AAAE,eAAH;IAAY;;;AAEtC,uDAAG;YAAH,kBAAmB,AAAE,eAAH;IAAc;;;AAE/B,uDAAG;YAAH,kBAAc,AAAE,eAAH;IAAS;;;AAEjB,uDAAG;YAAH,kBAA0B,AAAE,eAAH;IAAqB;;;AAEzD,uDAAG;YAAH,kBAAa,AAAE,eAAH;IAAQ;;;AAElB,uDAAG;YAAH,kBAAe,AAAE,eAAH;IAAU;;;AAEX,uDAAG;YAAH,kBAAqB,AAAE,eAAH;IAAgB;;;AAE9C,uDAAG;YAAH,kBAAoB,AAAE,eAAH;IAAe;;;AAEnC,uDAAG;YAAH,kBAAmB,AAAE,eAAH;IAAc;kBAGN;;AAChD,YAAsC,yFACpC,OAAG,oBAAc,SAAS,uCAC1B,OAAG,qBAAc,SAAS,IAC1B;IAEJ;YAGwB;;AACtB,UAAI,AAAU,SAAM,KAAK;AACvB,cAAO;;AAET,uBAAU,iBAAN,KAAK,oBAAgB;AACvB,cAAO;;AAET,YAAa,AAGT,iIAHG,KAAK,KACG,YAAR,AAAM,KAAD,IAAM,WACH,YAAR,AAAM,KAAD,IAAM,WACX,AAAM,AAAE,KAAH,OAAM;IACpB;;AAGoB,YAAO,kBAAK,QAAG,QAAG;IAAE;;AAItC,YAAU,0BAAkB,MAAM,6BAA2B,eAAE,UAAC,gBAAG,UAAC,oBAAG,UAAC;IAC1E;;2DA9DmC,GAAQ,GAAQ;IAAhB;IAAQ;IAAQ;UAAY,AAAU,CAAT,YAAY,CAAC;;EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAmFpE,QAAa,MAAY,UAA6B;;UAAwB;UAAuB;AAC9G,MAAP,MAAM,WAAW,MAAM;AACvB;6BAAG,YAAM,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,UAAS,KAAK,IAAI,MAAM,oBAAe,SAAS;AAC9F;8BAAG,aAAM,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,UAAS,KAAK,GAAG,mBAAc,AAAE,iBAAoB,oBAAO,SAAS;AAC5G,MAAP,MAAM;IACR;;;AAIE;AACoC,QAAT,qFAAwC;;AAEnE;6BAAG;AACH;8BAAG;IACL;;AAIE,YAAU,0BAAkB,MAAM,oCAAkC,eAAE,UAAC,gBAAG,UAAC,oBAAG,UAAC;IACjF;;iEApCsC,GAAQ,GAAQ;IAAhB;IAAQ;IAAQ;AAGpD;AACoC,MAAT,qFACd,4CACI,qLACL;;EAGd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1XA,SAAO,AAGN;AAFC,iDAAyC;AACzC,YAAO;;EAEX;;;QAoEkB;QACF;QACI;QACV;QACD;QACA;QACM;QACL;QACE;QACJ;QACM;QACP;QACA;QACS;QACT;QACK;AAEV,oBACoD,kBAAlD,AAAM,KAAD,kDAAC,OAAiC,qBAAjC,iBAA+C;AAKvD,QAAI,AAAK,IAAD;AACN;;AAEG,qBAAa,AAAK,IAAD;AACjB,oBAAY,gBAAK,AAAM,AAAM,KAAP,qBAAmB,AAAM,AAAO,KAAR;AAC3C;AACR,QAAI,WAAW;AACb,oBAAmD,yEAArC,AAAU,AAAQ,SAAT,MAAG,KAAK,OAAG,AAAY,WAAD;AAC7C,mBAAsC,uEAAzB,AAAW,UAAD,MAAG,WAAW;AACrC,kBAA4C,uEAAhC,AAAU,SAAD,MAAG,AAAY,WAAD,MAAG,KAAK;;AAEzC,IAAJ,GAAG,WAAyB,MAApB,AAAY,WAAD,WAAkB,2BAAmB,sBAApD;AACJ,UAAO,AAAY,AAAQ,WAAT,YAAa,GAAG,KAAW,uBAAQ,GAAG,KAAW;AACjD,sBAAc,oBAAY,GAAG,EAAE,AAAU,SAAD,MAAG,KAAK,GAAE,UAAU;AACnE,qBAAa,AAAY,AAAO,WAAR,aAAU,KAAK;AAC7C,0BAAkB,AAAY,WAAD;AAClC,QAAI,WAAW;AACb,mBAAA,AAAW,UAAD,MAAe,eAAX,WAAW;AACzB,wBAAA,AAAgB,eAAD,MAAI,WAAW;AAG9B,WAAkB,YAAX,UAAU,EAAI,SAAS,qBAAE;;AAGlC,QAAI,MAAM,KAAgB,yCAA4B,YAAhB,eAAe,EAAI,UAAU;AAGjE,eAAqB;;AAEX,2CAAQ;AAAS,4BAAc,WAAW;;;AACtD,QAAI,WAAW;AACP,MAAN,KAAK,eAAe,WAAW;;AAE3B,IAAN,KAAK,SAAe,sBAAS,GAAG,GAAG,GAAG,eAAY,OAAO,EAAE,KAAK;AAC1D,IAAN,KAAK,iBAAiB,aAAa;AAC7B,IAAN,KAAK,gBAAgB,YAAY;AAC3B,IAAN,KAAK,aAAa,SAAS;AACd,0BAAkB,AAAW,UAAD,SAAS,AAAgB,eAAD,UAAU;AAC9D,2BAAmB,AAAW,UAAD,UAAU,AAAgB,eAAD,WAAW;AACjE,aAAK,cAAc,IAAI,gBAAgB,GAAG,CAAC,AAAU,SAAD,KAAK,AAAU,SAAD,EAA3B,IAAiC,cAAc;AACtF,aAAK,eAAe,GAAG,AAAU,SAAD,KAAK,eAAe;AACpD,8BAAsB,AAAK,AAAQ,IAAT,mBAAmB,EAAE,EAAE,EAAE;AACrD,0BAAkB,AAAoB,mBAAD,MAAG,eAAe;AAG7D,yBAAiB;AAQtB;AAOe,gCAAsC,AAAS,AAAmB,AAAM,wIACnF,KACA,SAAQ,eAA8B,SAAc,gFAAI,aAAa,EAAE,AAAK,IAAD;AAEzD,qBAAW,sCAEL,UAAhB,eAAe,EAAf,kBAAmB,iCAAkB,AAAM,KAAD,UAAO,mBAAG,AAAM,KAAD,WAAQ,4BAC9D,gBAAK,AAAM,AAAM,KAAP,qBAAmB,AAAM,AAAO,KAAR,oCAChC,AAAW,UAAD,MAAG,mBAAmB;AAE/C,WAAO,AAoCN;;AAnCC,YAAI,oCACA,AAAS,QAAD,sBAAsB,AAAS,QAAD,sBAAsB;AACpD,oCAAkF,EAA3D,AAAS,QAAD,sBAAsB,AAAS,QAAD,uBAAwB;AACrF,4BAAc,AAAS,AAAY,AAAM,QAAnB;AACtB,6BAAe,AAAS,AAAY,AAAO,QAApB;AACpB,8CAAY,mDACZ,oBAAQ,eAAe,6CAC9B,WAAW,uBAAE,YAAY,4CACxB,AAAM,KAAD,UAAO,mBAAG,AAAM,KAAD,WAAQ,6CAC5B,mBAAmB,IAAC,uDACrB,mBAAmB,eACrB,uEACA,+BAAe,WAAW,mDACxB,YAAY,0CACP,6BACA,qJAAiB;AAGrB,UAAP,MAAM,WACJ,eAAe,2BACf;AAAS;;;AAQE,mBAAK,EAAE,AAAK,IAAD,OAAO,AAAK,IAAD,UAAU;AACtC,UAAP,MAAM,WAAW,KAAK,CAAC,EAAE;AAClB,UAAP,MAAM,OAAO,KAAK,CAAC;AACZ,UAAP,MAAM,WAAW,KAAK,EAAE;AACxB,2BAAiB;;AAEnB,cAAO;;AAGT,WAAK,AAAwB,kDAAS,QAAQ;AACvB,+BAAmB,AAAqB,8CAAC,AAAS,QAAD;AACtE,YAAI,AAAiB,gBAAD,YAAY,AAAiB,gBAAD,sBAAsB,AAAS,QAAD;AACvD,UAArB,8CAAqC,eAAf,AAAS,QAAD,UAAY,QAAQ;;AAEpD;iCAAmB,QAAK,QAAQ;AACN,QAAT,wDAA8B,QAAU;AACvD,qDAA0B,AAAsB,AAAO;AACvD,cAAI,AAAsB;AACxB;;AAEQ,8BACR,8BACgB;;AACd,qBAAyB,gBAAiB,AAAsB;AACzC,2BAAD,eAApB,AAAc,aAAD,UAAU,AAAc,aAAD;;;AAG1C,mDAA+C;qGAClC;;;AAIR,mBAAW,AAAsD,WAA3C,YAAY,MAAM,KAAgB,yCAAY,gBAAgB;AAC/F,QAAI,QAAQ;AACH,MAAP,MAAM;;AAER,QAAI,MAAM,KAAgB;AACjB,MAAP,MAAM,UAAU,IAAI;;AAEtB,QAAI,gBAAgB;AACL,eAAK,EAAE,AAAK,IAAD,QAAQ,AAAK,IAAD,SAAS;AACtC,MAAP,MAAM,WAAW,CAAC,EAAE,EAAE;AACf,MAAP,MAAM,OAAO,CAAC,KAAK;AACZ,MAAP,MAAM,WAAW,EAAE,EAAE;;AAEvB,QAAI,AAAY,WAAD;AACF,uBAAa,AAAU,SAAD,UAC/B,UAAU,EAAS,AAAK,oBAAE,SAAS;AAErC,UAAI,AAAO,MAAD,KAAgB;AACjB,QAAP,MAAM,eAAe,KAAK,EAAE,UAAU,EAAE,eAAe,EAAE,KAAK;;AAE9D,iBAAgB,WAAY,0CAAwB,IAAI,EAAE,eAAe,EAAE,MAAM;AACxE,UAAP,MAAM,eAAe,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK;;;;AAIpD,MAAP,MAAM,OAAO,IAAI,KAAK;AACtB,UAAI,AAAO,MAAD,KAAgB;AACjB,QAAP,MAAM,eAAe,KAAK,EAAE,4BAAW,WAAW,EAAE,KAAK,GAAG,4BAAW,eAAe,EAAE,KAAK,GAAG,KAAK;;AAErG,iBAAgB,WAAY,0CAAwB,IAAI,EAAE,eAAe,EAAE,MAAM;AACxE,UAAP,MAAM,eAAe,KAAK,EAAE,4BAAW,WAAW,EAAE,KAAK,GAAG,4BAAW,QAAQ,EAAE,KAAK,GAAG,KAAK;;;;AAIpG,QAAI,QAAQ;AACH,MAAP,MAAM;;AAGR,QAAI,cAAc;AACT,MAAP,MAAM;;EAEV;8EAE4C,YAAiB,iBAA6B;AACpF,iBAAS;AACT,iBAAS;AACT,gBAAQ;AACR,gBAAQ;AACC,kBAAU,AAAgB,eAAD;AACzB,kBAAU,AAAgB,eAAD;AAEtC,QAAI,AAAO,MAAD,KAAgB,uCAAU,AAAO,MAAD,KAAgB;AACxD,eAA8D,EAAnD,AAAW,UAAD,QAAQ,AAAgB,eAAD,SAAS,OAAO;AAC5D,cAA+D,EAArD,AAAW,UAAD,SAAS,AAAgB,eAAD,UAAU,OAAO;;AAG/D,QAAI,AAAO,MAAD,KAAgB,uCAAU,AAAO,MAAD,KAAgB;AACxD,eAA4D,EAAjD,AAAW,UAAD,OAAO,AAAgB,eAAD,QAAQ,OAAO;AAC1D,cAAiE,EAAvD,AAAW,UAAD,UAAU,AAAgB,eAAD,WAAW,OAAO;;AAGjE,UAAa;;AACX,eAAS,IAAI,MAAM,EAAE,CAAC,IAAI,KAAK,EAAE,IAAE,CAAC,GAAH;AAC/B,iBAAS,IAAI,MAAM,EAAE,CAAC,IAAI,KAAK,EAAE,IAAE,CAAC,GAAH;AACf,qBAAhB,eAAe,OAAO,kBAAO,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO;;;EAE7D;oDAEqB,MAAa;AAAU,UAAK,sBAAS,AAAK,IAAD,QAAQ,KAAK,EAAE,AAAK,IAAD,OAAO,KAAK,EAAE,AAAK,IAAD,SAAS,KAAK,EAAE,AAAK,IAAD,UAAU,KAAK;EAAC;;MAlT5G,sCAAqB;YAA0B;;;MAKvD,wCAAuB;YAAkB","file":"../../../../../../../../../../packages/flutter/src/painting/decoration_image.dart.lib.js"}');
  // Exports:
  return {
    src__painting__decoration_image: decoration_image
  };
}));

//# sourceMappingURL=decoration_image.dart.lib.js.map
